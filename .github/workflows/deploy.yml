name: Build DocC and Deploy (gh-pages)

on:
  push:
    branches: [ "main" ]

# peaceiris 사용 시 pages/id-token 권한은 불필요
permissions:
  contents: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    name: Generate Documentation and Deploy
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      # ✅ 요청대로 유지
      - name: Set up Swift 6.1
        uses: fwal/setup-swift@v2
        with:
          swift-version: "6.1.0"

      # DocC 안정적 빌드를 위해 Xcode도 준비 (docc 바이너리 제공)
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.0.0"

      - name: Show toolchain versions (debug)
        run: |
          swift --version
          xcrun --find docc || true
          xcodebuild -version

      - name: Generate documentation
        env:
          # ⬇️ 프로젝트 페이지(일반 저장소)라면 저장소 이름과 동일하게
          TARGET_NAME: DiContainer
          HOSTING_BASE_PATH: DiContainer
          IS_USER_SITE: "true"  # username.github.io 저장소(사용자 페이지)면 "true"
        run: |
          chmod +x ./GENERATE_DOCS.sh
          ./GENERATE_DOCS.sh
          # (스크립트에서 생성 안 하면 대비용)
          touch ./docs/.nojekyll

      - name: Deploy to GitHub Pages (gh-pages)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          # publish_branch: gh-pages
          # commit_message: "Update DocC"
