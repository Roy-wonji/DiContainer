{"includedArchiveIdentifiers":["DiContainer"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/appdicontainer\/repositoryfactory","title":"var repositoryFactory: RepositoryModuleFactory","type":"property"},{"path":"\/documentation\/dicontainer\/appdicontainer\/usecasefactory","title":"var useCaseFactory: UseCaseModuleFactory","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/appdicontainer\/registerdependencies(registermodules:)","title":"func registerDependencies(registerModules: (Container) async -> Void) async","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/appdicontainer\/shared","title":"static let shared: AppDIContainer","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/appdicontainer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/dicontainer\/appdicontainer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/dicontainer\/appdicontainer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/dicontainer\/appdicontainer\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/appdicontainer","title":"AppDIContainer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/container\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/container\/build()","title":"func build() async","type":"method"},{"path":"\/documentation\/dicontainer\/container\/callasfunction(_:)","title":"func callAsFunction(() -> Void) -> Self","type":"method"},{"path":"\/documentation\/dicontainer\/container\/register(_:)","title":"func register(Module) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/container\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/dicontainer\/container\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/dicontainer\/container\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/dicontainer\/container\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/container","title":"Container","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/register(_:build:)","title":"func register<T>(T.Type, build: () -> T) -> () -> Void","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/register(_:instance:)","title":"func register<T>(T.Type, instance: T)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/release(_:)","title":"func release<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/resolve(_:)","title":"func resolve<T>(T.Type) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/resolveordefault(_:default:)","title":"func resolveOrDefault<T>(T.Type, default: @autoclosure () -> T) -> T","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/subscript(_:)","title":"subscript<T>(KeyPath<DependencyContainer, T>) -> T?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/live","title":"static let live: DependencyContainer","type":"property"}],"path":"\/documentation\/dicontainer\/dependencycontainer","title":"DependencyContainer","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/repositorymodulefactoryprotocol\/registermodule","title":"var registerModule: RegisterModule","type":"property"},{"path":"\/documentation\/dicontainer\/repositorymodulefactoryprotocol\/repositorydefinitions","title":"var repositoryDefinitions: [() -> Module]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/dicontainer\/repositorymodulefactoryprotocol\/makeallmodules()-8hujc","title":"func makeAllModules() -> [Module]","type":"method"}],"title":"RepositoryModuleFactoryProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/dicontainer\/repositorymodulefactoryprotocol\/makeallmodules()","title":"func makeAllModules() -> [Module]","type":"method"}],"path":"\/documentation\/dicontainer\/repositorymodulefactoryprotocol","title":"RepositoryModuleFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol\/registermodule","title":"var registerModule: RegisterModule","type":"property"},{"path":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol\/usecasedefinitions","title":"var useCaseDefinitions: [() -> Module]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol\/makeallmodules()-5z1ty","title":"func makeAllModules() -> [Module]","type":"method"}],"title":"UseCaseModuleFactoryProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol\/makeallmodules()","title":"func makeAllModules() -> [Module]","type":"method"}],"path":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","title":"UseCaseModuleFactoryProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/containerresgister\/init(_:)","title":"init(KeyPath<DependencyContainer, T?>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/containerresgister\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/dicontainer\/containerresgister","title":"ContainerResgister","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/factory\/init(_:)","title":"init(WritableKeyPath<FactoryValues, T>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/factory\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/dicontainer\/factory","title":"Factory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/factoryvalues\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/factoryvalues\/repositoryfactory","title":"var repositoryFactory: RepositoryModuleFactory","type":"property"},{"path":"\/documentation\/dicontainer\/factoryvalues\/usecasefactory","title":"var useCaseFactory: UseCaseModuleFactory","type":"property"}],"path":"\/documentation\/dicontainer\/factoryvalues","title":"FactoryValues","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/module\/init(_:factory:)","title":"init<T>(T.Type, factory: () -> T)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/module\/register()","title":"func register() async","type":"method"}],"path":"\/documentation\/dicontainer\/module","title":"Module","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registermodule\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registermodule\/defaultinstance(for:fallback:)","title":"func defaultInstance<T>(for: T.Type, fallback: @autoclosure () -> T) -> T","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/makedependency(_:factory:)","title":"func makeDependency<T, U>(T.Type, factory: () -> U) -> () -> Module","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/makemodule(_:factory:)","title":"func makeModule<T>(T.Type, factory: () -> T) -> Module","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/makeusecasewithrepository(_:repositoryprotocol:repositoryfallback:factory:)","title":"func makeUseCaseWithRepository<UseCase, Repo>(UseCase.Type, repositoryProtocol: Repo.Type, repositoryFallback: @autoclosure () -> Repo, factory: (Repo) -> UseCase) -> () -> Module","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/resolveordefault(_:default:)","title":"func resolveOrDefault<T>(T.Type, default: @autoclosure () -> T) -> T","type":"method"}],"path":"\/documentation\/dicontainer\/registermodule","title":"RegisterModule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/repositorymodulefactory\/init(repositorydefinitions:)","title":"init(repositoryDefinitions: [() -> Module]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/repositorymodulefactory\/registermodule","title":"let registerModule: RegisterModule","type":"property"},{"path":"\/documentation\/dicontainer\/repositorymodulefactory\/repositorydefinitions","title":"var repositoryDefinitions: [() -> Module]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/repositorymodulefactory\/makeallmodules()","title":"func makeAllModules() -> [Module]","type":"method"}],"path":"\/documentation\/dicontainer\/repositorymodulefactory","title":"RepositoryModuleFactory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usecasemodulefactory\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usecasemodulefactory\/registermodule","title":"let registerModule: RegisterModule","type":"property"},{"path":"\/documentation\/dicontainer\/usecasemodulefactory\/usecasedefinitions","title":"var useCaseDefinitions: [() -> Module]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usecasemodulefactory\/makeallmodules()","title":"func makeAllModules() -> [Module]","type":"method"}],"path":"\/documentation\/dicontainer\/usecasemodulefactory\/usecasemodulefactoryprotocol-implementations","title":"UseCaseModuleFactoryProtocol Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/usecasemodulefactory","title":"UseCaseModuleFactory","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/swift\/sequence\/asyncforeach(_:)","title":"func asyncForEach((Self.Element) async throws -> Void) async rethrows","type":"method"}],"path":"\/documentation\/dicontainer\/swift\/sequence","title":"Sequence","type":"extension"}],"path":"\/documentation\/dicontainer\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/dicontainer","title":"DiContainer","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}