{"includedArchiveIdentifiers":["DiContainer"],"interfaceLanguages":{"swift":[{"children":[{"title":"시작하기","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/quickstart","title":"빠른 시작 가이드","type":"article"},{"path":"\/documentation\/dicontainer\/coreapis","title":"코어 API 가이드","type":"article"},{"path":"\/documentation\/dicontainer\/migration-2.0.0","title":"DiContainer 2.0.0 마이그레이션 가이드","type":"article"},{"path":"\/documentation\/dicontainer\/appdiintegration","title":"App DI Integration","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/modulefactorymanager","title":"var moduleFactoryManager: ModuleFactoryManager?","type":"property"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/repositoryfactory","title":"var repositoryFactory: RepositoryModuleFactory?","type":"property"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/scopefactory","title":"var scopeFactory: ScopeModuleFactory?","type":"property"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/usecasefactory","title":"var useCaseFactory: UseCaseModuleFactory?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/exportdependencygraph(to:format:)","title":"func exportDependencyGraph(to: URL, format: GraphExportFormat) throws","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/printdependencytree(_:maxdepth:)","title":"func printDependencyTree<T>(T.Type, maxDepth: Int)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/register(_:build:)","title":"func register<T>(T.Type, build: () -> T) -> () -> Void","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/register(_:instance:)","title":"func register<T>(T.Type, instance: T)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/release(_:)","title":"func release<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/resolve(_:)","title":"func resolve<T>(T.Type) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/resolveordefault(_:default:)","title":"func resolveOrDefault<T>(T.Type, default: @autoclosure () -> T) -> T","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/saferesolvewithcirculardetection(_:)","title":"func safeResolveWithCircularDetection<T>(T.Type) throws -> T","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/subscript(_:)","title":"subscript<T>(KeyPath<DependencyContainer, T?>) -> T?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/isbootstrapped","title":"static var isBootstrapped: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/live","title":"static var live: DependencyContainer","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrap(_:)","title":"static func bootstrap((DependencyContainer) -> Void) async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrapasync(_:)","title":"static func bootstrapAsync((DependencyContainer) async throws -> Void) async -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrapifneeded(_:)","title":"static func bootstrapIfNeeded((DependencyContainer) async throws -> Void) async -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrapintask(_:)","title":"static func bootstrapInTask((DependencyContainer) async throws -> Void)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrapmixed(sync:async:)","title":"static func bootstrapMixed(sync: (DependencyContainer) -> Void, async: (DependencyContainer) async -> Void) async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/ensurebootstrapped(file:line:)","title":"static func ensureBootstrapped(file: StaticString, line: UInt) async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/resetfortesting()","title":"static func resetForTesting() async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/update(_:)","title":"static func update((DependencyContainer) -> Void) async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/updateasync(_:)","title":"static func updateAsync((DependencyContainer) async -> Void) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/dicontainer\/dependencycontainer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/dependencycontainer","title":"DependencyContainer","type":"class"},{"title":"핵심 컴포넌트","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifieddi","title":"통합 DI 시스템 - UnifiedDI vs DI","type":"article"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/di\/legacyregister(_:_:)","title":"static func legacyRegister<T>(T.Type, () -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/di\/legacyresolve(_:)","title":"static func legacyResolve<T>(T.Type) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/di\/performancetest(_:iterations:)","title":"static func performanceTest<T>(T.Type, iterations: Int) -> TimeInterval","type":"method"},{"path":"\/documentation\/dicontainer\/di\/printdebuginfo()","title":"static func printDebugInfo() async","type":"method"},{"path":"\/documentation\/dicontainer\/di\/registermany(_:)","title":"static func registerMany(() -> [Registration])","type":"method"},{"path":"\/documentation\/dicontainer\/di\/registerwithtoken(_:factory:)","title":"static func registerWithToken<T>(T.Type, factory: () -> T) -> RegistrationToken","type":"method"}],"path":"\/documentation\/dicontainer\/di","title":"DI","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/modulefactorymanager","title":"var moduleFactoryManager: ModuleFactoryManager?","type":"property"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/repositoryfactory","title":"var repositoryFactory: RepositoryModuleFactory?","type":"property"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/scopefactory","title":"var scopeFactory: ScopeModuleFactory?","type":"property"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/usecasefactory","title":"var useCaseFactory: UseCaseModuleFactory?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/exportdependencygraph(to:format:)","title":"func exportDependencyGraph(to: URL, format: GraphExportFormat) throws","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/printdependencytree(_:maxdepth:)","title":"func printDependencyTree<T>(T.Type, maxDepth: Int)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/register(_:build:)","title":"func register<T>(T.Type, build: () -> T) -> () -> Void","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/register(_:instance:)","title":"func register<T>(T.Type, instance: T)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/release(_:)","title":"func release<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/resolve(_:)","title":"func resolve<T>(T.Type) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/resolveordefault(_:default:)","title":"func resolveOrDefault<T>(T.Type, default: @autoclosure () -> T) -> T","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/saferesolvewithcirculardetection(_:)","title":"func safeResolveWithCircularDetection<T>(T.Type) throws -> T","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/subscript(_:)","title":"subscript<T>(KeyPath<DependencyContainer, T?>) -> T?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/isbootstrapped","title":"static var isBootstrapped: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/live","title":"static var live: DependencyContainer","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrap(_:)","title":"static func bootstrap((DependencyContainer) -> Void) async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrapasync(_:)","title":"static func bootstrapAsync((DependencyContainer) async throws -> Void) async -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrapifneeded(_:)","title":"static func bootstrapIfNeeded((DependencyContainer) async throws -> Void) async -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrapintask(_:)","title":"static func bootstrapInTask((DependencyContainer) async throws -> Void)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrapmixed(sync:async:)","title":"static func bootstrapMixed(sync: (DependencyContainer) -> Void, async: (DependencyContainer) async -> Void) async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/ensurebootstrapped(file:line:)","title":"static func ensureBootstrapped(file: StaticString, line: UInt) async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/resetfortesting()","title":"static func resetForTesting() async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/update(_:)","title":"static func update((DependencyContainer) -> Void) async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/updateasync(_:)","title":"static func updateAsync((DependencyContainer) async -> Void) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/dicontainer\/dependencycontainer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/dependencycontainer","title":"DependencyContainer","type":"class"},{"path":"\/documentation\/dicontainer\/globalunifiedregistry","title":"let GlobalUnifiedRegistry: UnifiedRegistry","type":"var"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/inject\/init()","title":"init()","type":"init"},{"path":"\/documentation\/dicontainer\/inject\/init(_:)-1r50l","title":"init(T.Type)","type":"init"},{"path":"\/documentation\/dicontainer\/inject\/init(_:)-3j0j0","title":"init(KeyPath<DependencyContainer, T?>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/inject\/wrappedvalue-3breu","title":"var wrappedValue: T?","type":"property"},{"path":"\/documentation\/dicontainer\/inject\/wrappedvalue-71szo","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/dicontainer\/inject","title":"Inject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/requiredinject\/init()","title":"init()","type":"init"},{"path":"\/documentation\/dicontainer\/requiredinject\/init(_:)-4knm6","title":"init(KeyPath<DependencyContainer, T?>)","type":"init"},{"path":"\/documentation\/dicontainer\/requiredinject\/init(_:)-7g412","title":"init(T.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/requiredinject\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/dicontainer\/requiredinject","title":"RequiredInject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/factory\/init()","title":"init()","type":"init"},{"path":"\/documentation\/dicontainer\/factory\/init(_:)","title":"init(KeyPath<DependencyContainer, T?>)","type":"init"},{"path":"\/documentation\/dicontainer\/factory\/init(factory:)","title":"init(factory: () -> T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/factory\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/dicontainer\/factory","title":"Factory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/factoryvalues\/init(cached:factory:)","title":"init(cached: Bool, factory: () -> T)","type":"init"},{"path":"\/documentation\/dicontainer\/factoryvalues\/init(immediate:)","title":"init(immediate: () -> T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/factoryvalues\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/dicontainer\/factoryvalues","title":"FactoryValues","type":"struct"},{"path":"\/documentation\/dicontainer\/containerusage","title":"Container Usage","type":"article"},{"path":"\/documentation\/dicontainer\/containerperformance","title":"Container Performance","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/container\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/container\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/container\/modulecount","title":"var moduleCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/container\/build()","title":"func build() async","type":"method"},{"path":"\/documentation\/dicontainer\/container\/buildthrowing()","title":"func buildThrowing() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/container\/buildwithmetrics()","title":"func buildWithMetrics() async -> BuildMetrics","type":"method"},{"path":"\/documentation\/dicontainer\/container\/buildwithprogress(_:)","title":"func buildWithProgress((Double) -> Void) async","type":"method"},{"path":"\/documentation\/dicontainer\/container\/buildwithresults()","title":"func buildWithResults() async -> BuildResult","type":"method"},{"path":"\/documentation\/dicontainer\/container\/callasfunction(_:)","title":"func callAsFunction(() -> Void) -> Self","type":"method"},{"path":"\/documentation\/dicontainer\/container\/getmoduletypenames()","title":"func getModuleTypeNames() -> [String]","type":"method"},{"path":"\/documentation\/dicontainer\/container\/register(_:)","title":"func register(Module) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/container\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/dicontainer\/container\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/dicontainer\/container\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/dicontainer\/container\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/container","title":"Container","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/module\/init(_:factory:file:function:line:)","title":"init<T>(T.Type, factory: () -> T, file: StaticString, function: StaticString, line: UInt)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/module\/asadvanced(identifier:dependencies:condition:)","title":"func asAdvanced(identifier: String, dependencies: [String], condition: () -> Bool) -> ConditionalModule","type":"method"},{"path":"\/documentation\/dicontainer\/module\/register()","title":"func register() async","type":"method"},{"path":"\/documentation\/dicontainer\/module\/registerthrowing()","title":"func registerThrowing() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/module","title":"Module","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/appdicontainer\/repositoryfactory","title":"var repositoryFactory: RepositoryModuleFactory","type":"property"},{"path":"\/documentation\/dicontainer\/appdicontainer\/scopefactory","title":"var scopeFactory: ScopeModuleFactory","type":"property"},{"path":"\/documentation\/dicontainer\/appdicontainer\/usecasefactory","title":"var useCaseFactory: UseCaseModuleFactory","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/appdicontainer\/registerdependencies(registermodules:)","title":"func registerDependencies(registerModules: (Container) async -> Void) async","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/appdicontainer\/shared","title":"static let shared: AppDIContainer","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/appdicontainer\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/dicontainer\/appdicontainer\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/dicontainer\/appdicontainer\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/dicontainer\/appdicontainer\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/appdicontainer","title":"AppDIContainer","type":"class"},{"title":"고급 기능","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoresolution","title":"자동 의존성 해결","type":"article"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/isenabled","title":"static var isEnabled: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/shared","title":"static let shared: AutoDependencyResolver","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/disable()","title":"static func disable()","type":"method"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/enable()","title":"static func enable()","type":"method"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/excludetype(_:)","title":"static func excludeType<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/includetype(_:)","title":"static func includeType<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/resolve(_:)","title":"static func resolve<T>(T)","type":"method"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/resolveallinstances(of:)","title":"static func resolveAllInstances<T>(of: T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/resolveasync(_:)","title":"static func resolveAsync<T>(T) async","type":"method"},{"path":"\/documentation\/dicontainer\/autodependencyresolver\/resolvewithperformancetracking(_:)","title":"static func resolveWithPerformanceTracking<T>(T)","type":"method"}],"path":"\/documentation\/dicontainer\/autodependencyresolver","title":"AutoDependencyResolver","type":"class"},{"path":"\/documentation\/dicontainer\/pluginsystem","title":"플러그인 시스템","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/baseplugin\/init(identifier:version:description:priority:)","title":"init(identifier: String, version: String, description: String, priority: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/baseplugin\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/dicontainer\/baseplugin\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/dicontainer\/baseplugin\/isactive","title":"var isActive: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/baseplugin\/priority","title":"let priority: Int","type":"property"},{"path":"\/documentation\/dicontainer\/baseplugin\/version","title":"let version: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/baseplugin\/activate()","title":"func activate() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/baseplugin\/deactivate()","title":"func deactivate() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/baseplugin","title":"BasePlugin","type":"class"},{"path":"\/documentation\/dicontainer\/modulefactory","title":"Module Factory","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/repositorymodulefactory\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/repositorymodulefactory\/definitions","title":"var definitions: [() -> Module]","type":"property"},{"path":"\/documentation\/dicontainer\/repositorymodulefactory\/registermodule","title":"let registerModule: RegisterModule","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/repositorymodulefactory\/addrepository(_:factory:)","title":"func addRepository<T>(T.Type, factory: () -> T)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/repositorymodulefactory\/makeallmodules()","title":"func makeAllModules() -> [Module]","type":"method"}],"path":"\/documentation\/dicontainer\/repositorymodulefactory\/modulefactory-implementations","title":"ModuleFactory Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/repositorymodulefactory","title":"RepositoryModuleFactory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usecasemodulefactory\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usecasemodulefactory\/definitions","title":"var definitions: [() -> Module]","type":"property"},{"path":"\/documentation\/dicontainer\/usecasemodulefactory\/registermodule","title":"let registerModule: RegisterModule","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usecasemodulefactory\/addusecase(_:repositorytype:repositoryfallback:factory:)","title":"func addUseCase<UseCase, Repo>(UseCase.Type, repositoryType: Repo.Type, repositoryFallback: () -> Repo, factory: (Repo) -> UseCase)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usecasemodulefactory\/makeallmodules()","title":"func makeAllModules() -> [Module]","type":"method"}],"path":"\/documentation\/dicontainer\/usecasemodulefactory\/modulefactory-implementations","title":"ModuleFactory Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/usecasemodulefactory","title":"UseCaseModuleFactory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/scopemodulefactory\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/scopemodulefactory\/definitions","title":"var definitions: [() -> Module]","type":"property"},{"path":"\/documentation\/dicontainer\/scopemodulefactory\/registermodule","title":"let registerModule: RegisterModule","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/scopemodulefactory\/addscoped(_:factory:)","title":"func addScoped<T>(T.Type, factory: () -> T)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/scopemodulefactory\/makeallmodules()","title":"func makeAllModules() -> [Module]","type":"method"}],"path":"\/documentation\/dicontainer\/scopemodulefactory\/modulefactory-implementations","title":"ModuleFactory Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/scopemodulefactory","title":"ScopeModuleFactory","type":"struct"},{"title":"성능 최적화","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/actorhop","title":"Actor Hop (KR)","type":"article"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/performancestats\/averageresolutiontime","title":"let averageResolutionTime: TimeInterval","type":"property"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/performancestats\/mostusedtypes","title":"let mostUsedTypes: [(String, Int)]","type":"property"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/performancestats\/optimizationenabled","title":"let optimizationEnabled: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/performancestats\/summary","title":"var summary: String","type":"property"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/performancestats\/totalresolutions","title":"let totalResolutions: Int","type":"property"}],"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/performancestats","title":"SimplePerformanceOptimizer.PerformanceStats","type":"struct"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/clearcaches()","title":"static func clearCaches()","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/disableoptimization()","title":"static func disableOptimization()","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/enableoptimization()","title":"static func enableOptimization()","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/endresolution(_:)","title":"static func endResolution(PerformanceToken?)","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/getoptimizedtypename(_:)","title":"static func getOptimizedTypeName<T>(T.Type) -> String","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/getstats()","title":"static func getStats() -> SimplePerformanceOptimizer.PerformanceStats","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/isfrequentlyused(_:)","title":"static func isFrequentlyUsed<T>(T.Type) -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/markasfrequentlyused(_:)","title":"static func markAsFrequentlyUsed<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/optimizememoryusage()","title":"static func optimizeMemoryUsage()","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/resetstats()","title":"static func resetStats()","type":"method"},{"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer\/startresolution(_:)","title":"static func startResolution<T>(T.Type) -> PerformanceToken?","type":"method"}],"path":"\/documentation\/dicontainer\/simpleperformanceoptimizer","title":"SimplePerformanceOptimizer","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/valuebox\/init(_:)","title":"init<T>(T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/valuebox\/typename","title":"let typeName: String","type":"property"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/valuebox\/value","title":"let value: Any","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/valuebox\/unwrap()","title":"func unwrap<T>() -> T?","type":"method"}],"path":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","title":"UnifiedRegistry.ValueBox","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/getallregisteredtypenames()","title":"func getAllRegisteredTypeNames() -> [String]","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/getregistrationstats()","title":"func getRegistrationStats() -> [String : RegistrationInfo]","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/isregistered(_:)","title":"func isRegistered<T>(T.Type) -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/register(_:factory:)","title":"func register<T>(T.Type, factory: () -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/register(keypath:factory:)","title":"func register<T>(keyPath: KeyPath<DependencyContainer, T?>, factory: () -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/registerasync(_:factory:)","title":"func registerAsync<T>(T.Type, factory: () async -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/registerasyncif(_:condition:factory:fallback:)","title":"func registerAsyncIf<T>(T.Type, condition: Bool, factory: () async -> T, fallback: () async -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/registerif(_:condition:factory:fallback:)","title":"func registerIf<T>(T.Type, condition: Bool, factory: () -> T, fallback: () -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/release(_:)","title":"func release<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/releaseall()","title":"func releaseAll()","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/resolve(_:)","title":"func resolve<T>(T.Type) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/resolve(keypath:)","title":"func resolve<T>(keyPath: KeyPath<DependencyContainer, T?>) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/resolveany(_:)","title":"func resolveAny(any Any.Type) -> Any?","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/resolveanyasync(_:)","title":"func resolveAnyAsync(any Any.Type) async -> Any?","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/resolveanyasyncbox(_:)","title":"func resolveAnyAsyncBox(any Any.Type) async -> UnifiedRegistry.ValueBox?","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/resolveanybox(_:)","title":"func resolveAnyBox(any Any.Type) -> UnifiedRegistry.ValueBox?","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/resolveasync(_:)","title":"func resolveAsync<T>(T.Type) async -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/resolveasyncwithperformancetracking(_:)","title":"func resolveAsyncWithPerformanceTracking<T>(T.Type) async -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/resolvewithperformancetracking(_:)","title":"func resolveWithPerformanceTracking<T>(T.Type) -> T?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/asyncfactory","title":"UnifiedRegistry.AsyncFactory","type":"typealias"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/syncfactory","title":"UnifiedRegistry.SyncFactory","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistry\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/dicontainer\/unifiedregistry\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/unifiedregistry","title":"UnifiedRegistry","type":"class"},{"title":"프로퍼티 래퍼 확장","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/propertywrappers","title":"Property Wrapper 가이드","type":"article"},{"path":"\/documentation\/dicontainer\/dependencykeypatterns","title":"DependencyKey Patterns","type":"article"},{"path":"\/documentation\/dicontainer\/containerregister","title":"ContainerRegister","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/requireddependencyregister\/init(_:errormessage:)","title":"init(KeyPath<DependencyContainer, T?>, errorMessage: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/requireddependencyregister\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/dicontainer\/requireddependencyregister","title":"RequiredDependencyRegister","type":"struct"},{"title":"실무 가이드","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/bulkregistrationdsl","title":"Bulk Registration & DSL","type":"article"},{"path":"\/documentation\/dicontainer\/modulefactory","title":"Module Factory","type":"article"},{"path":"\/documentation\/dicontainer\/autoresolution","title":"자동 의존성 해결","type":"article"},{"path":"\/documentation\/dicontainer\/pluginsystem","title":"플러그인 시스템","type":"article"},{"path":"\/documentation\/dicontainer\/legacyapis","title":"Legacy APIs & Migration","type":"article"},{"path":"\/documentation\/dicontainer\/propertywrappers","title":"Property Wrapper 가이드","type":"article"},{"title":"API 참조","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifieddi","title":"통합 DI 시스템 - UnifiedDI vs DI","type":"article"},{"path":"\/documentation\/dicontainer\/unifieddi\/registermany(_:)","title":"static func registerMany(() -> [UnifiedRegistration])","type":"method"},{"path":"\/documentation\/dicontainer\/unifieddi","title":"통합 DI 시스템 - UnifiedDI vs DI","type":"article"},{"path":"\/documentation\/dicontainer\/unifieddi","title":"통합 DI 시스템 - UnifiedDI vs DI","type":"article"},{"path":"\/documentation\/dicontainer\/unifieddi\/resolvethrows(_:)","title":"static func resolveThrows<T>(T.Type) throws -> T","type":"method"},{"path":"\/documentation\/dicontainer\/unifieddi\/resolve(_:default:)","title":"static func resolve<T>(T.Type, default: @autoclosure () -> T) -> T","type":"method"},{"path":"\/documentation\/dicontainer\/unifieddi\/release(_:)","title":"static func release<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/unifieddi\/releaseall()","title":"static func releaseAll()","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/bootstrap(_:)","title":"static func bootstrap((DependencyContainer) -> Void) async","type":"method"},{"path":"\/documentation\/dicontainer\/dependencycontainer\/resetfortesting()","title":"static func resetForTesting() async","type":"method"},{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraphusage","title":"의존성 그래프 시각화 가이드","type":"article"},{"path":"\/documentation\/dicontainer\/pluginsystemusage","title":"플러그인 시스템 가이드","type":"article"},{"path":"\/documentation\/dicontainer\/actorhopexplanation","title":"Actor Hop Explanation","type":"article"},{"path":"\/documentation\/dicontainer\/bootstraprationale","title":"Bootstrap Rationale","type":"article"},{"path":"\/documentation\/dicontainer\/bootstrapsystem","title":"DiContainer Bootstrap 시스템 - 설계 근거 및 사용법","type":"article"},{"path":"\/documentation\/dicontainer\/documentationstandards","title":"Documentation Standards","type":"article"},{"path":"\/documentation\/dicontainer\/modulesystem","title":"모듈 시스템","type":"article"},{"path":"\/documentation\/dicontainer\/practicalguide","title":"실전 활용 가이드","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asynccacheservice\/init()","title":"init()","type":"init"}],"path":"\/documentation\/dicontainer\/asynccacheservice","title":"AsyncCacheService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asyncdatabaseservice\/performasyncoperation()","title":"func performAsyncOperation() async","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asyncdatabaseservice\/initialize()","title":"static func initialize() async -> AsyncDatabaseService","type":"method"}],"path":"\/documentation\/dicontainer\/asyncdatabaseservice","title":"AsyncDatabaseService","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asyncnetworkservice\/create()","title":"static func create() async -> AsyncNetworkService","type":"method"}],"path":"\/documentation\/dicontainer\/asyncnetworkservice","title":"AsyncNetworkService","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/anysendablebox\/init(_:)","title":"init(Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/anysendablebox\/value","title":"let value: Any","type":"property"}],"path":"\/documentation\/dicontainer\/asynctyperegistry\/anysendablebox","title":"AsyncTypeRegistry.AnySendableBox","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/clearall()","title":"func clearAll()","type":"method"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/register(_:factory:)","title":"func register<T>(T.Type, factory: () async -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/release(_:)","title":"func release<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/resolvebox(_:)","title":"func resolveBox<T>(T.Type) async -> AsyncTypeRegistry.AnySendableBox?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/dicontainer\/asynctyperegistry\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/dicontainer\/asynctyperegistry\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/asynctyperegistry","title":"AsyncTypeRegistry","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asyncuserservice\/handleasynctask()","title":"func handleAsyncTask() async","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/asyncuserservice\/setup()","title":"static func setup() async -> AsyncUserService","type":"method"}],"path":"\/documentation\/dicontainer\/asyncuserservice","title":"AsyncUserService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autodiscoveryplugin\/init(packageprefixes:excludedtypes:)","title":"init(packagePrefixes: [String], excludedTypes: [String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autodiscoveryplugin\/activate()","title":"func activate() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/autodiscoveryplugin\/afterregistration(_:instance:)","title":"func afterRegistration<T>(T.Type, instance: T) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/autodiscoveryplugin\/beforeregistration(_:factory:)","title":"func beforeRegistration<T>(T.Type, factory: () -> T) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/autodiscoveryplugin\/onregistrationfailure(_:error:)","title":"func onRegistrationFailure<T>(T.Type, error: any Error) async throws","type":"method"}],"path":"\/documentation\/dicontainer\/autodiscoveryplugin","title":"AutoDiscoveryPlugin","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autographgenerator\/generateallgraphs(outputdirectory:formats:options:)","title":"func generateAllGraphs(outputDirectory: URL, formats: [GraphExportFormat], options: GraphVisualizationOptions) throws","type":"method"},{"path":"\/documentation\/dicontainer\/autographgenerator\/generatecirculardependencyreport(outputdirectory:)","title":"func generateCircularDependencyReport(outputDirectory: URL) throws","type":"method"},{"path":"\/documentation\/dicontainer\/autographgenerator\/generatemetricsdashboard(outputdirectory:)","title":"func generateMetricsDashboard(outputDirectory: URL) throws","type":"method"},{"path":"\/documentation\/dicontainer\/autographgenerator\/startrealtimegraphmonitoring(outputdirectory:refreshinterval:)","title":"func startRealtimeGraphMonitoring(outputDirectory: URL, refreshInterval: TimeInterval)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autographgenerator\/shared","title":"static let shared: AutoGraphGenerator","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autographgenerator\/quickgenerate(outputpath:includeimages:)","title":"static func quickGenerate(outputPath: String?, includeImages: Bool) throws","type":"method"}],"path":"\/documentation\/dicontainer\/autographgenerator","title":"AutoGraphGenerator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoinjectableuserservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoinjectableuserservice\/injectresolvedvalue(_:forproperty:)","title":"func injectResolvedValue(Any, forProperty: String)","type":"method"},{"path":"\/documentation\/dicontainer\/autoinjectableuserservice\/performcomplexoperation()","title":"func performComplexOperation() async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoinjectableuserservice\/autoresolveasync()","title":"func autoResolveAsync() async","type":"method"},{"path":"\/documentation\/dicontainer\/autoinjectableuserservice\/autoresolvesync()","title":"func autoResolveSync()","type":"method"},{"path":"\/documentation\/dicontainer\/autoinjectableuserservice\/didautoresolve()","title":"func didAutoResolve()","type":"method"}],"path":"\/documentation\/dicontainer\/autoinjectableuserservice\/autoresolvable-implementations","title":"AutoResolvable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/autoinjectableuserservice","title":"AutoInjectableUserService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoregistrationregistry\/registeredcount","title":"var registeredCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoregistrationregistry\/createinstance(for:)","title":"func createInstance<T>(for: T.Type) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/autoregistrationregistry\/debugprintregisteredtypes()","title":"func debugPrintRegisteredTypes()","type":"method"},{"path":"\/documentation\/dicontainer\/autoregistrationregistry\/getallregisteredtypenames()","title":"func getAllRegisteredTypeNames() -> [String]","type":"method"},{"path":"\/documentation\/dicontainer\/autoregistrationregistry\/isregistered(_:)","title":"func isRegistered<T>(T.Type) -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/autoregistrationregistry\/register(_:factory:)","title":"func register<T>(T.Type, factory: () -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/autoregistrationregistry\/resolve(_:)","title":"func resolve<T>(T.Type) -> T?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoregistrationregistry\/shared","title":"static let shared: AutoRegistrationRegistry","type":"property"}],"path":"\/documentation\/dicontainer\/autoregistrationregistry","title":"AutoRegistrationRegistry","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoresolverdebugger\/printregisteredtypes()","title":"static func printRegisteredTypes()","type":"method"},{"path":"\/documentation\/dicontainer\/autoresolverdebugger\/validateresolution(_:)","title":"static func validateResolution<T>(T) -> [String]","type":"method"}],"path":"\/documentation\/dicontainer\/autoresolverdebugger","title":"AutoResolverDebugger","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/analyzedependencychain(_:)-6dvoe","title":"func analyzeDependencyChain<T>(T.Type) -> DependencyChainAnalysis","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/analyzedependencychain(_:)-8y8tr","title":"func analyzeDependencyChain(String) -> DependencyChainAnalysis","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/beginresolution(_:)-4lj9f","title":"func beginResolution(String) throws","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/beginresolution(_:)-6gy3i","title":"func beginResolution<T>(T.Type) throws","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/clearcache()","title":"func clearCache()","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/detectallcirculardependencies()","title":"func detectAllCircularDependencies() -> [CircularDependencyPath]","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/endresolution(_:)-2v1m9","title":"func endResolution(String)","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/endresolution(_:)-ipgh","title":"func endResolution<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/getgraphstatistics()","title":"func getGraphStatistics() -> DependencyGraphStatistics","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/recorddependency(from:to:)-4tpt6","title":"func recordDependency(from: String, to: String)","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/recorddependency(from:to:)-8qwvp","title":"func recordDependency<From, To>(from: From.Type, to: To.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/setdetectionenabled(_:)","title":"func setDetectionEnabled(Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/circulardependencydetector\/shared","title":"static let shared: CircularDependencyDetector","type":"property"}],"path":"\/documentation\/dicontainer\/circulardependencydetector","title":"CircularDependencyDetector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/configurationplugin\/init(configurationpath:)","title":"init(configurationPath: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/configurationplugin\/activate()","title":"func activate() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/configurationplugin\/aftercontainerreset()","title":"func afterContainerReset() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/configurationplugin\/afterregistration(_:instance:)","title":"func afterRegistration<T>(T.Type, instance: T) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/configurationplugin\/beforecontainerdestroy()","title":"func beforeContainerDestroy() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/configurationplugin\/beforecontainerreset()","title":"func beforeContainerReset() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/configurationplugin\/beforeregistration(_:factory:)","title":"func beforeRegistration<T>(T.Type, factory: () -> T) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/configurationplugin\/oncontainerinitialized()","title":"func onContainerInitialized() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/configurationplugin\/onregistrationfailure(_:error:)","title":"func onRegistrationFailure<T>(T.Type, error: any Error) async throws","type":"method"}],"path":"\/documentation\/dicontainer\/configurationplugin","title":"ConfigurationPlugin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/consoleloggerservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/consoleloggerservice\/error(_:)","title":"func error(String)","type":"method"},{"path":"\/documentation\/dicontainer\/consoleloggerservice\/log(_:)","title":"func log(String)","type":"method"}],"path":"\/documentation\/dicontainer\/consoleloggerservice","title":"ConsoleLoggerService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diactor\/registeredcount","title":"var registeredCount: Int","type":"property"},{"path":"\/documentation\/dicontainer\/diactor\/registeredtypenames","title":"var registeredTypeNames: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diactor\/printregistrationstatus()","title":"func printRegistrationStatus()","type":"method"},{"path":"\/documentation\/dicontainer\/diactor\/register(_:factory:)","title":"func register<T>(T.Type, factory: () -> T) -> () async -> Void","type":"method"},{"path":"\/documentation\/dicontainer\/diactor\/register(_:instance:)","title":"func register<T>(T.Type, instance: T)","type":"method"},{"path":"\/documentation\/dicontainer\/diactor\/release(_:)","title":"func release<T>(T.Type)","type":"method"},{"path":"\/documentation\/dicontainer\/diactor\/releaseall()","title":"func releaseAll()","type":"method"},{"path":"\/documentation\/dicontainer\/diactor\/resolve(_:)","title":"func resolve<T>(T.Type) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/diactor\/resolveresult(_:)","title":"func resolveResult<T>(T.Type) -> Result<T, DIError>","type":"method"},{"path":"\/documentation\/dicontainer\/diactor\/resolvethrows(_:)","title":"func resolveThrows<T>(T.Type) throws -> T","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diactor\/shared","title":"static let shared: DIActor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/dicontainer\/diactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/dicontainer\/diactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/dicontainer\/diactor\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diactor\/sharedunownedexecutor","title":"static var sharedUnownedExecutor: UnownedSerialExecutor","type":"property"}],"path":"\/documentation\/dicontainer\/diactor\/globalactor-implementations","title":"GlobalActor Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/diactor","title":"DIActor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/defaultconfigservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/defaultconfigservice\/getvalue(_:)","title":"func getValue(String) -> String?","type":"method"}],"path":"\/documentation\/dicontainer\/defaultconfigservice","title":"DefaultConfigService","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraph\/edge\/init(from:to:label:)","title":"init(from: String, to: String, label: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraph\/edge\/from","title":"let from: String","type":"property"},{"path":"\/documentation\/dicontainer\/dependencygraph\/edge\/label","title":"let label: String?","type":"property"},{"path":"\/documentation\/dicontainer\/dependencygraph\/edge\/to","title":"let to: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraph\/edge\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/dependencygraph\/edge\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/dependencygraph\/edge","title":"DependencyGraph.Edge","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraph\/addedge(from:to:label:)-2bhoz","title":"func addEdge(from: String, to: String, label: String?)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/addedge(from:to:label:)-2gh58","title":"func addEdge<From, To>(from: From.Type, to: To.Type, label: String?)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/addnode(_:alias:)","title":"func addNode<T>(T.Type, alias: String?)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/addnode(named:)","title":"func addNode(named: String)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/exportdot()","title":"func exportDOT() -> String","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/exportmermaid()","title":"func exportMermaid() -> String","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/snapshot()","title":"func snapshot() -> (nodes: [String], edges: [DependencyGraph.Edge])","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/writedot(to:)","title":"func writeDOT(to: String) throws","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/writemermaid(to:)","title":"func writeMermaid(to: String) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraph\/shared","title":"static let shared: DependencyGraph","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraph\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraph\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/dicontainer\/dependencygraph\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/dependencygraph","title":"DependencyGraph","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraphvisualizer\/exportgraph(to:format:title:options:)","title":"func exportGraph(to: URL, format: GraphExportFormat, title: String, options: GraphVisualizationOptions) throws","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraphvisualizer\/generateasciigraph(maxwidth:)","title":"func generateASCIIGraph(maxWidth: Int) -> String","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraphvisualizer\/generatedotgraph(title:options:)","title":"func generateDOTGraph(title: String, options: GraphVisualizationOptions) -> String","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraphvisualizer\/generatedependencytree(_:maxdepth:)-3vmmi","title":"func generateDependencyTree(String, maxDepth: Int) -> String","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraphvisualizer\/generatedependencytree(_:maxdepth:)-8ml9","title":"func generateDependencyTree<T>(T.Type, maxDepth: Int) -> String","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraphvisualizer\/generateinteractivehtmlgraph(title:)","title":"func generateInteractiveHTMLGraph(title: String) -> String","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraphvisualizer\/generatejsongraph()","title":"func generateJSONGraph() throws -> String","type":"method"},{"path":"\/documentation\/dicontainer\/dependencygraphvisualizer\/generatemermaidgraph(title:options:)","title":"func generateMermaidGraph(title: String, options: GraphVisualizationOptions) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraphvisualizer\/shared","title":"static let shared: DependencyGraphVisualizer","type":"property"}],"path":"\/documentation\/dicontainer\/dependencygraphvisualizer","title":"DependencyGraphVisualizer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencyvalidationplugin\/init(rules:)","title":"init(rules: [any ValidationRule])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencyvalidationplugin\/validateregistration(_:factory:)","title":"func validateRegistration<T>(T.Type, factory: () -> T) async throws -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/dependencyvalidationplugin\/validateresolution(_:instance:)","title":"func validateResolution<T>(T.Type, instance: T?) async throws -> Bool","type":"method"}],"path":"\/documentation\/dicontainer\/dependencyvalidationplugin","title":"DependencyValidationPlugin","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/documentationvalidator\/autofixbrokenlinks(in:dryrun:)","title":"func autoFixBrokenLinks(in: String, dryRun: Bool) throws","type":"method"},{"path":"\/documentation\/dicontainer\/documentationvalidator\/createmissingdocumentationfiles(in:)","title":"func createMissingDocumentationFiles(in: String) throws","type":"method"},{"path":"\/documentation\/dicontainer\/documentationvalidator\/validatealldocumentationlinks(in:)","title":"func validateAllDocumentationLinks(in: String) -> DocumentationValidationResult","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/documentationvalidator\/shared","title":"static let shared: DocumentationValidator","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/documentationvalidator\/quickvalidate(projectpath:autofix:)","title":"static func quickValidate(projectPath: String?, autoFix: Bool) throws","type":"method"}],"path":"\/documentation\/dicontainer\/documentationvalidator","title":"DocumentationValidator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplecomponent\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplecomponent\/performtask()","title":"func performTask()","type":"method"}],"path":"\/documentation\/dicontainer\/examplecomponent","title":"ExampleComponent","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/exampleloggingplugin\/activate()","title":"func activate() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/exampleloggingplugin","title":"ExampleLoggingPlugin","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/exampleperformanceplugin\/activate()","title":"func activate() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/exampleperformanceplugin","title":"ExamplePerformancePlugin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplerepositoryimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplerepositoryimpl\/getdata()","title":"func getData() -> String","type":"method"}],"path":"\/documentation\/dicontainer\/examplerepositoryimpl","title":"ExampleRepositoryImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/exampleserviceimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/exampleserviceimpl\/performoperation()","title":"func performOperation()","type":"method"}],"path":"\/documentation\/dicontainer\/exampleserviceimpl","title":"ExampleServiceImpl","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplevalidationplugin\/activate()","title":"func activate() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/examplevalidationplugin","title":"ExampleValidationPlugin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplevalidatorimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplevalidatorimpl\/validate(_:)","title":"func validate(String) -> Bool","type":"method"}],"path":"\/documentation\/dicontainer\/examplevalidatorimpl","title":"ExampleValidatorImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/googleanalyticsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/googleanalyticsservice\/track(_:)","title":"func track(String)","type":"method"}],"path":"\/documentation\/dicontainer\/googleanalyticsservice","title":"GoogleAnalyticsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/loggingplugin\/init(loglevel:)","title":"init(logLevel: LoggingPlugin.LogLevel)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/loggingplugin\/aftercontainerreset()","title":"func afterContainerReset() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/loggingplugin\/afterregistration(_:instance:)","title":"func afterRegistration<T>(T.Type, instance: T) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/loggingplugin\/afterresolution(_:instance:)","title":"func afterResolution<T>(T.Type, instance: T?) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/loggingplugin\/beforecontainerdestroy()","title":"func beforeContainerDestroy() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/loggingplugin\/beforecontainerreset()","title":"func beforeContainerReset() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/loggingplugin\/beforeregistration(_:factory:)","title":"func beforeRegistration<T>(T.Type, factory: () -> T) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/loggingplugin\/beforeresolution(_:)","title":"func beforeResolution<T>(T.Type) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/loggingplugin\/oncontainerinitialized()","title":"func onContainerInitialized() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/loggingplugin\/onregistrationfailure(_:error:)","title":"func onRegistrationFailure<T>(T.Type, error: any Error) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/loggingplugin\/onresolutionfailure(_:error:)","title":"func onResolutionFailure<T>(T.Type, error: any Error) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/info","title":"case info","type":"case"},{"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/loggingplugin\/loglevel","title":"LoggingPlugin.LogLevel","type":"enum"}],"path":"\/documentation\/dicontainer\/loggingplugin","title":"LoggingPlugin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/memorycacheservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/memorycacheservice\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/dicontainer\/memorycacheservice\/set(_:value:)","title":"func set(String, value: String)","type":"method"}],"path":"\/documentation\/dicontainer\/memorycacheservice","title":"MemoryCacheService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/mockapiservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/mockapiservice\/request()","title":"func request() -> String","type":"method"}],"path":"\/documentation\/dicontainer\/mockapiservice","title":"MockAPIService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/mockemailservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/mockemailservice\/send(to:subject:body:)","title":"func send(to: String, subject: String, body: String)","type":"method"}],"path":"\/documentation\/dicontainer\/mockemailservice","title":"MockEmailService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/moduleregistry\/registeredmodules","title":"var registeredModules: [String : any AdvancedModule]","type":"property"},{"path":"\/documentation\/dicontainer\/moduleregistry\/registrationstatus","title":"var registrationStatus: [String : ModuleRegistrationStatus]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/moduleregistry\/registermodules(_:)","title":"func registerModules([any AdvancedModule]) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/moduleregistry\/registermodules(builder:)","title":"func registerModules(builder: () -> [any AdvancedModule]) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/moduleregistry\/removeallmodules()","title":"func removeAllModules()","type":"method"},{"path":"\/documentation\/dicontainer\/moduleregistry\/status(for:)","title":"func status(for: String) -> ModuleRegistrationStatus?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/moduleregistry\/shared","title":"static let shared: ModuleRegistry","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/moduleregistry\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/dicontainer\/moduleregistry\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/moduleregistry","title":"ModuleRegistry","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/needleuserrepositoryimpl\/init(database:)","title":"init(database: any DatabaseService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/needleuserrepositoryimpl\/finduser(id:)","title":"func findUser(id: String) async -> String?","type":"method"}],"path":"\/documentation\/dicontainer\/needleuserrepositoryimpl","title":"NeedleUserRepositoryImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/networkcomponent\/init(parent:)","title":"init(parent: RootComponent)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/networkcomponent\/database","title":"var database: any DatabaseService","type":"property"},{"path":"\/documentation\/dicontainer\/networkcomponent\/networkservice","title":"var networkService: any NetworkService","type":"property"}],"path":"\/documentation\/dicontainer\/networkcomponent","title":"NetworkComponent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/networkrepositoryimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/networkrepositoryimpl\/fetchdata()","title":"func fetchData() async -> String","type":"method"}],"path":"\/documentation\/dicontainer\/networkrepositoryimpl","title":"NetworkRepositoryImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/networkusecaseimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/networkusecaseimpl\/performnetworkoperation()","title":"func performNetworkOperation() async","type":"method"}],"path":"\/documentation\/dicontainer\/networkusecaseimpl","title":"NetworkUseCaseImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/noopanalyticsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/noopanalyticsservice\/track(_:)","title":"func track(String)","type":"method"}],"path":"\/documentation\/dicontainer\/noopanalyticsservice","title":"NoOpAnalyticsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/performancemonitoringplugin\/init(maxsamples:)","title":"init(maxSamples: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/performancemonitoringplugin\/afterresolution(_:instance:)","title":"func afterResolution<T>(T.Type, instance: T?) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/performancemonitoringplugin\/beforeresolution(_:)","title":"func beforeResolution<T>(T.Type) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/performancemonitoringplugin\/collectmetrics()","title":"func collectMetrics() async -> [String : String]","type":"method"},{"path":"\/documentation\/dicontainer\/performancemonitoringplugin\/generatestatusreport()","title":"func generateStatusReport() async -> PluginStatusReport","type":"method"},{"path":"\/documentation\/dicontainer\/performancemonitoringplugin\/onresolutionfailure(_:error:)","title":"func onResolutionFailure<T>(T.Type, error: any Error) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/performancemonitoringplugin\/recordevent(_:)","title":"func recordEvent(PluginEvent) async","type":"method"}],"path":"\/documentation\/dicontainer\/performancemonitoringplugin","title":"PerformanceMonitoringPlugin","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginmanager\/activeplugins","title":"var activePlugins: Set<String>","type":"property"},{"path":"\/documentation\/dicontainer\/pluginmanager\/registeredplugins","title":"var registeredPlugins: [String : any Plugin]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginmanager\/activate(_:)","title":"func activate(String) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/pluginmanager\/activateall()","title":"func activateAll() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/pluginmanager\/deactivate(_:)","title":"func deactivate(String) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/pluginmanager\/deactivateall()","title":"func deactivateAll() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/pluginmanager\/executebeforeregistrationhooks(_:factory:)","title":"func executeBeforeRegistrationHooks<T>(T.Type, factory: () -> T) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/pluginmanager\/executebeforeresolutionhooks(_:)","title":"func executeBeforeResolutionHooks<T>(T.Type) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/pluginmanager\/getallpluginsinfo()","title":"func getAllPluginsInfo() -> [PluginInfo]","type":"method"},{"path":"\/documentation\/dicontainer\/pluginmanager\/getplugininfo(_:)","title":"func getPluginInfo(String) -> PluginInfo?","type":"method"},{"path":"\/documentation\/dicontainer\/pluginmanager\/register(_:)","title":"func register(any Plugin) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/pluginmanager\/unregister(_:)","title":"func unregister(String) async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginmanager\/shared","title":"static let shared: PluginManager","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginmanager\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/dicontainer\/pluginmanager\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/pluginmanager","title":"PluginManager","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginsystemexample\/printpluginstatus()","title":"static func printPluginStatus() async","type":"method"},{"path":"\/documentation\/dicontainer\/pluginsystemexample\/setupadvancedplugins()","title":"static func setupAdvancedPlugins() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/pluginsystemexample\/setupbasicplugins()","title":"static func setupBasicPlugins() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/pluginsystemexample","title":"PluginSystemExample","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/productionapiservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/productionapiservice\/request()","title":"func request() -> String","type":"method"}],"path":"\/documentation\/dicontainer\/productionapiservice","title":"ProductionAPIService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registrationtoken\/cancelledat","title":"var cancelledAt: Date?","type":"property"},{"path":"\/documentation\/dicontainer\/registrationtoken\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/registrationtoken\/registeredat","title":"var registeredAt: Date","type":"property"},{"path":"\/documentation\/dicontainer\/registrationtoken\/registeredtypename","title":"var registeredTypeName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registrationtoken\/cancel()","title":"func cancel()","type":"method"}],"path":"\/documentation\/dicontainer\/registrationtoken","title":"RegistrationToken","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/rootcomponent\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/rootcomponent\/logger","title":"var logger: any LoggerService","type":"property"},{"path":"\/documentation\/dicontainer\/rootcomponent\/networkcomponent","title":"var networkComponent: NetworkComponent","type":"property"},{"path":"\/documentation\/dicontainer\/rootcomponent\/usercomponent","title":"var userComponent: UserComponent","type":"property"}],"path":"\/documentation\/dicontainer\/rootcomponent","title":"RootComponent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/smtpemailservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/smtpemailservice\/send(to:subject:body:)","title":"func send(to: String, subject: String, body: String)","type":"method"}],"path":"\/documentation\/dicontainer\/smtpemailservice","title":"SMTPEmailService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/sqlitedatabaseservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/sqlitedatabaseservice\/query(_:)","title":"func query(String) -> [String]","type":"method"}],"path":"\/documentation\/dicontainer\/sqlitedatabaseservice","title":"SQLiteDatabaseService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/urlsessionnetworkservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/urlsessionnetworkservice\/fetchdata()","title":"func fetchData() async -> String","type":"method"}],"path":"\/documentation\/dicontainer\/urlsessionnetworkservice","title":"URLSessionNetworkService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usercomponent\/init(parent:)","title":"init(parent: RootComponent)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/usercomponent\/userrepository","title":"var userRepository: any NeedleUserRepository","type":"property"},{"path":"\/documentation\/dicontainer\/usercomponent\/userservice","title":"var userService: any UserService","type":"property"}],"path":"\/documentation\/dicontainer\/usercomponent","title":"UserComponent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/userrepositoryimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/userrepositoryimpl\/getuser(id:)","title":"func getUser(id: String) async -> String","type":"method"}],"path":"\/documentation\/dicontainer\/userrepositoryimpl","title":"UserRepositoryImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/userserviceimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/userserviceimpl\/performoperation()","title":"func performOperation() async","type":"method"}],"path":"\/documentation\/dicontainer\/userserviceimpl","title":"UserServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/userusecaseimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/userusecaseimpl\/execute()","title":"func execute() async","type":"method"}],"path":"\/documentation\/dicontainer\/userusecaseimpl","title":"UserUseCaseImpl","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/apiservice\/request()","title":"func request() -> String","type":"method"}],"path":"\/documentation\/dicontainer\/apiservice","title":"APIService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/advancedmodule\/dependencies","title":"var dependencies: [String]","type":"property"},{"path":"\/documentation\/dicontainer\/advancedmodule\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/dicontainer\/advancedmodule\/shouldregister","title":"var shouldRegister: () -> Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/advancedmodule\/afterregister()","title":"func afterRegister() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/advancedmodule\/beforeregister()","title":"func beforeRegister() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/advancedmodule\/register()","title":"func register() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/advancedmodule\/validate()","title":"func validate() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/advancedmodule","title":"AdvancedModule","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/analyticsservice\/track(_:)","title":"func track(String)","type":"method"}],"path":"\/documentation\/dicontainer\/analyticsservice","title":"AnalyticsService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoinjectible\/injectresolvedvalue(_:forproperty:)","title":"func injectResolvedValue(Any, forProperty: String)","type":"method"}],"path":"\/documentation\/dicontainer\/autoinjectible","title":"AutoInjectible","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoresolvable\/autoresolveasync()","title":"func autoResolveAsync() async","type":"method"},{"path":"\/documentation\/dicontainer\/autoresolvable\/autoresolvesync()","title":"func autoResolveSync()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/dicontainer\/autoresolvable\/didautoresolve()-2btg5","title":"func didAutoResolve()","type":"method"}],"title":"AutoResolvable Implementations","type":"groupMarker"}],"path":"\/documentation\/dicontainer\/autoresolvable\/didautoresolve()","title":"func didAutoResolve()","type":"method"}],"path":"\/documentation\/dicontainer\/autoresolvable","title":"AutoResolvable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/cacheservice\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/dicontainer\/cacheservice\/set(_:value:)","title":"func set(String, value: String)","type":"method"}],"path":"\/documentation\/dicontainer\/cacheservice","title":"CacheService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/configservice\/getvalue(_:)","title":"func getValue(String) -> String?","type":"method"}],"path":"\/documentation\/dicontainer\/configservice","title":"ConfigService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/databaseservice\/query(_:)","title":"func query(String) -> [String]","type":"method"}],"path":"\/documentation\/dicontainer\/databaseservice","title":"DatabaseService","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/defaultconstructible\/init()","title":"init()","type":"init"}],"path":"\/documentation\/dicontainer\/defaultconstructible","title":"DefaultConstructible","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencyscope\/dependencies","title":"Dependencies","type":"associatedtype"},{"path":"\/documentation\/dicontainer\/dependencyscope\/provides","title":"Provides","type":"associatedtype"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/dicontainer\/dependencyscope\/validate()-51mb3","title":"static func validate() -> Bool","type":"method"}],"title":"DependencyScope Implementations","type":"groupMarker"}],"path":"\/documentation\/dicontainer\/dependencyscope\/validate()","title":"static func validate() -> Bool","type":"method"}],"path":"\/documentation\/dicontainer\/dependencyscope","title":"DependencyScope","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/emailservice\/send(to:subject:body:)","title":"func send(to: String, subject: String, body: String)","type":"method"}],"path":"\/documentation\/dicontainer\/emailservice","title":"EmailService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplerepository\/getdata()","title":"func getData() -> String","type":"method"}],"path":"\/documentation\/dicontainer\/examplerepository","title":"ExampleRepository","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/exampleservice\/performoperation()","title":"func performOperation()","type":"method"}],"path":"\/documentation\/dicontainer\/exampleservice","title":"ExampleService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplevalidator\/validate(_:)","title":"func validate(String) -> Bool","type":"method"}],"path":"\/documentation\/dicontainer\/examplevalidator","title":"ExampleValidator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/lifecycleplugin\/aftercontainerreset()","title":"func afterContainerReset() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/lifecycleplugin\/beforecontainerdestroy()","title":"func beforeContainerDestroy() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/lifecycleplugin\/beforecontainerreset()","title":"func beforeContainerReset() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/lifecycleplugin\/oncontainerinitialized()","title":"func onContainerInitialized() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/lifecycleplugin","title":"LifecyclePlugin","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/loggerservice\/error(_:)","title":"func error(String)","type":"method"},{"path":"\/documentation\/dicontainer\/loggerservice\/log(_:)","title":"func log(String)","type":"method"}],"path":"\/documentation\/dicontainer\/loggerservice","title":"LoggerService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/monitoringplugin\/collectmetrics()","title":"func collectMetrics() async -> [String : String]","type":"method"},{"path":"\/documentation\/dicontainer\/monitoringplugin\/generatestatusreport()","title":"func generateStatusReport() async -> PluginStatusReport","type":"method"},{"path":"\/documentation\/dicontainer\/monitoringplugin\/recordevent(_:)","title":"func recordEvent(PluginEvent) async","type":"method"}],"path":"\/documentation\/dicontainer\/monitoringplugin","title":"MonitoringPlugin","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/needleuserrepository\/finduser(id:)","title":"func findUser(id: String) async -> String?","type":"method"}],"path":"\/documentation\/dicontainer\/needleuserrepository","title":"NeedleUserRepository","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/networkrepository\/fetchdata()","title":"func fetchData() async -> String","type":"method"}],"path":"\/documentation\/dicontainer\/networkrepository","title":"NetworkRepository","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/networkservice\/fetchdata()","title":"func fetchData() async -> String","type":"method"}],"path":"\/documentation\/dicontainer\/networkservice","title":"NetworkService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/networkusecase\/performnetworkoperation()","title":"func performNetworkOperation() async","type":"method"}],"path":"\/documentation\/dicontainer\/networkusecase","title":"NetworkUseCase","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/plugin\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dicontainer\/plugin\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/dicontainer\/plugin\/isactive","title":"var isActive: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/plugin\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/dicontainer\/plugin\/version","title":"var version: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/plugin\/activate()","title":"func activate() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/plugin\/deactivate()","title":"func deactivate() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/plugin","title":"Plugin","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registrationplugin\/afterregistration(_:instance:)","title":"func afterRegistration<T>(T.Type, instance: T) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/registrationplugin\/beforeregistration(_:factory:)","title":"func beforeRegistration<T>(T.Type, factory: () -> T) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/registrationplugin\/onregistrationfailure(_:error:)","title":"func onRegistrationFailure<T>(T.Type, error: any Error) async throws","type":"method"}],"path":"\/documentation\/dicontainer\/registrationplugin","title":"RegistrationPlugin","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/resolutionplugin\/afterresolution(_:instance:)","title":"func afterResolution<T>(T.Type, instance: T?) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/resolutionplugin\/beforeresolution(_:)","title":"func beforeResolution<T>(T.Type) async throws","type":"method"},{"path":"\/documentation\/dicontainer\/resolutionplugin\/onresolutionfailure(_:error:)","title":"func onResolutionFailure<T>(T.Type, error: any Error) async throws","type":"method"}],"path":"\/documentation\/dicontainer\/resolutionplugin","title":"ResolutionPlugin","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safeinjectable\/safedependencyresolution()","title":"static func safeDependencyResolution() -> SafeResolutionResult<Self>","type":"method"}],"path":"\/documentation\/dicontainer\/safeinjectable","title":"SafeInjectable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/userrepository\/getuser(id:)","title":"func getUser(id: String) async -> String","type":"method"}],"path":"\/documentation\/dicontainer\/userrepository","title":"UserRepository","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/userservice\/performoperation()","title":"func performOperation() async","type":"method"}],"path":"\/documentation\/dicontainer\/userservice","title":"UserService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/userusecase\/execute()","title":"func execute() async","type":"method"}],"path":"\/documentation\/dicontainer\/userusecase","title":"UserUseCase","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/validationplugin\/validateregistration(_:factory:)","title":"func validateRegistration<T>(T.Type, factory: () -> T) async throws -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/validationplugin\/validateresolution(_:instance:)","title":"func validateResolution<T>(T.Type, instance: T?) async throws -> Bool","type":"method"}],"path":"\/documentation\/dicontainer\/validationplugin","title":"ValidationPlugin","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/validationrule\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/validationrule\/validateregistration(_:)","title":"func validateRegistration<T>(T.Type) async -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/validationrule\/validateresolution(_:instance:)","title":"func validateResolution<T>(T.Type, instance: T) async -> Bool","type":"method"}],"path":"\/documentation\/dicontainer\/validationrule","title":"ValidationRule","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/anytypeidentifier\/==(_:_:)","title":"static func == (AnyTypeIdentifier, AnyTypeIdentifier) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/anytypeidentifier\/init(anytype:)","title":"init(anyType: any Any.Type)","type":"init"},{"path":"\/documentation\/dicontainer\/anytypeidentifier\/init(type:)","title":"init<T>(type: T.Type)","type":"init"},{"path":"\/documentation\/dicontainer\/anytypeidentifier\/init(typeidentifier:)","title":"init<T>(typeIdentifier: TypeIdentifier<T>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/anytypeidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/anytypeidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/anytypeidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/anytypeidentifier","title":"AnyTypeIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoresolve\/init(_:required:)","title":"init(T.Type, required: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoresolve\/wrappedvalue","title":"var wrappedValue: T?","type":"property"}],"path":"\/documentation\/dicontainer\/autoresolve","title":"AutoResolve","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/brokenlink\/filepath","title":"let filePath: String","type":"property"},{"path":"\/documentation\/dicontainer\/brokenlink\/linktext","title":"let linkText: String","type":"property"},{"path":"\/documentation\/dicontainer\/brokenlink\/possiblepaths","title":"let possiblePaths: [String]","type":"property"},{"path":"\/documentation\/dicontainer\/brokenlink\/target","title":"let target: String","type":"property"}],"path":"\/documentation\/dicontainer\/brokenlink","title":"BrokenLink","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/buildmetrics\/duration","title":"let duration: TimeInterval","type":"property"},{"path":"\/documentation\/dicontainer\/buildmetrics\/modulecount","title":"let moduleCount: Int","type":"property"},{"path":"\/documentation\/dicontainer\/buildmetrics\/modulespersecond","title":"let modulesPerSecond: Double","type":"property"},{"path":"\/documentation\/dicontainer\/buildmetrics\/summary","title":"var summary: String","type":"property"}],"path":"\/documentation\/dicontainer\/buildmetrics","title":"BuildMetrics","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/buildresult\/failure\/file","title":"let file: String","type":"property"},{"path":"\/documentation\/dicontainer\/buildresult\/failure\/function","title":"let function: String","type":"property"},{"path":"\/documentation\/dicontainer\/buildresult\/failure\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/dicontainer\/buildresult\/failure\/line","title":"let line: Int","type":"property"},{"path":"\/documentation\/dicontainer\/buildresult\/failure\/typename","title":"let typeName: String","type":"property"},{"path":"\/documentation\/dicontainer\/buildresult\/failure\/underlying","title":"let underlying: String","type":"property"}],"path":"\/documentation\/dicontainer\/buildresult\/failure","title":"BuildResult.Failure","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/buildresult\/failures","title":"let failures: [BuildResult.Failure]","type":"property"},{"path":"\/documentation\/dicontainer\/buildresult\/processed","title":"let processed: Int","type":"property"},{"path":"\/documentation\/dicontainer\/buildresult\/succeeded","title":"var succeeded: Int","type":"property"},{"path":"\/documentation\/dicontainer\/buildresult\/summary","title":"var summary: String","type":"property"}],"path":"\/documentation\/dicontainer\/buildresult","title":"BuildResult","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/bulkregistrationbuilder\/buildblock(_:)","title":"static func buildBlock(BulkRegistrationEntry...) -> [BulkRegistrationEntry]","type":"method"}],"path":"\/documentation\/dicontainer\/bulkregistrationbuilder","title":"BulkRegistrationBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/bulkregistrationentry\/init(interfacetype:repository:usecase:fallback:)","title":"init<Interface>(interfaceType: Interface.Type, repository: () -> Interface, useCase: (Interface) -> Interface, fallback: () -> Interface)","type":"init"}],"path":"\/documentation\/dicontainer\/bulkregistrationentry","title":"BulkRegistrationEntry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/circulardependencypath\/init(path:)","title":"init(path: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/circulardependencypath\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dicontainer\/circulardependencypath\/path","title":"let path: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/circulardependencypath\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/circulardependencypath\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/circulardependencypath","title":"CircularDependencyPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/conditionalinject\/init(condition:primary:fallback:)","title":"init(condition: () -> Bool, primary: KeyPath<DependencyContainer, T?>, fallback: KeyPath<DependencyContainer, T?>)","type":"init"},{"path":"\/documentation\/dicontainer\/conditionalinject\/init(condition:primaryfactory:fallbackfactory:)","title":"init(condition: () -> Bool, primaryFactory: () -> T, fallbackFactory: () -> T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/conditionalinject\/wrappedvalue","title":"var wrappedValue: T?","type":"property"}],"path":"\/documentation\/dicontainer\/conditionalinject","title":"ConditionalInject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/init(identifier:dependencies:condition:module:beforeregister:afterregister:validator:)","title":"init(identifier: String, dependencies: [String], condition: () -> Bool, module: Module, beforeRegister: (() async throws -> Void)?, afterRegister: (() async throws -> Void)?, validator: (() async throws -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/dependencies","title":"let dependencies: [String]","type":"property"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/shouldregister","title":"let shouldRegister: () -> Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/afterregister()","title":"func afterRegister() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/beforeregister()","title":"func beforeRegister() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/register()","title":"func register() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/validate()","title":"func validate() async throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/debugonly(identifier:dependencies:module:)","title":"static func debugOnly(identifier: String, dependencies: [String], module: Module) -> ConditionalModule","type":"method"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/fromenvironment(identifier:dependencies:envkey:expectedvalue:module:)","title":"static func fromEnvironment(identifier: String, dependencies: [String], envKey: String, expectedValue: String, module: Module) -> ConditionalModule","type":"method"},{"path":"\/documentation\/dicontainer\/conditionalmodule\/fromuserdefault(identifier:dependencies:key:module:)","title":"static func fromUserDefault(identifier: String, dependencies: [String], key: String, module: Module) -> ConditionalModule","type":"method"}],"path":"\/documentation\/dicontainer\/conditionalmodule","title":"ConditionalModule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diasyncregistration\/init(_:factory:)-1iib4","title":"init<T>(KeyPath<DependencyContainer, T?>, factory: () async -> T)","type":"init"},{"path":"\/documentation\/dicontainer\/diasyncregistration\/init(_:factory:)-z2v1","title":"init<T>(T.Type, factory: () async -> T)","type":"init"}],"path":"\/documentation\/dicontainer\/diasyncregistration","title":"DIAsyncRegistration","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diasyncregistrationbuilder\/buildblock(_:)","title":"static func buildBlock(DIAsyncRegistration...) -> [DIAsyncRegistration]","type":"method"}],"path":"\/documentation\/dicontainer\/diasyncregistrationbuilder","title":"DIAsyncRegistrationBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dicontainerstatus\/init(isbootstrapped:registrationcount:memoryusage:)","title":"init(isBootstrapped: Bool, registrationCount: Int, memoryUsage: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dicontainerstatus\/isbootstrapped","title":"let isBootstrapped: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/dicontainerstatus\/memoryusage","title":"let memoryUsage: Int","type":"property"},{"path":"\/documentation\/dicontainer\/dicontainerstatus\/registrationcount","title":"let registrationCount: Int","type":"property"},{"path":"\/documentation\/dicontainer\/dicontainerstatus\/timestamp","title":"let timestamp: Date","type":"property"}],"path":"\/documentation\/dicontainer\/dicontainerstatus","title":"DIContainerStatus","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diregistrationbuilder\/buildblock(_:)","title":"static func buildBlock(Registration...) -> [Registration]","type":"method"}],"path":"\/documentation\/dicontainer\/diregistrationbuilder","title":"DIRegistrationBuilder","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencychainanalysis\/alldependencies","title":"let allDependencies: [String]","type":"property"},{"path":"\/documentation\/dicontainer\/dependencychainanalysis\/directdependencies","title":"let directDependencies: [String]","type":"property"},{"path":"\/documentation\/dicontainer\/dependencychainanalysis\/hascycles","title":"let hasCycles: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/dependencychainanalysis\/maxdepth","title":"let maxDepth: Int","type":"property"},{"path":"\/documentation\/dicontainer\/dependencychainanalysis\/roottype","title":"let rootType: String","type":"property"},{"path":"\/documentation\/dicontainer\/dependencychainanalysis\/summary","title":"var summary: String","type":"property"}],"path":"\/documentation\/dicontainer\/dependencychainanalysis","title":"DependencyChainAnalysis","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraphstatistics\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencygraphstatistics\/averagedependenciespertype","title":"let averageDependenciesPerType: Double","type":"property"},{"path":"\/documentation\/dicontainer\/dependencygraphstatistics\/detectedcycles","title":"let detectedCycles: Int","type":"property"},{"path":"\/documentation\/dicontainer\/dependencygraphstatistics\/maxdependenciespertype","title":"let maxDependenciesPerType: Int","type":"property"},{"path":"\/documentation\/dicontainer\/dependencygraphstatistics\/summary","title":"var summary: String","type":"property"},{"path":"\/documentation\/dicontainer\/dependencygraphstatistics\/totaldependencies","title":"let totalDependencies: Int","type":"property"},{"path":"\/documentation\/dicontainer\/dependencygraphstatistics\/totaltypes","title":"let totalTypes: Int","type":"property"},{"path":"\/documentation\/dicontainer\/dependencygraphstatistics\/typeswithoutdependencies","title":"let typesWithoutDependencies: Int","type":"property"}],"path":"\/documentation\/dicontainer\/dependencygraphstatistics","title":"DependencyGraphStatistics","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencyvalidation\/areregistered(_:)","title":"static func areRegistered([any Any.Type]) -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/dependencyvalidation\/hascirculardependency(_:)","title":"static func hasCircularDependency<T>(T.Type) -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/dependencyvalidation\/isregistered(_:)","title":"static func isRegistered<T>(T.Type) -> Bool","type":"method"}],"path":"\/documentation\/dicontainer\/dependencyvalidation","title":"DependencyValidation","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/developertools\/checkcirculardependencies()","title":"static func checkCircularDependencies()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/enableifrequested()","title":"static func enableIfRequested()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/generatequickgraph()","title":"static func generateQuickGraph()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/printcontainerstatus()","title":"static func printContainerStatus()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/printdependencytree()","title":"static func printDependencyTree()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/printperformancestats()","title":"static func printPerformanceStats()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/runalltools()","title":"static func runAllTools()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/setupforappdelegate()","title":"static func setupForAppDelegate()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/showgraphgenerationmenu()","title":"static func showGraphGenerationMenu()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/startrealtimemonitoring()","title":"static func startRealtimeMonitoring()","type":"method"},{"path":"\/documentation\/dicontainer\/developertools\/validatedocumentation()","title":"static func validateDocumentation()","type":"method"}],"path":"\/documentation\/dicontainer\/developertools","title":"DeveloperTools","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/documentationvalidationresult\/brokenlinks","title":"let brokenLinks: [BrokenLink]","type":"property"},{"path":"\/documentation\/dicontainer\/documentationvalidationresult\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/documentationvalidationresult\/missingfiles","title":"let missingFiles: [String]","type":"property"},{"path":"\/documentation\/dicontainer\/documentationvalidationresult\/totalfiles","title":"let totalFiles: Int","type":"property"},{"path":"\/documentation\/dicontainer\/documentationvalidationresult\/validlinks","title":"let validLinks: [String]","type":"property"}],"path":"\/documentation\/dicontainer\/documentationvalidationresult","title":"DocumentationValidationResult","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/easyscopebuilder\/buildarray(_:)","title":"static func buildArray([[RegisterEasyScopeEntry]]) -> [RegisterEasyScopeEntry]","type":"method"},{"path":"\/documentation\/dicontainer\/easyscopebuilder\/buildblock(_:)","title":"static func buildBlock(RegisterEasyScopeEntry...) -> [RegisterEasyScopeEntry]","type":"method"},{"path":"\/documentation\/dicontainer\/easyscopebuilder\/buildoptional(_:)","title":"static func buildOptional([RegisterEasyScopeEntry]?) -> [RegisterEasyScopeEntry]","type":"method"}],"path":"\/documentation\/dicontainer\/easyscopebuilder","title":"EasyScopeBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/emptydependencies\/init()","title":"init()","type":"init"}],"path":"\/documentation\/dicontainer\/emptydependencies","title":"EmptyDependencies","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/filevalidationresult\/brokenlinks","title":"let brokenLinks: [BrokenLink]","type":"property"},{"path":"\/documentation\/dicontainer\/filevalidationresult\/validlinks","title":"let validLinks: [String]","type":"property"}],"path":"\/documentation\/dicontainer\/filevalidationresult","title":"FileValidationResult","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphgenerationdemorunner\/quickcli()","title":"static func quickCLI() async","type":"method"},{"path":"\/documentation\/dicontainer\/graphgenerationdemorunner\/runallexamples()","title":"static func runAllExamples() async","type":"method"}],"path":"\/documentation\/dicontainer\/graphgenerationdemorunner","title":"GraphGenerationDemoRunner","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphgenerationexamples\/circulardependencydetection()","title":"static func circularDependencyDetection() async","type":"method"},{"path":"\/documentation\/dicontainer\/graphgenerationexamples\/dependencytreeconsoleoutput()","title":"static func dependencyTreeConsoleOutput()","type":"method"},{"path":"\/documentation\/dicontainer\/graphgenerationexamples\/dotgraphwithimageconversion()","title":"static func dotGraphWithImageConversion() async","type":"method"},{"path":"\/documentation\/dicontainer\/graphgenerationexamples\/mermaidgraphgeneration()","title":"static func mermaidGraphGeneration()","type":"method"},{"path":"\/documentation\/dicontainer\/graphgenerationexamples\/multiformatgraphgeneration()","title":"static func multiFormatGraphGeneration() async","type":"method"},{"path":"\/documentation\/dicontainer\/graphgenerationexamples\/quickgraphgeneration()","title":"static func quickGraphGeneration() async","type":"method"},{"path":"\/documentation\/dicontainer\/graphgenerationexamples\/realtimegraphmonitoring()","title":"static func realtimeGraphMonitoring()","type":"method"}],"path":"\/documentation\/dicontainer\/graphgenerationexamples","title":"GraphGenerationExamples","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/backgroundcolor","title":"var backgroundColor: String","type":"property"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/direction","title":"var direction: GraphVisualizationOptions.GraphDirection","type":"property"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/edgecolor","title":"var edgeColor: String","type":"property"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/highlightcycles","title":"var highlightCycles: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/maxnodesperlevel","title":"var maxNodesPerLevel: Int","type":"property"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.property","title":"var nodeShape: GraphVisualizationOptions.NodeShape","type":"property"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/showstatistics","title":"var showStatistics: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/default","title":"static let `default`: GraphVisualizationOptions","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/bottomtotop","title":"case bottomToTop","type":"case"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/lefttoright","title":"case leftToRight","type":"case"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/righttoleft","title":"case rightToLeft","type":"case"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/toptobottom","title":"case topToBottom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/graphdirection","title":"GraphVisualizationOptions.GraphDirection","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/box","title":"case box","type":"case"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/circle","title":"case circle","type":"case"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/diamond","title":"case diamond","type":"case"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/ellipse","title":"case ellipse","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/graphvisualizationoptions\/nodeshape-swift.enum","title":"GraphVisualizationOptions.NodeShape","type":"enum"}],"path":"\/documentation\/dicontainer\/graphvisualizationoptions","title":"GraphVisualizationOptions","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/legacydihelper\/legacyregister(_:type:factory:)","title":"static func legacyRegister<T>(KeyPath<DependencyContainer, T?>, type: T.Type, factory: () -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/legacydihelper\/legacyrequireresolve(_:)","title":"static func legacyRequireResolve<T>(KeyPath<DependencyContainer, T?>) -> T","type":"method"},{"path":"\/documentation\/dicontainer\/legacydihelper\/legacyresolve(_:)","title":"static func legacyResolve<T>(KeyPath<DependencyContainer, T?>) -> T?","type":"method"}],"path":"\/documentation\/dicontainer\/legacydihelper","title":"LegacyDIHelper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/legacysimplifiedinject\/init(_:)","title":"init(KeyPath<DependencyContainer, T?>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/legacysimplifiedinject\/wrappedvalue","title":"var wrappedValue: T","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/legacysimplifiedinject\/conditional(_:condition:)","title":"static func conditional(KeyPath<DependencyContainer, T?>, condition: () -> Bool) -> LegacySimplifiedInject<T>","type":"method"},{"path":"\/documentation\/dicontainer\/legacysimplifiedinject\/typeonly(_:)","title":"static func typeOnly(T.Type) -> LegacySimplifiedInject<T>","type":"method"}],"path":"\/documentation\/dicontainer\/legacysimplifiedinject","title":"LegacySimplifiedInject","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/linkfix\/filepath","title":"let filePath: String","type":"property"},{"path":"\/documentation\/dicontainer\/linkfix\/newlink","title":"let newLink: String","type":"property"},{"path":"\/documentation\/dicontainer\/linkfix\/oldlink","title":"let oldLink: String","type":"property"},{"path":"\/documentation\/dicontainer\/linkfix\/reason","title":"let reason: String","type":"property"}],"path":"\/documentation\/dicontainer\/linkfix","title":"LinkFix","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulebuilder\/buildarray(_:)","title":"static func buildArray([[any AdvancedModule]]) -> [any AdvancedModule]","type":"method"},{"path":"\/documentation\/dicontainer\/modulebuilder\/buildblock(_:)","title":"static func buildBlock(any AdvancedModule...) -> [any AdvancedModule]","type":"method"},{"path":"\/documentation\/dicontainer\/modulebuilder\/buildeither(first:)","title":"static func buildEither(first: [any AdvancedModule]) -> [any AdvancedModule]","type":"method"},{"path":"\/documentation\/dicontainer\/modulebuilder\/buildeither(second:)","title":"static func buildEither(second: [any AdvancedModule]) -> [any AdvancedModule]","type":"method"},{"path":"\/documentation\/dicontainer\/modulebuilder\/buildoptional(_:)","title":"static func buildOptional([any AdvancedModule]?) -> [any AdvancedModule]","type":"method"}],"path":"\/documentation\/dicontainer\/modulebuilder","title":"ModuleBuilder","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/moduledefinitionbuilder\/buildblock(_:)","title":"static func buildBlock((inout ModuleFactoryManager) -> Void...) -> (inout ModuleFactoryManager) -> Void","type":"method"}],"path":"\/documentation\/dicontainer\/moduledefinitionbuilder","title":"ModuleDefinitionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulefactorymanager\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulefactorymanager\/repositoryfactory","title":"var repositoryFactory: RepositoryModuleFactory","type":"property"},{"path":"\/documentation\/dicontainer\/modulefactorymanager\/scopefactory","title":"var scopeFactory: ScopeModuleFactory","type":"property"},{"path":"\/documentation\/dicontainer\/modulefactorymanager\/usecasefactory","title":"var useCaseFactory: UseCaseModuleFactory","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulefactorymanager\/makeallmodules()","title":"func makeAllModules() -> [Module]","type":"method"},{"path":"\/documentation\/dicontainer\/modulefactorymanager\/registerall()","title":"func registerAll() async","type":"method"},{"path":"\/documentation\/dicontainer\/modulefactorymanager\/registerall(to:)","title":"func registerAll(to: Container) async","type":"method"},{"path":"\/documentation\/dicontainer\/modulefactorymanager\/setup(_:)","title":"func setup((inout ModuleFactoryManager) -> Void)","type":"method"}],"path":"\/documentation\/dicontainer\/modulefactorymanager","title":"ModuleFactoryManager","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulegroup\/init(identifier:dependencies:condition:modules:parallelregistration:)","title":"init(identifier: String, dependencies: [String], condition: () -> Bool, modules: [any AdvancedModule], parallelRegistration: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulegroup\/dependencies","title":"let dependencies: [String]","type":"property"},{"path":"\/documentation\/dicontainer\/modulegroup\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/dicontainer\/modulegroup\/shouldregister","title":"let shouldRegister: () -> Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulegroup\/afterregister()","title":"func afterRegister() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/modulegroup\/beforeregister()","title":"func beforeRegister() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/modulegroup\/register()","title":"func register() async throws","type":"method"},{"path":"\/documentation\/dicontainer\/modulegroup\/validate()","title":"func validate() async throws","type":"method"}],"path":"\/documentation\/dicontainer\/modulegroup","title":"ModuleGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/multiinject\/init(_:)-4p5l2","title":"init([() -> T])","type":"init"},{"path":"\/documentation\/dicontainer\/multiinject\/init(_:)-8yiir","title":"init([KeyPath<DependencyContainer, T?>])","type":"init"},{"path":"\/documentation\/dicontainer\/multiinject\/init(keypaths:factories:)","title":"init(keyPaths: [KeyPath<DependencyContainer, T?>], factories: [() -> T])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/multiinject\/wrappedvalue","title":"var wrappedValue: [T]","type":"property"}],"path":"\/documentation\/dicontainer\/multiinject","title":"MultiInject","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/performancetoken\/starttime","title":"let startTime: TimeInterval","type":"property"},{"path":"\/documentation\/dicontainer\/performancetoken\/typename","title":"let typeName: String","type":"property"}],"path":"\/documentation\/dicontainer\/performancetoken","title":"PerformanceToken","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginevent\/init(type:details:source:)","title":"init(type: PluginEvent.EventType, details: [String : String], source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginevent\/details","title":"let details: [String : String]","type":"property"},{"path":"\/documentation\/dicontainer\/pluginevent\/source","title":"let source: String","type":"property"},{"path":"\/documentation\/dicontainer\/pluginevent\/timestamp","title":"let timestamp: Date","type":"property"},{"path":"\/documentation\/dicontainer\/pluginevent\/type","title":"let type: PluginEvent.EventType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/error","title":"case error","type":"case"},{"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/lifecycle","title":"case lifecycle","type":"case"},{"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/registration","title":"case registration","type":"case"},{"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/resolution","title":"case resolution","type":"case"},{"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/validation","title":"case validation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dicontainer\/pluginevent\/eventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/pluginevent\/eventtype","title":"PluginEvent.EventType","type":"enum"}],"path":"\/documentation\/dicontainer\/pluginevent","title":"PluginEvent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/plugininfo\/init(identifier:version:description:priority:isactive:capabilities:)","title":"init(identifier: String, version: String, description: String, priority: Int, isActive: Bool, capabilities: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/plugininfo\/capabilities","title":"let capabilities: [String]","type":"property"},{"path":"\/documentation\/dicontainer\/plugininfo\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/dicontainer\/plugininfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dicontainer\/plugininfo\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/dicontainer\/plugininfo\/isactive","title":"let isActive: Bool","type":"property"},{"path":"\/documentation\/dicontainer\/plugininfo\/priority","title":"let priority: Int","type":"property"},{"path":"\/documentation\/dicontainer\/plugininfo\/version","title":"let version: String","type":"property"}],"path":"\/documentation\/dicontainer\/plugininfo","title":"PluginInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginstatusreport\/init(pluginid:status:metrics:)","title":"init(pluginId: String, status: String, metrics: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginstatusreport\/generatedat","title":"let generatedAt: Date","type":"property"},{"path":"\/documentation\/dicontainer\/pluginstatusreport\/metrics","title":"let metrics: [String : String]","type":"property"},{"path":"\/documentation\/dicontainer\/pluginstatusreport\/pluginid","title":"let pluginId: String","type":"property"},{"path":"\/documentation\/dicontainer\/pluginstatusreport\/status","title":"let status: String","type":"property"}],"path":"\/documentation\/dicontainer\/pluginstatusreport","title":"PluginStatusReport","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registereasyscopeentry\/init(type:factory:)","title":"init<T>(type: T.Type, factory: () -> T)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registereasyscopeentry\/createmodule()","title":"func createModule() -> Module","type":"method"}],"path":"\/documentation\/dicontainer\/registereasyscopeentry","title":"RegisterEasyScopeEntry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registermodule\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registermodule\/bulkinterfaces(_:)","title":"func bulkInterfaces(() -> [BulkRegistrationEntry]) -> [() -> Module]","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/defaultinstance(for:fallback:)","title":"func defaultInstance<T>(for: T.Type, fallback: @autoclosure () -> T) -> T","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/easyscopes(_:)","title":"func easyScopes(() -> [RegisterEasyScopeEntry]) -> [() -> Module]","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/interface(_:repository:usecase:fallback:)","title":"func interface<Interface>(Interface.Type, repository: () -> Interface, useCase: (Interface) -> Interface, fallback: () -> Interface) -> [() -> Module]","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/makedependency(_:factory:)","title":"func makeDependency<T>(T.Type, factory: () -> T) -> () -> Module","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/makedependencyimproved(_:factory:)","title":"func makeDependencyImproved<T, U>(T.Type, factory: () -> U) -> () -> Module","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/makemodule(_:factory:)","title":"func makeModule<T>(T.Type, factory: () -> T) -> Module","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/maketypesafedependency(_:factory:)","title":"func makeTypeSafeDependency<T>(T.Type, factory: () -> T) -> () -> Module","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/makeusecasewithrepository(_:repositoryprotocol:repositoryfallback:factory:)","title":"func makeUseCaseWithRepository<UseCase, Repo>(UseCase.Type, repositoryProtocol: Repo.Type, repositoryFallback: @autoclosure () -> Repo, factory: (Repo) -> UseCase) -> () -> Module","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/registerinterfacepattern(_:repositoryfactory:usecasefactory:repositoryfallback:)","title":"func registerInterfacePattern<Interface>(Interface.Type, repositoryFactory: () -> Interface, useCaseFactory: (Interface) -> Interface, repositoryFallback: () -> Interface) -> [() -> Module]","type":"method"},{"path":"\/documentation\/dicontainer\/registermodule\/resolveordefault(for:fallback:)","title":"func resolveOrDefault<T>(for: T.Type, fallback: @autoclosure () -> T) -> T","type":"method"}],"path":"\/documentation\/dicontainer\/registermodule","title":"RegisterModule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registration\/init(_:condition:factory:fallback:)","title":"init<T>(T.Type, condition: Bool, factory: () -> T, fallback: () -> T)","type":"init"},{"path":"\/documentation\/dicontainer\/registration\/init(_:factory:)","title":"init<T>(T.Type, factory: () -> T)","type":"init"}],"path":"\/documentation\/dicontainer\/registration","title":"Registration","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registrationbuilder\/buildblock(_:)","title":"static func buildBlock<T>(T) -> T","type":"method"}],"path":"\/documentation\/dicontainer\/registrationbuilder","title":"RegistrationBuilder","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registrationinfo\/lastregistrationdate","title":"let lastRegistrationDate: Date","type":"property"},{"path":"\/documentation\/dicontainer\/registrationinfo\/registrationcount","title":"let registrationCount: Int","type":"property"},{"path":"\/documentation\/dicontainer\/registrationinfo\/summary","title":"var summary: String","type":"property"},{"path":"\/documentation\/dicontainer\/registrationinfo\/type","title":"let type: RegistrationType","type":"property"}],"path":"\/documentation\/dicontainer\/registrationinfo","title":"RegistrationInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safefactory\/init(_:)","title":"init(KeyPath<DependencyContainer, T?>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safefactory\/wrappedvalue","title":"var wrappedValue: SafeResolutionResult<T>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safefactory\/getvalue()","title":"func getValue() throws -> T","type":"method"}],"path":"\/documentation\/dicontainer\/safefactory","title":"SafeFactory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safeinject\/init()","title":"init()","type":"init"},{"path":"\/documentation\/dicontainer\/safeinject\/init(_:)-5arrr","title":"init(KeyPath<DependencyContainer, T?>)","type":"init"},{"path":"\/documentation\/dicontainer\/safeinject\/init(_:)-95i3n","title":"init(T.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safeinject\/lastresolutionerror","title":"var lastResolutionError: SafeDIError?","type":"property"},{"path":"\/documentation\/dicontainer\/safeinject\/wrappedvalue","title":"var wrappedValue: SafeResolutionResult<T>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safeinject\/getvalue()","title":"func getValue() throws -> T","type":"method"},{"path":"\/documentation\/dicontainer\/safeinject\/getvalue(strategy:)","title":"func getValue(strategy: RecoveryStrategy<T>) -> T?","type":"method"}],"path":"\/documentation\/dicontainer\/safeinject","title":"SafeInject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/saferequiredinject\/init(_:context:)-3roea","title":"init(T.Type, context: String?)","type":"init"},{"path":"\/documentation\/dicontainer\/saferequiredinject\/init(_:context:)-c0i","title":"init(KeyPath<DependencyContainer, T?>, context: String?)","type":"init"},{"path":"\/documentation\/dicontainer\/saferequiredinject\/init(context:)","title":"init(context: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/saferequiredinject\/wrappedvalue","title":"var wrappedValue: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/saferequiredinject\/getvalue()","title":"func getValue() throws -> T","type":"method"}],"path":"\/documentation\/dicontainer\/saferequiredinject","title":"SafeRequiredInject","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/typeidentifier\/==(_:_:)","title":"static func == (TypeIdentifier<T>, TypeIdentifier<T>) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/typeidentifier\/init(_:)","title":"init(T.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/typeidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/typeidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/typeidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/typeidentifier","title":"TypeIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/typenamingvalidationrule\/init(requiredsuffixes:)","title":"init(requiredSuffixes: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/typenamingvalidationrule\/name","title":"let name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/typenamingvalidationrule\/validateregistration(_:)","title":"func validateRegistration<T>(T.Type) async -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/typenamingvalidationrule\/validateresolution(_:instance:)","title":"func validateResolution<T>(T.Type, instance: T) async -> Bool","type":"method"}],"path":"\/documentation\/dicontainer\/typenamingvalidationrule","title":"TypeNamingValidationRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/typeregistration\/init(_:factory:)","title":"init<T>(T.Type, factory: () -> T)","type":"init"}],"path":"\/documentation\/dicontainer\/typeregistration","title":"TypeRegistration","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/typeregistrationbuilder\/buildblock(_:)","title":"static func buildBlock(TypeRegistration...) -> [TypeRegistration]","type":"method"}],"path":"\/documentation\/dicontainer\/typeregistrationbuilder","title":"TypeRegistrationBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/uncheckedsendablebox\/init(_:)","title":"init(T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/uncheckedsendablebox\/value","title":"let value: T","type":"property"}],"path":"\/documentation\/dicontainer\/uncheckedsendablebox","title":"UncheckedSendableBox","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifiedregistration\/init(_:condition:factory:fallback:)","title":"init<T>(T.Type, condition: Bool, factory: () -> T, fallback: () -> T)","type":"init"},{"path":"\/documentation\/dicontainer\/unifiedregistration\/init(_:default:)","title":"init<T>(T.Type, default: T)","type":"init"},{"path":"\/documentation\/dicontainer\/unifiedregistration\/init(_:factory:)","title":"init<T>(T.Type, factory: () -> T)","type":"init"}],"path":"\/documentation\/dicontainer\/unifiedregistration","title":"UnifiedRegistration","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/unifiedregistrationbuilder\/buildarray(_:)","title":"static func buildArray([UnifiedRegistration]) -> [UnifiedRegistration]","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistrationbuilder\/buildblock(_:)","title":"static func buildBlock(UnifiedRegistration...) -> [UnifiedRegistration]","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistrationbuilder\/buildeither(first:)","title":"static func buildEither(first: UnifiedRegistration) -> [UnifiedRegistration]","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistrationbuilder\/buildeither(second:)","title":"static func buildEither(second: UnifiedRegistration) -> [UnifiedRegistration]","type":"method"},{"path":"\/documentation\/dicontainer\/unifiedregistrationbuilder\/buildoptional(_:)","title":"static func buildOptional(UnifiedRegistration?) -> [UnifiedRegistration]","type":"method"}],"path":"\/documentation\/dicontainer\/unifiedregistrationbuilder","title":"UnifiedRegistrationBuilder","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/conditionalinjectfromenvironment(_:expectedvalue:primary:fallback:)","title":"func ConditionalInjectFromEnvironment<T>(String, expectedValue: String, primary: KeyPath<DependencyContainer, T?>, fallback: KeyPath<DependencyContainer, T?>) -> ConditionalInject<T>","type":"func"},{"path":"\/documentation\/dicontainer\/conditionalinjectfromuserdefault(_:primary:fallback:)","title":"func ConditionalInjectFromUserDefault<T>(String, primary: KeyPath<DependencyContainer, T?>, fallback: KeyPath<DependencyContainer, T?>) -> ConditionalInject<T>","type":"func"},{"path":"\/documentation\/dicontainer\/register(_:factory:)","title":"func register<T>(T.Type, factory: () -> T) -> RegisterEasyScopeEntry","type":"func"},{"path":"\/documentation\/dicontainer\/registerinterface(_:repository:usecase:fallback:)","title":"func registerInterface<Interface>(Interface.Type, repository: () -> Interface, useCase: (Interface) -> Interface, fallback: () -> Interface) -> [() -> Module]","type":"func"},{"path":"\/documentation\/dicontainer\/setupautoregistration()","title":"func setupAutoRegistration()","type":"func"},{"path":"\/documentation\/dicontainer\/unsafesendable(_:)","title":"func unsafeSendable<T>(T) -> UncheckedSendableBox<T>","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/=_(_:_:)","title":"func => <Interface>(Interface.Type, (repository: () -> Interface, useCase: (Interface) -> Interface, fallback: () -> Interface)) -> BulkRegistrationEntry","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/injectoptional","title":"InjectOptional","type":"typealias"},{"path":"\/documentation\/dicontainer\/injectrequired","title":"InjectRequired","type":"typealias"},{"path":"\/documentation\/dicontainer\/registermoduleresult","title":"RegisterModuleResult","type":"typealias"},{"path":"\/documentation\/dicontainer\/repositorymodulefactoryprotocol","title":"RepositoryModuleFactoryProtocol","type":"typealias"},{"path":"\/documentation\/dicontainer\/scopemodulefactoryprotocol","title":"ScopeModuleFactoryProtocol","type":"typealias"},{"path":"\/documentation\/dicontainer\/simplifieddi","title":"SimplifiedDI","type":"typealias"},{"path":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","title":"UseCaseModuleFactoryProtocol","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/advancedexamplerunner\/runalladvancedexamples()","title":"static func runAllAdvancedExamples() async","type":"method"}],"path":"\/documentation\/dicontainer\/advancedexamplerunner","title":"AdvancedExampleRunner","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/advancedexamples\/asyncdiexample()","title":"static func asyncDIExample() async","type":"method"},{"path":"\/documentation\/dicontainer\/advancedexamples\/autoresolutionexample()","title":"static func autoResolutionExample() async","type":"method"},{"path":"\/documentation\/dicontainer\/advancedexamples\/modulefactoryexample()","title":"static func moduleFactoryExample() async","type":"method"},{"path":"\/documentation\/dicontainer\/advancedexamples\/needlestyleexample()","title":"static func needleStyleExample() async","type":"method"},{"path":"\/documentation\/dicontainer\/advancedexamples\/performanceoptimizationexample()","title":"static func performanceOptimizationExample() async","type":"method"},{"path":"\/documentation\/dicontainer\/advancedexamples\/pluginsystemexample()","title":"static func pluginSystemExample() async","type":"method"}],"path":"\/documentation\/dicontainer\/advancedexamples","title":"AdvancedExamples","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/autoperformanceoptimizer\/enableautooptimization()","title":"static func enableAutoOptimization()","type":"method"},{"path":"\/documentation\/dicontainer\/autoperformanceoptimizer\/optimizebasedonusage()","title":"static func optimizeBasedOnUsage()","type":"method"}],"path":"\/documentation\/dicontainer\/autoperformanceoptimizer","title":"AutoPerformanceOptimizer","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diactorbridge\/migratetoactor()","title":"static func migrateToActor() async","type":"method"},{"path":"\/documentation\/dicontainer\/diactorbridge\/registersync(_:factory:)","title":"static func registerSync<T>(T.Type, factory: () -> T)","type":"method"},{"path":"\/documentation\/dicontainer\/diactorbridge\/resolvesync(_:)","title":"static func resolveSync<T>(T.Type) -> T?","type":"method"}],"path":"\/documentation\/dicontainer\/diactorbridge","title":"DIActorBridge","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diactorglobalapi\/register(_:factory:)","title":"static func register<T>(T.Type, factory: () -> T) async -> () async -> Void","type":"method"},{"path":"\/documentation\/dicontainer\/diactorglobalapi\/release(_:)","title":"static func release<T>(T.Type) async","type":"method"},{"path":"\/documentation\/dicontainer\/diactorglobalapi\/releaseall()","title":"static func releaseAll() async","type":"method"},{"path":"\/documentation\/dicontainer\/diactorglobalapi\/resolve(_:)","title":"static func resolve<T>(T.Type) async -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/diactorglobalapi\/resolveresult(_:)","title":"static func resolveResult<T>(T.Type) async -> Result<T, DIError>","type":"method"},{"path":"\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)","title":"static func resolveThrows<T>(T.Type) async throws -> T","type":"method"}],"path":"\/documentation\/dicontainer\/diactorglobalapi","title":"DIActorGlobalAPI","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/diasync\/getorcreate(_:factory:)","title":"static func getOrCreate<T>(KeyPath<DependencyContainer, T?>, factory: () async -> T) async -> T","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/isregistered(_:)-8sqgq","title":"static func isRegistered<T>(KeyPath<DependencyContainer, T?>) async -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/isregistered(_:)-mp1c","title":"static func isRegistered<T>(T.Type) async -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/register(_:factory:)-6ljbz","title":"static func register<T>(T.Type, factory: () async -> T) async","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/register(_:factory:)-86x7z","title":"static func register<T>(KeyPath<DependencyContainer, T?>, factory: () async -> T) async -> T","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/registerif(_:condition:factory:fallback:)-1b3ct","title":"static func registerIf<T>(T.Type, condition: Bool, factory: () async -> T, fallback: () async -> T) async","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/registerif(_:condition:factory:fallback:)-7fm0g","title":"static func registerIf<T>(KeyPath<DependencyContainer, T?>, condition: Bool, factory: () async -> T, fallback: () async -> T) async -> T","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/registermany(_:)","title":"static func registerMany(() -> [DIAsyncRegistration]) async","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/releaseall()","title":"static func releaseAll() async","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/requireresolve(_:)","title":"static func requireResolve<T>(T.Type) async -> T","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/resolve(_:)","title":"static func resolve<T>(T.Type) async -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/diasync\/resolve(_:default:)","title":"static func resolve<T>(T.Type, default: @autoclosure () -> T) async -> T","type":"method"}],"path":"\/documentation\/dicontainer\/diasync","title":"DIAsync","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dierror\/circulardependency(_:)","title":"case circularDependency(String)","type":"case"},{"path":"\/documentation\/dicontainer\/dierror\/configurationerror(_:)","title":"case configurationError(String)","type":"case"},{"path":"\/documentation\/dicontainer\/dierror\/containernotbootstrapped(_:)","title":"case containerNotBootstrapped(String)","type":"case"},{"path":"\/documentation\/dicontainer\/dierror\/creationfailed(_:underlying:)-swift.enum.case","title":"case creationFailed(String, underlying: (any Error)?)","type":"case"},{"path":"\/documentation\/dicontainer\/dierror\/dependencynotfound(_:)","title":"case dependencyNotFound(String)","type":"case"},{"path":"\/documentation\/dicontainer\/dierror\/registrationfailed(_:)","title":"case registrationFailed(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dierror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dicontainer\/dierror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/dicontainer\/dierror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/dicontainer\/dierror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dierror\/circulardependency(_:chain:)","title":"static func circularDependency<T>(T.Type, chain: [String]) -> DIError","type":"method"},{"path":"\/documentation\/dicontainer\/dierror\/creationfailed(_:underlying:)-swift.type.method","title":"static func creationFailed<T>(T.Type, underlying: any Error) -> DIError","type":"method"},{"path":"\/documentation\/dicontainer\/dierror\/dependencynotfound(_:hint:)","title":"static func dependencyNotFound<T>(T.Type, hint: String?) -> DIError","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/dicontainer\/dierror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dierror\/helpanchor","title":"var helpAnchor: String?","type":"property"}],"path":"\/documentation\/dicontainer\/dierror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/dierror","title":"DIError","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencykeymigrationguide\/printmigrationsteps()","title":"static func printMigrationSteps()","type":"method"}],"path":"\/documentation\/dicontainer\/dependencykeymigrationguide","title":"DependencyKeyMigrationGuide","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencyvalidationerror\/circulardependency(_:)","title":"case circularDependency(String)","type":"case"},{"path":"\/documentation\/dicontainer\/dependencyvalidationerror\/missingdependency(_:)","title":"case missingDependency(String)","type":"case"},{"path":"\/documentation\/dicontainer\/dependencyvalidationerror\/typemismatch(expected:actual:)","title":"case typeMismatch(expected: String, actual: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencyvalidationerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/dependencyvalidationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/dicontainer\/dependencyvalidationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/dependencyvalidationerror","title":"DependencyValidationError","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/examplerunner\/runallexamples()","title":"static func runAllExamples() async","type":"method"}],"path":"\/documentation\/dicontainer\/examplerunner","title":"ExampleRunner","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphexportformat\/dot","title":"case dot","type":"case"},{"path":"\/documentation\/dicontainer\/graphexportformat\/json","title":"case json","type":"case"},{"path":"\/documentation\/dicontainer\/graphexportformat\/mermaid","title":"case mermaid","type":"case"},{"path":"\/documentation\/dicontainer\/graphexportformat\/text","title":"case text","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/graphexportformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/graphexportformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/graphexportformat","title":"GraphExportFormat","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/legacysimplifieddisystem\/limitations","title":"static let limitations: [String]","type":"property"},{"path":"\/documentation\/dicontainer\/legacysimplifieddisystem\/modernbenefits","title":"static let modernBenefits: [String]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/legacysimplifieddisystem\/printmigrationchecklist()","title":"static func printMigrationChecklist()","type":"method"}],"path":"\/documentation\/dicontainer\/legacysimplifieddisystem","title":"LegacySimplifiedDISystem","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/moduleregistrationstatus\/failed(_:)","title":"case failed(any Error)","type":"case"},{"path":"\/documentation\/dicontainer\/moduleregistrationstatus\/registered","title":"case registered","type":"case"},{"path":"\/documentation\/dicontainer\/moduleregistrationstatus\/registering","title":"case registering","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/moduleregistrationstatus\/error","title":"var error: (any Error)?","type":"property"},{"path":"\/documentation\/dicontainer\/moduleregistrationstatus\/isregistered","title":"var isRegistered: Bool","type":"property"}],"path":"\/documentation\/dicontainer\/moduleregistrationstatus","title":"ModuleRegistrationStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/circulardependency(_:)","title":"case circularDependency(String)","type":"case"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/duplicatemodule(_:)","title":"case duplicateModule(String)","type":"case"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/missingdependency(_:_:)","title":"case missingDependency(String, String)","type":"case"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/modulenotfound(_:)","title":"case moduleNotFound(String)","type":"case"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/validationfailed(_:_:)","title":"case validationFailed(String, any Error)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/dicontainer\/modulesystemerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/dicontainer\/modulesystemerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/dicontainer\/modulesystemerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/modulesystemerror","title":"ModuleSystemError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginerror\/invalidpluginconfiguration(_:)","title":"case invalidPluginConfiguration(String)","type":"case"},{"path":"\/documentation\/dicontainer\/pluginerror\/pluginactivationfailed(_:_:)","title":"case pluginActivationFailed(String, any Error)","type":"case"},{"path":"\/documentation\/dicontainer\/pluginerror\/pluginalreadyregistered(_:)","title":"case pluginAlreadyRegistered(String)","type":"case"},{"path":"\/documentation\/dicontainer\/pluginerror\/plugindeactivationfailed(_:_:)","title":"case pluginDeactivationFailed(String, any Error)","type":"case"},{"path":"\/documentation\/dicontainer\/pluginerror\/pluginnotfound(_:)","title":"case pluginNotFound(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/dicontainer\/pluginerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/pluginerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/dicontainer\/pluginerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/dicontainer\/pluginerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/dicontainer\/pluginerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/pluginerror","title":"PluginError","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/quickstartexamples\/basicexample()","title":"static func basicExample() async","type":"method"},{"path":"\/documentation\/dicontainer\/quickstartexamples\/batchregistrationexample()","title":"static func batchRegistrationExample()","type":"method"},{"path":"\/documentation\/dicontainer\/quickstartexamples\/conditionalexample()","title":"static func conditionalExample() async","type":"method"},{"path":"\/documentation\/dicontainer\/quickstartexamples\/keypathfactoryexample()","title":"static func keyPathFactoryExample() async","type":"method"},{"path":"\/documentation\/dicontainer\/quickstartexamples\/propertywrapperexample()","title":"static func propertyWrapperExample() async","type":"method"},{"path":"\/documentation\/dicontainer\/quickstartexamples\/servicelayerexample()","title":"static func serviceLayerExample() async","type":"method"}],"path":"\/documentation\/dicontainer\/quickstartexamples","title":"QuickStartExamples","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/recoverystrategy\/fallback(_:)","title":"case fallback(() throws -> T)","type":"case"},{"path":"\/documentation\/dicontainer\/recoverystrategy\/ignore","title":"case ignore","type":"case"},{"path":"\/documentation\/dicontainer\/recoverystrategy\/retry(maxattempts:)","title":"case retry(maxAttempts: Int)","type":"case"},{"path":"\/documentation\/dicontainer\/recoverystrategy\/usedefault(_:)","title":"case useDefault(T)","type":"case"}],"path":"\/documentation\/dicontainer\/recoverystrategy","title":"RecoveryStrategy","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registerandreturn\/extractkeypathname(_:)","title":"static func extractKeyPathName<T>(KeyPath<DependencyContainer, T?>) -> String","type":"method"},{"path":"\/documentation\/dicontainer\/registerandreturn\/isregistered(_:)","title":"static func isRegistered<T>(KeyPath<DependencyContainer, T?>) -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/registerandreturn\/register(_:factory:file:function:line:)","title":"static func register<T>(KeyPath<DependencyContainer, T?>, factory: () -> T, file: String, function: String, line: Int) -> T","type":"method"},{"path":"\/documentation\/dicontainer\/registerandreturn\/registerasync(_:factory:file:function:line:)","title":"static func registerAsync<T>(KeyPath<DependencyContainer, T?>, factory: () async -> T, file: String, function: String, line: Int) async -> T","type":"method"}],"path":"\/documentation\/dicontainer\/registerandreturn","title":"RegisterAndReturn","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/circulardependency(involved:)","title":"case circularDependency(involved: [String])","type":"case"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/configurationerror(message:)","title":"case configurationError(message: String)","type":"case"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/dependencyresolutionfailure(type:reason:)","title":"case dependencyResolutionFailure(type: String, reason: String?)","type":"case"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/factoryexecutionerror(type:underlyingerror:)","title":"case factoryExecutionError(type: String, underlyingError: any Error)","type":"case"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/typecastfailure(from:to:reason:)","title":"case typeCastFailure(from: String, to: String, reason: String?)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/dicontainer\/registermoduleerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/dicontainer\/registermoduleerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/dicontainer\/registermoduleerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/registermoduleerror","title":"RegisterModuleError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registrationtype\/asyncfactory","title":"case asyncFactory","type":"case"},{"path":"\/documentation\/dicontainer\/registrationtype\/syncfactory","title":"case syncFactory","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registrationtype\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/registrationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dicontainer\/registrationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/registrationtype","title":"RegistrationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safedierror\/circulardependency(path:)","title":"case circularDependency(path: [String])","type":"case"},{"path":"\/documentation\/dicontainer\/safedierror\/containernotinitialized","title":"case containerNotInitialized","type":"case"},{"path":"\/documentation\/dicontainer\/safedierror\/dependencynotfound(type:keypath:)","title":"case dependencyNotFound(type: String, keyPath: String?)","type":"case"},{"path":"\/documentation\/dicontainer\/safedierror\/factorynotfound(keypath:)","title":"case factoryNotFound(keyPath: String)","type":"case"},{"path":"\/documentation\/dicontainer\/safedierror\/invalidconfiguration(reason:)","title":"case invalidConfiguration(reason: String)","type":"case"},{"path":"\/documentation\/dicontainer\/safedierror\/requireddependencymissing(type:context:)","title":"case requiredDependencyMissing(type: String, context: String?)","type":"case"},{"path":"\/documentation\/dicontainer\/safedierror\/resolutiontimeout(type:timeout:)","title":"case resolutionTimeout(type: String, timeout: TimeInterval)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safedierror\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/dicontainer\/safedierror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/dicontainer\/safedierror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/dicontainer\/safedierror\/isrecoverable","title":"var isRecoverable: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safedierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/dicontainer\/safedierror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safedierror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/dicontainer\/safedierror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/dicontainer\/safedierror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/dicontainer\/safedierror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/dicontainer\/safedierror","title":"SafeDIError","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safedependencykeypatterns\/asyncpattern","title":"static let asyncPattern: String","type":"property"},{"path":"\/documentation\/dicontainer\/safedependencykeypatterns\/factorypattern","title":"static let factoryPattern: String","type":"property"},{"path":"\/documentation\/dicontainer\/safedependencykeypatterns\/preregistrationpattern","title":"static let preRegistrationPattern: String","type":"property"}],"path":"\/documentation\/dicontainer\/safedependencykeypatterns","title":"SafeDependencyKeyPatterns","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safedependencyregister\/resolvewithfallback(_:fallback:)","title":"static func resolveWithFallback<T>(KeyPath<DependencyContainer, T?>, fallback: @autoclosure () -> T) -> T","type":"method"},{"path":"\/documentation\/dicontainer\/safedependencyregister\/saferesolve(_:)","title":"static func safeResolve<T>(KeyPath<DependencyContainer, T?>) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/safedependencyregister\/setupfordependencykeys()","title":"static func setupForDependencyKeys()","type":"method"}],"path":"\/documentation\/dicontainer\/safedependencyregister","title":"SafeDependencyRegister","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safedependencyresolver\/saferesolve(_:)","title":"static func safeResolve<T>(T.Type) -> SafeResolutionResult<T>","type":"method"},{"path":"\/documentation\/dicontainer\/safedependencyresolver\/saferesolve(_:strategy:)","title":"static func safeResolve<T>(T.Type, strategy: RecoveryStrategy<T>) -> T?","type":"method"}],"path":"\/documentation\/dicontainer\/safedependencyresolver","title":"SafeDependencyResolver","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/safeinjectionmigration\/migrateinject(_:)","title":"static func migrateInject<T>(SafeResolutionResult<T>) -> T?","type":"method"},{"path":"\/documentation\/dicontainer\/safeinjectionmigration\/migrateinjectwithlogging(_:fallback:)","title":"static func migrateInjectWithLogging<T>(SafeResolutionResult<T>, fallback: T?) -> T?","type":"method"}],"path":"\/documentation\/dicontainer\/safeinjectionmigration","title":"SafeInjectionMigration","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/saferesolutionresult\/failure(_:)","title":"case failure(SafeDIError)","type":"case"},{"path":"\/documentation\/dicontainer\/saferesolutionresult\/success(_:)","title":"case success(T)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/saferesolutionresult\/error","title":"var error: SafeDIError?","type":"property"},{"path":"\/documentation\/dicontainer\/saferesolutionresult\/value","title":"var value: T?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/saferesolutionresult\/flatmap(_:)","title":"func flatMap<U>((T) throws -> SafeResolutionResult<U>) rethrows -> SafeResolutionResult<U>","type":"method"},{"path":"\/documentation\/dicontainer\/saferesolutionresult\/map(_:)","title":"func map<U>((T) throws -> U) rethrows -> SafeResolutionResult<U>","type":"method"},{"path":"\/documentation\/dicontainer\/saferesolutionresult\/onfailure(_:)","title":"func onFailure((SafeDIError) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/dicontainer\/saferesolutionresult\/onsuccess(_:)","title":"func onSuccess((T) throws -> Void) rethrows","type":"method"}],"path":"\/documentation\/dicontainer\/saferesolutionresult","title":"SafeResolutionResult","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/simplekeypathregistry\/extractkeypathname(_:)","title":"static func extractKeyPathName<T>(KeyPath<DependencyContainer, T?>) -> String","type":"method"},{"path":"\/documentation\/dicontainer\/simplekeypathregistry\/isregistered(_:)","title":"static func isRegistered<T>(KeyPath<DependencyContainer, T?>) -> Bool","type":"method"},{"path":"\/documentation\/dicontainer\/simplekeypathregistry\/register(_:factory:file:function:line:)","title":"static func register<T>(KeyPath<DependencyContainer, T?>, factory: () -> T, file: String, function: String, line: Int)","type":"method"},{"path":"\/documentation\/dicontainer\/simplekeypathregistry\/registerif(_:condition:factory:file:function:line:)","title":"static func registerIf<T>(KeyPath<DependencyContainer, T?>, condition: Bool, factory: () -> T, file: String, function: String, line: Int)","type":"method"},{"path":"\/documentation\/dicontainer\/simplekeypathregistry\/registerifdebug(_:factory:file:function:line:)","title":"static func registerIfDebug<T>(KeyPath<DependencyContainer, T?>, factory: () -> T, file: String, function: String, line: Int)","type":"method"},{"path":"\/documentation\/dicontainer\/simplekeypathregistry\/registerifrelease(_:factory:file:function:line:)","title":"static func registerIfRelease<T>(KeyPath<DependencyContainer, T?>, factory: () -> T, file: String, function: String, line: Int)","type":"method"},{"path":"\/documentation\/dicontainer\/simplekeypathregistry\/registerinstance(_:instance:file:function:line:)","title":"static func registerInstance<T>(KeyPath<DependencyContainer, T?>, instance: T, file: String, function: String, line: Int)","type":"method"}],"path":"\/documentation\/dicontainer\/simplekeypathregistry","title":"SimpleKeyPathRegistry","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/simplesafedependencyregister\/resolvewithfallback(_:fallback:)","title":"static func resolveWithFallback<T>(KeyPath<DependencyContainer, T?>, fallback: @autoclosure () -> T) -> T","type":"method"},{"path":"\/documentation\/dicontainer\/simplesafedependencyregister\/saferesolve(_:)","title":"static func safeResolve<T>(KeyPath<DependencyContainer, T?>) -> T?","type":"method"}],"path":"\/documentation\/dicontainer\/simplesafedependencyregister","title":"SimpleSafeDependencyRegister","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/swift\/sequence\/asyncforeach(_:)","title":"func asyncForEach((Self.Element) async throws -> Void) async rethrows","type":"method"}],"path":"\/documentation\/dicontainer\/swift\/sequence","title":"Sequence","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/swift\/result\/resolved","title":"var resolved: Success?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dicontainer\/swift\/result\/resolvedwithlogging(file:function:line:)","title":"func resolvedWithLogging(file: String, function: String, line: Int) -> Success?","type":"method"}],"path":"\/documentation\/dicontainer\/swift\/result","title":"Result","type":"extension"}],"path":"\/documentation\/dicontainer\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/dicontainer","title":"DiContainer","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}