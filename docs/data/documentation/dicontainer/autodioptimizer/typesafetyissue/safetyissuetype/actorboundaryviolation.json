{"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"actorBoundaryViolation"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/actorboundaryviolation"]}],"metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"actorBoundaryViolation"}],"modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer15AutoDIOptimizerC15TypeSafetyIssueV0fgE0O22actorBoundaryViolationyA2GmF","symbolKind":"case","title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.actorBoundaryViolation","roleHeading":"Case","role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/actorBoundaryViolation","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType":{"title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafetyIssueType","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype","abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType","navigatorTitle":[{"text":"SafetyIssueType","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer":{"kind":"article","title":"자동 DI 최적화","type":"topic","abstract":[{"text":"자동으로 의존성 그래프를 생성하고 성능을 최적화하는 시스템","type":"text"}],"role":"article","url":"\/documentation\/dicontainer\/autodioptimizer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/actorBoundaryViolation":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"actorBoundaryViolation"}],"kind":"symbol","title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.actorBoundaryViolation","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/actorboundaryviolation","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/actorBoundaryViolation"},"doc://DiContainer/documentation/DiContainer":{"kind":"symbol","role":"collection","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue":{"title":"AutoDIOptimizer.TypeSafetyIssue","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypeSafetyIssue","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue","abstract":[{"type":"text","text":"타입 안전성 이슈 정보"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue","navigatorTitle":[{"text":"TypeSafetyIssue","kind":"identifier"}]}}}