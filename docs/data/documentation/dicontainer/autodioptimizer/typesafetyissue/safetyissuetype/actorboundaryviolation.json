{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/actorBoundaryViolation"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/actorboundaryviolation"]}],"metadata":{"externalID":"s:11DiContainer15AutoDIOptimizerC15TypeSafetyIssueV0fgE0O22actorBoundaryViolationyA2GmF","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"actorBoundaryViolation","kind":"identifier"}],"roleHeading":"Case","role":"symbol","title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.actorBoundaryViolation","modules":[{"name":"DiContainer"}],"symbolKind":"case"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"actorBoundaryViolation"}],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType"]]},"sections":[],"kind":"symbol","references":{"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeSafetyIssue"}],"title":"AutoDIOptimizer.TypeSafetyIssue","role":"symbol","abstract":[{"text":"타입 안전성 이슈 정보","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TypeSafetyIssue"}],"kind":"symbol","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue","type":"topic"},"doc://DiContainer/documentation/DiContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","title":"DiContainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"kind":"symbol","url":"\/documentation\/dicontainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","title":"자동 DI 최적화","role":"article","abstract":[{"type":"text","text":"자동으로 의존성 그래프를 생성하고 성능을 최적화하는 시스템"}],"kind":"article","url":"\/documentation\/dicontainer\/autodioptimizer","type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SafetyIssueType"}],"title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SafetyIssueType"}],"kind":"symbol","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype","type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/actorBoundaryViolation":{"type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/actorBoundaryViolation","abstract":[],"url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/actorboundaryviolation","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actorBoundaryViolation","kind":"identifier"}],"title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.actorBoundaryViolation"}}}