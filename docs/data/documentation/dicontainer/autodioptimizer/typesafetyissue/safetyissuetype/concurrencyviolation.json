{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"concurrencyViolation"}]}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/concurrencyviolation"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/concurrencyViolation"},"metadata":{"title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.concurrencyViolation","modules":[{"name":"DiContainer"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"concurrencyViolation"}],"role":"symbol","externalID":"s:11DiContainer15AutoDIOptimizerC15TypeSafetyIssueV0fgE0O20concurrencyViolationyA2GmF","roleHeading":"Case","symbolKind":"case"},"references":{"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue","title":"AutoDIOptimizer.TypeSafetyIssue","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypeSafetyIssue","kind":"identifier"}],"navigatorTitle":[{"text":"TypeSafetyIssue","kind":"identifier"}],"url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue","kind":"symbol","role":"symbol","abstract":[{"text":"타입 안전성 이슈 정보","type":"text"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType","title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafetyIssueType","kind":"identifier"}],"navigatorTitle":[{"text":"SafetyIssueType","kind":"identifier"}],"url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype","kind":"symbol","role":"symbol","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer":{"type":"topic","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","kind":"article","abstract":[{"text":"자동으로 의존성 그래프를 생성하고 성능을 최적화하는 시스템","type":"text"}],"title":"자동 DI 최적화","url":"\/documentation\/dicontainer\/autodioptimizer"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/concurrencyViolation":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/concurrencyViolation","title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.concurrencyViolation","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"concurrencyViolation"}],"url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/concurrencyviolation","kind":"symbol","role":"symbol","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","role":"collection","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic"}}}