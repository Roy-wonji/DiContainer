{"topicSections":[{"anchor":"Enumeration-Cases","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/actorBoundaryViolation","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/concurrencyViolation","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/nilResolution","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/sendableViolation","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/typecastFailure"],"generated":true,"title":"Enumeration Cases"},{"anchor":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/init(rawValue:)"],"generated":true,"title":"Initializers"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/Equatable-Implementations","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/RawRepresentable-Implementations"],"generated":true,"title":"Default Implementations"}],"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SafetyIssueType"}],"role":"symbol","modules":[{"name":"DiContainer"}],"navigatorTitle":[{"text":"SafetyIssueType","kind":"identifier"}],"title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType","symbolKind":"enum","externalID":"s:11DiContainer15AutoDIOptimizerC15TypeSafetyIssueV0fgE0O","roleHeading":"Enumeration"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue"]]},"variants":[{"paths":["\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/DiContainer\/SQ","doc:\/\/DiContainer\/SH","doc:\/\/DiContainer\/SY","doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/s16SendableMetatypeP"],"type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SafetyIssueType"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/typecastFailure":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.typecastFailure","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/typecastFailure","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/typecastfailure","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"typecastFailure"}]},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/sendableViolation":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.sendableViolation","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/sendableViolation","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/sendableviolation","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendableViolation"}]},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/init(rawValue:)":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"title":"init(rawValue:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/init(rawValue:)","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/init(rawvalue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}]},"doc://DiContainer/SY":{"type":"unresolvable","identifier":"doc:\/\/DiContainer\/SY","title":"Swift.RawRepresentable"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/concurrencyViolation":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/concurrencyViolation","title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.concurrencyViolation","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"concurrencyViolation"}],"url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/concurrencyviolation","kind":"symbol","role":"symbol","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/Equatable-Implementations":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/Equatable-Implementations","title":"Equatable Implementations","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/equatable-implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer":{"type":"topic","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","kind":"article","abstract":[{"text":"자동으로 의존성 그래프를 생성하고 성능을 최적화하는 시스템","type":"text"}],"title":"자동 DI 최적화","url":"\/documentation\/dicontainer\/autodioptimizer"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType","title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafetyIssueType","kind":"identifier"}],"navigatorTitle":[{"text":"SafetyIssueType","kind":"identifier"}],"url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype","kind":"symbol","role":"symbol","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/RawRepresentable-Implementations":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/RawRepresentable-Implementations","title":"RawRepresentable Implementations","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/rawrepresentable-implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","role":"collection","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue","title":"AutoDIOptimizer.TypeSafetyIssue","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypeSafetyIssue","kind":"identifier"}],"navigatorTitle":[{"text":"TypeSafetyIssue","kind":"identifier"}],"url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue","kind":"symbol","role":"symbol","abstract":[{"text":"타입 안전성 이슈 정보","type":"text"}],"type":"topic"},"doc://DiContainer/s8SendableP":{"identifier":"doc:\/\/DiContainer\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://DiContainer/SH":{"identifier":"doc:\/\/DiContainer\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://DiContainer/s16SendableMetatypeP":{"identifier":"doc:\/\/DiContainer\/s16SendableMetatypeP","title":"Swift.SendableMetatype","type":"unresolvable"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/actorBoundaryViolation":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/actorBoundaryViolation","title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.actorBoundaryViolation","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actorBoundaryViolation","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/actorboundaryviolation","role":"symbol","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer/TypeSafetyIssue/SafetyIssueType/nilResolution":{"type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer\/TypeSafetyIssue\/SafetyIssueType\/nilResolution","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"nilResolution"}],"abstract":[],"title":"AutoDIOptimizer.TypeSafetyIssue.SafetyIssueType.nilResolution","url":"\/documentation\/dicontainer\/autodioptimizer\/typesafetyissue\/safetyissuetype\/nilresolution"},"doc://DiContainer/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/DiContainer\/SQ"}}}