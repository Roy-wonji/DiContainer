{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"limitationsAndConsiderations","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"limitationsAndConsiderations","roleHeading":"Type Property","symbolKind":"property","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer0B13UsageExamplesO28limitationsAndConsiderationsSSvpZ"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsageExamples"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"limitationsAndConsiderations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD-%EB%B0%8F-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD","text":"제한사항 및 고려사항"},{"level":3,"type":"heading","anchor":"%E2%9A%A0%EF%B8%8F-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%88%9C%EC%84%9C","text":"⚠️ 의존성 순서"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 컨테이너는 의존성 간의 순서를 보장하지 않습니다. 순서가 중요한 경우:"}]},{"syntax":"swift","code":["\/\/ ❌ 문제 상황: B가 A에 의존하지만 순서 보장 없음","container.register(moduleB) \/\/ A가 필요하지만 아직 등록되지 않을 수 있음","container.register(moduleA)","","\/\/ ✅ 해결책 1: 모듈 팩토리에서 의존성 해결","let moduleB = registerModule.makeDependency(BProtocol.self) {","    let a = DependencyContainer.live.resolve(AProtocol.self)!","    return BImplementation(dependency: a)","}","","\/\/ ✅ 해결책 2: 별도의 순서 보장 로직 사용","await container.register(moduleA).build() \/\/ A 먼저 등록","await Container().register(moduleB).build() \/\/ B 나중에 등록"],"type":"codeListing"},{"text":"⚠️ 오류 처리","level":3,"anchor":"%E2%9A%A0%EF%B8%8F-%EC%98%A4%EB%A5%98-%EC%B2%98%EB%A6%AC","type":"heading"},{"inlineContent":[{"type":"text","text":"현재 구현에서는 모듈 등록 실패를 개별적으로 처리하지 않습니다:"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ 현재: 모든 모듈이 성공하거나 일부 실패해도 계속 진행","await container.build() \/\/ throws 하지 않음","","\/\/ 향후 확장 가능: 오류 수집 및 보고","\/\/ let failures = try await container.buildWithErrorHandling()"],"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/containerusageexamples\/limitationsandconsiderations"]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsageExamples\/limitationsAndConsiderations","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer/ContainerUsageExamples":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsageExamples","navigatorTitle":[{"kind":"identifier","text":"ContainerUsageExamples"}],"title":"ContainerUsageExamples","kind":"symbol","url":"\/documentation\/dicontainer\/containerusageexamples","role":"symbol","abstract":[{"inlineContent":[{"type":"text","text":"Module"}],"type":"strong"},{"type":"text","text":" 은 DI 컨테이너에 “등록 작업”을 수행하기 위한 "},{"inlineContent":[{"text":"최소 단위","type":"text"}],"type":"strong"},{"type":"text","text":"입니다."},{"type":"text","text":" "},{"type":"text","text":"(이 파일에는 타입 정의가 없고, 외부에서 제공되는 "},{"type":"codeVoice","code":"public actor Module"},{"type":"text","text":"을 사용합니다.)"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerUsageExamples"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/ContainerUsageExamples/limitationsAndConsiderations":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"limitationsAndConsiderations","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/dicontainer\/containerusageexamples\/limitationsandconsiderations","abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsageExamples\/limitationsAndConsiderations","title":"limitationsAndConsiderations"}}}