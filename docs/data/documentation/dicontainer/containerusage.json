{"variants":[{"paths":["\/documentation\/dicontainer\/containerusage"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"level":2,"text":"개요","type":"heading","anchor":"%EA%B0%9C%EC%9A%94"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 등록 작업의 최소 단위입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Container.register(_:)"},{"type":"text","text":"로 모듈을 수집하고, "},{"type":"codeVoice","code":"build()"},{"type":"text","text":"에서 병렬 등록합니다."}]}]}],"type":"unorderedList"},{"level":2,"text":"기본 사용","type":"heading","anchor":"%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9"},{"code":["let repoModule = Module(RepositoryProtocol.self) { DefaultRepository() }","let useCaseModule = Module(UseCaseProtocol.self) { DefaultUseCase(repo: DefaultRepository()) }","","let container = Container()","container.register(repoModule)","container.register(useCaseModule)","","await container.build()"],"type":"codeListing","syntax":"swift"},{"level":2,"text":"팩토리와 함께 사용","type":"heading","anchor":"%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%99%80-%ED%95%A8%EA%BB%98-%EC%82%AC%EC%9A%A9"},{"code":["let container = Container()","let repositoryFactory = RepositoryModuleFactory()","let useCaseFactory = UseCaseModuleFactory()","","await repositoryFactory.makeAllModules().asyncForEach { await container.register($0) }","await useCaseFactory.makeAllModules().asyncForEach { await container.register($0) }","await container.build()"],"type":"codeListing","syntax":"swift"},{"level":2,"text":"조건부\/체이닝 예시","type":"heading","anchor":"%EC%A1%B0%EA%B1%B4%EB%B6%80%EC%B2%B4%EC%9D%B4%EB%8B%9D-%EC%98%88%EC%8B%9C"},{"code":["let container = Container()","#if DEBUG","container.register(debugModule)","#else","container.register(prodModule)","#endif","await container.build()"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"title":"Container Usage","modules":[{"name":"DiContainer"}],"role":"article","roleHeading":"Article"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"kind":"article","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다.","type":"text"}],"references":{"doc://DiContainer/documentation/DiContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","title":"DiContainer","abstract":[],"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/dicontainer"}}}