{"sections":[],"metadata":{"modules":[{"name":"DiContainer"}],"title":"Container Usage","roleHeading":"Article","role":"article"},"seeAlsoSections":[{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"],"title":"핵심 컴포넌트","generated":true,"anchor":"핵심-컴포넌트"}],"kind":"article","primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"개요","anchor":"%EA%B0%9C%EC%9A%94"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 등록 작업의 최소 단위입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Container.register(_:)"},{"type":"text","text":"로 모듈을 수집하고, "},{"code":"build()","type":"codeVoice"},{"type":"text","text":"에서 병렬 등록합니다."}]}]}]},{"type":"heading","level":2,"text":"기본 사용","anchor":"%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9"},{"type":"codeListing","code":["let repoModule = Module(RepositoryProtocol.self) { DefaultRepository() }","let useCaseModule = Module(UseCaseProtocol.self) { DefaultUseCase(repo: DefaultRepository()) }","","let container = Container()","container.register(repoModule)","container.register(useCaseModule)","","await container.build()"],"syntax":"swift"},{"type":"heading","level":2,"text":"팩토리와 함께 사용","anchor":"%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%99%80-%ED%95%A8%EA%BB%98-%EC%82%AC%EC%9A%A9"},{"type":"codeListing","code":["let container = Container()","let repositoryFactory = RepositoryModuleFactory()","let useCaseFactory = UseCaseModuleFactory()","","await repositoryFactory.makeAllModules().asyncForEach { await container.register($0) }","await useCaseFactory.makeAllModules().asyncForEach { await container.register($0) }","await container.build()"],"syntax":"swift"},{"type":"heading","level":2,"text":"조건부\/체이닝 예시","anchor":"%EC%A1%B0%EA%B1%B4%EB%B6%80%EC%B2%B4%EC%9D%B4%EB%8B%9D-%EC%98%88%EC%8B%9C"},{"syntax":"swift","code":["let container = Container()","#if DEBUG","container.register(debugModule)","#else","container.register(prodModule)","#endif","await container.build()"],"type":"codeListing"}],"kind":"content"}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다."}],"variants":[{"paths":["\/documentation\/dicontainer\/containerusage"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer/Factory":{"type":"topic","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"abstract":[{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","isActive":true,"type":"reference"},{"text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","url":"\/documentation\/dicontainer\/factory","title":"Factory","role":"symbol","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DependencyContainer","kind":"identifier"}],"title":"DependencyContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","abstract":[],"url":"\/documentation\/dicontainer\/dependencycontainer","navigatorTitle":[{"text":"DependencyContainer","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"url":"\/documentation\/dicontainer\/unifieddi","type":"topic","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","role":"article","title":"통합 DI 시스템 - UnifiedDI vs DI","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"text":"와 ","type":"text"},{"code":"DI","type":"codeVoice"},{"text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요.","type":"text"}]},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RequiredInject"}],"abstract":[{"type":"text","text":"의존성을 필수적으로 해결하여 주입하는 프로퍼티 래퍼입니다."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredInject"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","url":"\/documentation\/dicontainer\/requiredinject","title":"RequiredInject","role":"symbol","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Inject":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","kind":"symbol","navigatorTitle":[{"text":"Inject","kind":"identifier"}],"title":"Inject","role":"symbol","abstract":[{"type":"text","text":"의존성을 자동으로 해결하여 주입하는 프로퍼티 래퍼입니다."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/inject","type":"topic"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"url":"\/documentation\/dicontainer\/appdicontainer","abstract":[],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"navigatorTitle":[{"text":"AppDIContainer","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AppDIContainer","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"url":"\/documentation\/dicontainer\/globalunifiedregistry","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"GlobalUnifiedRegistry"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier","text":"UnifiedRegistry"}],"title":"GlobalUnifiedRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","abstract":[{"type":"text","text":"글로벌 통합 Registry 인스턴스"},{"type":"text","text":" "},{"type":"text","text":"DependencyContainer.live에서 내부적으로 사용"}],"type":"topic","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"type":"topic","title":"FactoryValues","kind":"symbol","abstract":[{"text":"A global container of factories used across the application.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryValues","kind":"identifier"}],"navigatorTitle":[{"text":"FactoryValues","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","role":"symbol","url":"\/documentation\/dicontainer\/factoryvalues"},"doc://DiContainer/documentation/DiContainer/DI":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","kind":"symbol","url":"\/documentation\/dicontainer\/di","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DI","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"DI","kind":"identifier"}],"abstract":[{"type":"text","text":"단순화된 DI API - 사용자 혼란을 줄이기 위해 핵심 패턴만 제공"}],"role":"symbol","title":"DI"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","type":"topic","role":"collection"},"doc://DiContainer/documentation/DiContainer/ContainerPerformance":{"abstract":[{"type":"text","text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다."}],"role":"article","kind":"article","title":"Container Performance","type":"topic","url":"\/documentation\/dicontainer\/containerperformance","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance"},"doc://DiContainer/documentation/DiContainer/Module":{"type":"topic","abstract":[{"code":"Module","type":"codeVoice"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"inlineContent":[{"type":"text","text":"단일 모듈"}],"type":"strong"},{"type":"text","text":"을 나타내는 구조체입니다."}],"url":"\/documentation\/dicontainer\/module","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Module"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Module"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","title":"Module","role":"symbol"},"doc://DiContainer/documentation/DiContainer/Container":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","type":"topic","title":"Container","url":"\/documentation\/dicontainer\/container","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"navigatorTitle":[{"kind":"identifier","text":"Container"}],"kind":"symbol"}}}