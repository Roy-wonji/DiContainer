{"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/repositoryFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/scopeFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/useCaseFactory"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/registerDependencies(registerModules:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Type Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/shared"],"generated":true,"anchor":"Type-Properties"},{"title":"Default Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/Actor-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/appdicontainer"]}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory"],"title":"Related Documentation","anchor":"Related-Documentation"}],"metadata":{"externalID":"s:11DiContainer14AppDIContainerC","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"roleHeading":"Class","title":"AppDIContainer","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"AppDIContainer"}],"modules":[{"name":"DiContainer"}],"role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"relationshipsSections":[{"identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/ScA"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"개요","level":2,"anchor":"%EA%B0%9C%EC%9A%94"},{"inlineContent":[{"type":"codeVoice","code":"AppDIContainer"},{"type":"text","text":"는 애플리케이션 전체의 의존성 주입을 체계적으로 관리하는"},{"type":"text","text":" "},{"type":"text","text":"최상위 컨테이너 클래스입니다. Clean Architecture의 각 계층(Repository, UseCase, Service)을"},{"type":"text","text":" "},{"type":"text","text":"자동화된 Factory 패턴을 통해 효율적으로 구성하고 관리합니다."}],"type":"paragraph"},{"level":2,"anchor":"%ED%95%B5%EC%8B%AC-%EC%B2%A0%ED%95%99","type":"heading","text":"핵심 철학"},{"level":3,"anchor":"%F0%9F%8F%97%EF%B8%8F-%EA%B3%84%EC%B8%B5%ED%99%94%EB%90%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EC%A7%80%EC%9B%90","type":"heading","text":"🏗️ 계층화된 아키텍처 지원"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Repository 계층","type":"text"}]},{"type":"text","text":": 데이터 접근 및 외부 시스템과의 연동"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"UseCase 계층"}]},{"type":"text","text":": 비즈니스 로직과 도메인 규칙 캡슐화"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Service 계층"}]},{"type":"text","text":": 애플리케이션 서비스와 UI 지원"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"자동 의존성 해결","type":"text"}],"type":"strong"},{"text":": 계층 간 의존성이 자동으로 주입됨","type":"text"}]}]}],"type":"unorderedList"},{"text":"🏭 Factory 기반 모듈화","type":"heading","anchor":"%F0%9F%8F%AD-Factory-%EA%B8%B0%EB%B0%98-%EB%AA%A8%EB%93%88%ED%99%94","level":3},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"RepositoryModuleFactory","type":"text"}],"type":"strong"},{"type":"text","text":": Repository 의존성 일괄 관리"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"UseCaseModuleFactory"}]},{"type":"text","text":": UseCase 의존성과 Repository 자동 연동"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"확장 가능성"}]},{"text":": 새로운 Factory를 쉽게 추가 가능","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"타입 안전성"}],"type":"strong"},{"text":": 컴파일 타임에 의존성 타입 검증","type":"text"}]}]}],"type":"unorderedList"},{"text":"🔄 생명주기 관리","type":"heading","anchor":"%F0%9F%94%84-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0-%EA%B4%80%EB%A6%AC","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"싱글턴 패턴","type":"text"}],"type":"strong"},{"text":": 앱 전역에서 단일 인스턴스 사용","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"지연 초기화"}],"type":"strong"},{"text":": 실제 필요 시점에 모듈들이 생성됨","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"메모리 효율성"}]},{"type":"text","text":": 사용하지 않는 의존성은 생성되지 않음"}]}]}],"type":"unorderedList"},{"text":"아키텍처 다이어그램","type":"heading","anchor":"%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8","level":2},{"syntax":null,"code":["┌─────────────────────────────────────┐","│           AppDIContainer            │","│              (Singleton)            │","└─────────────────┬───────────────────┘","                  │","      ┌───────────┼───────────┐","      │           │           │","┌─────▼─────┐ ┌───▼────┐ ┌───▼────────┐","│Repository │ │UseCase │ │   Other    │","│ Factory   │ │Factory │ │ Factories  │","└───────────┘ └────────┘ └────────────┘","      │           │           │","      └───────────┼───────────┘","                  │","┌─────────────────▼───────────────────┐","│        DependencyContainer.live     │","│          (Global Registry)          │","└─────────────────────────────────────┘"],"type":"codeListing"},{"text":"동작 방식","type":"heading","anchor":"%EB%8F%99%EC%9E%91-%EB%B0%A9%EC%8B%9D","level":2},{"text":"1단계: Factory 준비","type":"heading","anchor":"1%EB%8B%A8%EA%B3%84-Factory-%EC%A4%80%EB%B9%84","level":3},{"syntax":"swift","code":["\/\/ @Factory 프로퍼티 래퍼를 통한 자동 주입","@Factory(\\.repositoryFactory) ","var repositoryFactory: RepositoryModuleFactory","","@Factory(\\.useCaseFactory)","var useCaseFactory: UseCaseModuleFactory"],"type":"codeListing"},{"text":"2단계: 모듈 등록","type":"heading","anchor":"2%EB%8B%A8%EA%B3%84-%EB%AA%A8%EB%93%88-%EB%93%B1%EB%A1%9D","level":3},{"syntax":"swift","code":["await AppDIContainer.shared.registerDefaultDependencies()","\/\/ 내부적으로:","\/\/ 1. Repository Factory에서 모든 Repository 모듈 생성","\/\/ 2. UseCase Factory에서 Repository와 연동된 UseCase 모듈 생성  ","\/\/ 3. 모든 모듈을 병렬로 DependencyContainer.live에 등록"],"type":"codeListing"},{"text":"3단계: 의존성 사용","type":"heading","anchor":"3%EB%8B%A8%EA%B3%84-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%82%AC%EC%9A%A9","level":3},{"syntax":"swift","code":["\/\/ 어디서든 등록된 의존성 사용 가능","let userService = DependencyContainer.live.resolve(UserServiceProtocol.self)"],"type":"codeListing"},{"text":"지원 환경 및 호환성","type":"heading","anchor":"%EC%A7%80%EC%9B%90-%ED%99%98%EA%B2%BD-%EB%B0%8F-%ED%98%B8%ED%99%98%EC%84%B1","level":2},{"text":"Swift 버전 호환성","type":"heading","anchor":"Swift-%EB%B2%84%EC%A0%84-%ED%98%B8%ED%99%98%EC%84%B1","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Swift 5.9+ & iOS 17.0+","type":"text"}],"type":"strong"},{"type":"text","text":": Actor 기반 최적화된 구현"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Swift 5.8 & iOS 16.0+"}]},{"type":"text","text":": 호환성 모드로 동일한 기능 제공"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"이전 버전","type":"text"}]},{"text":": Fallback 구현으로 핵심 기능 유지","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"동시성 지원","type":"heading","level":3,"anchor":"%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%A7%80%EC%9B%90"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Swift Concurrency"}],"type":"strong"},{"text":": async\/await 패턴 완전 지원","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"GCD 호환","type":"text"}],"type":"strong"},{"text":": 기존 DispatchQueue 코드와 호환","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Thread Safe"}]},{"type":"text","text":": 모든 작업이 스레드 안전하게 처리"}]}]}]},{"text":"Example","type":"heading","level":2,"anchor":"Example"},{"text":"기본 사용","type":"heading","level":3,"anchor":"%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9"},{"syntax":"swift","type":"codeListing","code":["@main","struct MyApp {","    static func main() async {","        await AppDIContainer.shared.registerDependencies { container in","            \/\/ Repository 모듈 등록","            container.register(UserRepositoryModule())","","            \/\/ UseCase 모듈 등록","            container.register(UserUseCaseModule())","        }","","        \/\/ 등록된 UseCase 사용","        let useCase: UserUseCaseProtocol = DependencyContainer.live.resolveOrDefault(","            UserUseCaseProtocol.self,","            default: UserUseCase(userRepo: UserRepository())","        )","        print(\"Loaded user profile: \\(await useCase.loadUserProfile().displayName)\")","    }","}"]},{"text":"RepositoryModuleFactory & UseCaseModuleFactory 확장","type":"heading","level":3,"anchor":"RepositoryModuleFactory--UseCaseModuleFactory-%ED%99%95%EC%9E%A5"},{"syntax":"swift","type":"codeListing","code":["extension RepositoryModuleFactory {","    public mutating func registerDefaultDefinitions() {","        let registerModuleCopy = registerModule","        repositoryDefinitions = [","            registerModuleCopy.makeDependency(AuthRepositoryProtocol.self) {","                DefaultAuthRepository()","            }","        ]","    }","}","","extension UseCaseModuleFactory {","    public var useCaseDefinitions: [() -> Module] {","        [","            registerModule.makeUseCaseWithRepository(","                AuthUseCaseProtocol.self,","                repositoryProtocol: AuthRepositoryProtocol.self,","                repositoryFallback: DefaultAuthRepository()","            ) { repo in","                AuthUseCase(repository: repo)","            }","        ]","    }","}"]},{"text":"ContainerResgister 사용","type":"heading","level":3,"anchor":"ContainerResgister-%EC%82%AC%EC%9A%A9"},{"syntax":"swift","type":"codeListing","code":["extension DependencyContainer {","    var authUseCase: AuthUseCaseProtocol? {","        ContainerResgister(\\.authUseCase).wrappedValue","    }","}","","\/\/ 사용 예시","let authUC: AuthUseCaseProtocol = ContainerResgister(\\.authUseCase).wrappedValue"]},{"text":"SwiftUI 기반 앱에서 DI 적용","type":"heading","level":3,"anchor":"SwiftUI-%EA%B8%B0%EB%B0%98-%EC%95%B1%EC%97%90%EC%84%9C-DI-%EC%A0%81%EC%9A%A9"},{"syntax":"swift","type":"codeListing","code":["@main","struct TestApp: App {","    @UIApplicationDelegateAdaptor(AppDelegate.self) var appDelegate","","    init() {","        registerDependencies()","    }","","    var body: some Scene {","        WindowGroup {","            let store = Store(initialState: AppReducer.State()) {","                AppReducer()._printChanges()","            }","            AppView(store: store)","        }","    }","","    private func registerDependencies() {","        Task {","            await AppDIContainer.shared.registerDependencies { container in","                var repoFactory = AppDIContainer.shared.repositoryFactory","                repoFactory.registerDefaultDefinitions()","                await repoFactory.makeAllModules().asyncForEach { module in","                    await container.register(module)","                }","","                let useCaseFactory = AppDIContainer.shared.useCaseFactory","                await useCaseFactory.makeAllModules().asyncForEach { module in","                    await container.register(module)","                }","            }","        }","    }","}"]},{"text":"Discussion","type":"heading","level":2,"anchor":"Discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"AppDIContainer","type":"codeVoice"},{"text":"는 단일 진입점(single entry point) 역할을 합니다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"앱 초기화 시점에 모듈을 한꺼번에 등록해두면, 런타임에서 빠르고 안정적으로","type":"text"},{"text":" ","type":"text"},{"text":"의존성 객체를 생성·조회할 수 있습니다.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"모듈 등록 순서가 중요한 경우에는 "},{"code":"BatchModule\/batch","type":"codeVoice"},{"type":"text","text":" 값을 활용하여"},{"type":"text","text":" "},{"inlineContent":[{"text":"우선순위 기반 순차 실행","type":"text"}],"type":"strong"},{"type":"text","text":"을 보장할 수 있습니다."}],"type":"paragraph"}]}]}]}],"references":{"doc://DiContainer/documentation/DiContainer/FactoryValues":{"url":"\/documentation\/dicontainer\/factoryvalues","type":"topic","abstract":[{"type":"text","text":"A global container of factories used across the application."}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","title":"FactoryValues","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"navigatorTitle":[{"kind":"identifier","text":"FactoryValues"}]},"doc://DiContainer/documentation/DiContainer/AppDIContainer/useCaseFactory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/useCaseFactory","type":"topic","kind":"symbol","role":"symbol","title":"useCaseFactory","abstract":[{"text":"UseCase 계층에서 사용할 모듈(팩토리) 인스턴스를","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","isActive":true,"type":"reference"},{"text":" 내 정의된 경로에서 자동으로 주입받습니다.","type":"text"}],"url":"\/documentation\/dicontainer\/appdicontainer\/usecasefactory","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"useCaseFactory","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UseCaseModuleFactory","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer20UseCaseModuleFactoryV"}]},"doc://DiContainer/documentation/DiContainer/AppDIContainer/repositoryFactory":{"kind":"symbol","title":"repositoryFactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/repositoryFactory","type":"topic","abstract":[{"type":"text","text":"Repository 계층에서 사용할 모듈(팩토리) 인스턴스를"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","isActive":true},{"type":"text","text":" 내 정의된 경로에서 자동으로 주입받습니다."}],"url":"\/documentation\/dicontainer\/appdicontainer\/repositoryfactory","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"repositoryFactory","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RepositoryModuleFactory","preciseIdentifier":"s:11DiContainer23RepositoryModuleFactoryV","kind":"typeIdentifier"}]},"doc://DiContainer/documentation/DiContainer/AppDIContainer/scopeFactory":{"url":"\/documentation\/dicontainer\/appdicontainer\/scopefactory","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeFactory","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScopeModuleFactory","preciseIdentifier":"s:11DiContainer18ScopeModuleFactoryV","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"DependencyScope 기반 모듈(팩토리) 인스턴스를","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","isActive":true,"type":"reference"},{"text":" 내 정의된 경로에서 자동으로 주입받습니다.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/scopeFactory","title":"scopeFactory"},"doc://DiContainer/documentation/DiContainer/AppDIContainer/Actor-Implementations":{"role":"collectionGroup","title":"Actor Implementations","abstract":[],"type":"topic","url":"\/documentation\/dicontainer\/appdicontainer\/actor-implementations","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/Actor-Implementations"},"doc://DiContainer/documentation/DiContainer/AppDIContainer/shared":{"title":"shared","abstract":[{"type":"text","text":"앱 전역에서 사용할 수 있는 싱글턴 인스턴스입니다."}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer14AppDIContainerC","text":"AppDIContainer"}],"kind":"symbol","url":"\/documentation\/dicontainer\/appdicontainer\/shared","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/shared","role":"symbol"},"doc://DiContainer/documentation/DiContainer/Factory":{"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Factory"}],"abstract":[{"type":"reference","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","isActive":true},{"type":"text","text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다."}],"url":"\/documentation\/dicontainer\/factory","kind":"symbol","title":"Factory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}]},"doc://DiContainer/documentation/DiContainer/Container":{"kind":"symbol","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"url":"\/documentation\/dicontainer\/container","role":"symbol","abstract":[],"title":"Container","navigatorTitle":[{"text":"Container","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container"},"doc://DiContainer/documentation/DiContainer/AppDIContainer/registerDependencies(registerModules:)":{"url":"\/documentation\/dicontainer\/appdicontainer\/registerdependencies(registermodules:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/registerDependencies(registerModules:)","title":"registerDependencies(registerModules:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerDependencies","kind":"identifier"},{"text":"(","kind":"text"},{"text":"registerModules","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Container","preciseIdentifier":"s:11DiContainer0B0C","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic","abstract":[{"text":"의존성 모듈들을 등록하고, 등록된 모듈을 병렬 실행하여 빌드합니다.","type":"text"}]},"doc://DiContainer/documentation/DiContainer":{"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic","abstract":[],"url":"\/documentation\/dicontainer","title":"DiContainer","role":"collection"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"url":"\/documentation\/dicontainer\/appdicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","role":"symbol","abstract":[],"type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"title":"AppDIContainer","kind":"symbol","navigatorTitle":[{"text":"AppDIContainer","kind":"identifier"}]},"doc://DiContainer/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/DiContainer\/ScA","type":"unresolvable"},"doc://DiContainer/s8SendableP":{"identifier":"doc:\/\/DiContainer\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}