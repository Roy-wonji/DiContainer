{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppDIContainer"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":1,"text":"Overview","anchor":"Overview"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"앱 전역에서 사용되는 ","type":"text"},{"inlineContent":[{"type":"text","text":"싱글턴(Singleton)"}],"type":"strong"},{"text":" 인스턴스로 제공됩니다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"내부적으로 "},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","type":"reference","isActive":true},{"type":"text","text":" 를 통해 "},{"type":"codeVoice","code":"BatchModule"},{"type":"text","text":" 기반 모듈들을 등록 및 초기화합니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"build()"},{"type":"text","text":" 호출 시 등록된 모듈들의 "},{"type":"codeVoice","code":"BatchModule\/register()"},{"type":"text","text":" 를 "},{"type":"strong","inlineContent":[{"text":"병렬 실행","type":"text"}]},{"type":"text","text":"하여"},{"type":"text","text":" "},{"type":"text","text":"런타임 시점에 의존성 그래프를 완성합니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"등록된 의존성은 "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer\/live"},{"type":"text","text":" 를 통해 앱 전역에서 조회할 수 있습니다."}]}]}]},{"type":"heading","level":2,"text":"특징","anchor":"%ED%8A%B9%EC%A7%95"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"중앙 관리","type":"text"}]},{"type":"text","text":": 모든 모듈 의존성은 "},{"type":"codeVoice","code":"AppDIContainer.shared"},{"type":"text","text":"를 통해 등록·관리됩니다."}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"자동 주입","type":"text"}],"type":"strong"},{"text":": ","type":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","isActive":true,"type":"reference"},{"text":" 프로퍼티 래퍼를 활용하여 ","type":"text"},{"code":"FactoryValues","type":"codeVoice"},{"text":" 내 정의된","type":"text"},{"text":" ","type":"text"},{"code":"repositoryFactory","type":"codeVoice"},{"text":", ","type":"text"},{"code":"useCaseFactory","type":"codeVoice"},{"text":" 등을 자동으로 주입받습니다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"유연성","type":"text"}]},{"type":"text","text":": 커스텀 모듈 또는 Factory 확장을 통해 언제든지 새로운 의존성을 추가할 수 있습니다."}]}]}]},{"type":"heading","level":2,"text":"지원 환경","anchor":"%EC%A7%80%EC%9B%90-%ED%99%98%EA%B2%BD"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Swift 5.9 이상, iOS 17.0 이상","type":"text"}]},{"text":":","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"actor","type":"codeVoice"},{"text":" 기반으로 구현되어, ","type":"text"},{"code":"Container","type":"codeVoice"},{"text":" 상태(","type":"text"},{"code":"modules","type":"codeVoice"},{"text":")가 ","type":"text"},{"inlineContent":[{"text":"thread-safe","type":"text"}],"type":"strong"},{"text":" 하게 관리됩니다.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"그 외 환경","type":"text"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"final actor"},{"text":" 기반 구현으로 동일한 로직을 제공합니다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift 5.9 미만, iOS 17.0 미만 환경에서도 동일하게 동작합니다."}]}]}]}]}]},{"type":"heading","level":2,"text":"Example","anchor":"Example"},{"type":"heading","level":3,"text":"기본 사용","anchor":"%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9"},{"type":"codeListing","code":["@main","struct MyApp {","    static func main() async {","        await AppDIContainer.shared.registerDependencies { container in","            \/\/ Repository 모듈 등록","            container.register(UserRepositoryModule())","","            \/\/ UseCase 모듈 등록","            container.register(UserUseCaseModule())","        }","","        \/\/ 등록된 UseCase 사용","        let useCase: UserUseCaseProtocol = DependencyContainer.live.resolveOrDefault(","            UserUseCaseProtocol.self,","            default: UserUseCase(userRepo: UserRepository())","        )","        print(\"Loaded user profile: \\(await useCase.loadUserProfile().displayName)\")","    }","}"],"syntax":"swift"},{"type":"heading","level":3,"text":"RepositoryModuleFactory & UseCaseModuleFactory 확장","anchor":"RepositoryModuleFactory--UseCaseModuleFactory-%ED%99%95%EC%9E%A5"},{"type":"codeListing","code":["extension RepositoryModuleFactory {","    public mutating func registerDefaultDefinitions() {","        let registerModuleCopy = registerModule","        repositoryDefinitions = [","            registerModuleCopy.makeDependency(AuthRepositoryProtocol.self) {","                DefaultAuthRepository()","            }","        ]","    }","}","","extension UseCaseModuleFactory {","    public var useCaseDefinitions: [() -> Module] {","        [","            registerModule.makeUseCaseWithRepository(","                AuthUseCaseProtocol.self,","                repositoryProtocol: AuthRepositoryProtocol.self,","                repositoryFallback: DefaultAuthRepository()","            ) { repo in","                AuthUseCase(repository: repo)","            }","        ]","    }","}"],"syntax":"swift"},{"type":"heading","level":3,"text":"ContainerResgister 사용","anchor":"ContainerResgister-%EC%82%AC%EC%9A%A9"},{"type":"codeListing","code":["extension DependencyContainer {","    var authUseCase: AuthUseCaseProtocol? {","        ContainerResgister(\\.authUseCase).wrappedValue","    }","}","","\/\/ 사용 예시","let authUC: AuthUseCaseProtocol = ContainerResgister(\\.authUseCase).wrappedValue"],"syntax":"swift"},{"type":"heading","level":3,"text":"SwiftUI 기반 앱에서 DI 적용","anchor":"SwiftUI-%EA%B8%B0%EB%B0%98-%EC%95%B1%EC%97%90%EC%84%9C-DI-%EC%A0%81%EC%9A%A9"},{"type":"codeListing","code":["@main","struct TestApp: App {","    @UIApplicationDelegateAdaptor(AppDelegate.self) var appDelegate","","    init() {","        registerDependencies()","    }","","    var body: some Scene {","        WindowGroup {","            let store = Store(initialState: AppReducer.State()) {","                AppReducer()._printChanges()","            }","            AppView(store: store)","        }","    }","","    private func registerDependencies() {","        Task {","            await AppDIContainer.shared.registerDependencies { container in","                var repoFactory = AppDIContainer.shared.repositoryFactory","                repoFactory.registerDefaultDefinitions()","                await repoFactory.makeAllModules().asyncForEach { module in","                    await container.register(module)","                }","","                let useCaseFactory = AppDIContainer.shared.useCaseFactory","                await useCaseFactory.makeAllModules().asyncForEach { module in","                    await container.register(module)","                }","            }","        }","    }","}"],"syntax":"swift"},{"type":"heading","level":2,"text":"Discussion","anchor":"Discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AppDIContainer"},{"text":"는 단일 진입점(single entry point) 역할을 합니다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"앱 초기화 시점에 모듈을 한꺼번에 등록해두면, 런타임에서 빠르고 안정적으로"},{"type":"text","text":" "},{"type":"text","text":"의존성 객체를 생성·조회할 수 있습니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"모듈 등록 순서가 중요한 경우에는 ","type":"text"},{"code":"BatchModule\/batch","type":"codeVoice"},{"text":" 값을 활용하여","type":"text"},{"text":" ","type":"text"},{"inlineContent":[{"text":"우선순위 기반 순차 실행","type":"text"}],"type":"strong"},{"text":"을 보장할 수 있습니다.","type":"text"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"code":"AppDIContainer","type":"codeVoice"},{"text":"는 애플리케이션 전반에서 ","type":"text"},{"type":"strong","inlineContent":[{"text":"의존성 주입(Dependency Injection)","type":"text"}]},{"text":" 을 담당하는","type":"text"},{"text":" ","type":"text"},{"text":"중앙 컨테이너 클래스입니다.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/ScA"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory"],"anchor":"Related-Documentation","title":"Related Documentation"}],"variants":[{"paths":["\/documentation\/dicontainer\/appdicontainer"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Class","role":"symbol","symbolKind":"class","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppDIContainer"}],"modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer14AppDIContainerC","title":"AppDIContainer","navigatorTitle":[{"kind":"identifier","text":"AppDIContainer"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"},"topicSections":[{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/repositoryFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/useCaseFactory"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/registerDependencies(registerModules:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/shared"],"generated":true,"anchor":"Type-Properties","title":"Type Properties"},{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/Actor-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"references":{"doc://DiContainer/documentation/DiContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[],"type":"topic","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection"},"doc://DiContainer/documentation/DiContainer/AppDIContainer/repositoryFactory":{"role":"symbol","abstract":[{"text":"Repository 계층에서 사용할 모듈(팩토리) 인스턴스를","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","type":"reference"},{"type":"text","text":" 내 정의된 경로에서 자동으로 주입받습니다."}],"type":"topic","url":"\/documentation\/dicontainer\/appdicontainer\/repositoryfactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/repositoryFactory","title":"repositoryFactory","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"repositoryFactory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer23RepositoryModuleFactoryV","text":"RepositoryModuleFactory"}]},"doc://DiContainer/documentation/DiContainer/AppDIContainer/registerDependencies(registerModules:)":{"title":"registerDependencies(registerModules:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerDependencies"},{"kind":"text","text":"("},{"kind":"externalParam","text":"registerModules"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11DiContainer0B0C","kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/registerDependencies(registerModules:)","url":"\/documentation\/dicontainer\/appdicontainer\/registerdependencies(registermodules:)","kind":"symbol","abstract":[{"text":"의존성 모듈들을 등록하고, 등록된 모듈을 병렬 실행하여 빌드합니다.","type":"text"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppDIContainer"}],"kind":"symbol","url":"\/documentation\/dicontainer\/appdicontainer","navigatorTitle":[{"kind":"identifier","text":"AppDIContainer"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","title":"AppDIContainer","abstract":[{"type":"codeVoice","code":"AppDIContainer"},{"type":"text","text":"는 애플리케이션 전반에서 "},{"type":"strong","inlineContent":[{"type":"text","text":"의존성 주입(Dependency Injection)"}]},{"type":"text","text":" 을 담당하는"},{"type":"text","text":" "},{"type":"text","text":"중앙 컨테이너 클래스입니다."}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/AppDIContainer/Actor-Implementations":{"kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/Actor-Implementations","type":"topic","url":"\/documentation\/dicontainer\/appdicontainer\/actor-implementations","abstract":[],"role":"collectionGroup","title":"Actor Implementations"},"doc://DiContainer/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/DiContainer\/s8SendableP","title":"Swift.Sendable"},"doc://DiContainer/documentation/DiContainer/DependencyContainer/live":{"kind":"symbol","abstract":[{"text":"애플리케이션 전역에서 사용하는 ","type":"text"},{"inlineContent":[{"text":"라이브 컨테이너","type":"text"}],"type":"strong"},{"text":"입니다.","type":"text"}],"type":"topic","title":"live","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer\/live","url":"\/documentation\/dicontainer\/dependencycontainer\/live","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"live"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DependencyContainer","preciseIdentifier":"s:11DiContainer010DependencyB0C"}]},"doc://DiContainer/documentation/DiContainer/Container":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"Container"},{"text":" 는 여러 개의 ","type":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","type":"reference","isActive":true},{"text":" 을 수집하고,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"build()"},{"text":" 호출 시 ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"모든 모듈의 "},{"type":"codeVoice","code":"register()"},{"type":"text","text":"를 병렬"}]},{"text":"로 실행하는 ","type":"text"},{"type":"codeVoice","code":"actor"},{"text":"입니다.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"title":"Container","url":"\/documentation\/dicontainer\/container"},"doc://DiContainer/documentation/DiContainer/Module":{"url":"\/documentation\/dicontainer\/module","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Module","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","navigatorTitle":[{"text":"Module","kind":"identifier"}],"abstract":[{"code":"Module","type":"codeVoice"},{"text":"은 DI(의존성 주입)를 위한 ","type":"text"},{"inlineContent":[{"text":"단일 모듈","type":"text"}],"type":"strong"},{"text":"을 나타내는 구조체입니다.","type":"text"}],"title":"Module"},"doc://DiContainer/documentation/DiContainer/AppDIContainer/shared":{"type":"topic","url":"\/documentation\/dicontainer\/appdicontainer\/shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AppDIContainer","preciseIdentifier":"s:11DiContainer14AppDIContainerC"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/shared","kind":"symbol","abstract":[{"text":"앱 전역에서 사용할 수 있는 싱글턴 인스턴스입니다.","type":"text"}],"title":"shared","role":"symbol"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FactoryValues"}],"url":"\/documentation\/dicontainer\/factoryvalues","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"title":"FactoryValues","abstract":[{"text":"A global container of factories used across the application.","type":"text"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/AppDIContainer/useCaseFactory":{"type":"topic","abstract":[{"text":"UseCase 계층에서 사용할 모듈(팩토리) 인스턴스를","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues"},{"text":" 내 정의된 경로에서 자동으로 주입받습니다.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer\/useCaseFactory","url":"\/documentation\/dicontainer\/appdicontainer\/usecasefactory","kind":"symbol","title":"useCaseFactory","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"useCaseFactory","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11DiContainer20UseCaseModuleFactoryV","text":"UseCaseModuleFactory","kind":"typeIdentifier"}]},"doc://DiContainer/documentation/DiContainer/Factory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","abstract":[{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","type":"reference","isActive":true},{"text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"url":"\/documentation\/dicontainer\/factory","title":"Factory","kind":"symbol","role":"symbol"},"doc://DiContainer/ScA":{"identifier":"doc:\/\/DiContainer\/ScA","type":"unresolvable","title":"_Concurrency.Actor"}}}