{"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/dicontainer\/safedependencykeypatterns"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/SafeDependencyKeyPatterns"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafeDependencyKeyPatterns","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"%EB%AC%B8%EC%A0%9C%EA%B0%80-%EC%9E%88%EB%8A%94-%ED%8C%A8%ED%84%B4","level":2,"text":"문제가 있는 패턴:","type":"heading"},{"type":"codeListing","code":["extension BookListUseCaseImpl: DependencyKey {","    public static var liveValue: BookListInterface = {","        \/\/ 🚨 이런 식으로 사용하면 안됨","        let repository = SimpleKeyPathRegistry.register(\\.bookListInterface) { ... }","        return BookListUseCaseImpl(repository: repository as! BookListInterface)","    }()","}"],"syntax":"swift"},{"type":"heading","text":"✅ 안전한 패턴들:","anchor":"%E2%9C%85-%EC%95%88%EC%A0%84%ED%95%9C-%ED%8C%A8%ED%84%B4%EB%93%A4","level":2}],"kind":"content"}],"metadata":{"externalID":"s:11DiContainer25SafeDependencyKeyPatternsO","modules":[{"name":"DiContainer"}],"role":"symbol","symbolKind":"enum","roleHeading":"Enumeration","title":"SafeDependencyKeyPatterns","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SafeDependencyKeyPatterns"}],"navigatorTitle":[{"kind":"identifier","text":"SafeDependencyKeyPatterns"}]},"abstract":[{"text":"안전한 DependencyKey 패턴을 위한 확장","type":"text"}],"topicSections":[{"anchor":"Type-Properties","title":"Type Properties","generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/SafeDependencyKeyPatterns\/asyncPattern","doc:\/\/DiContainer\/documentation\/DiContainer\/SafeDependencyKeyPatterns\/factoryPattern","doc:\/\/DiContainer\/documentation\/DiContainer\/SafeDependencyKeyPatterns\/preRegistrationPattern"]}],"sections":[],"kind":"symbol","references":{"doc://DiContainer/documentation/DiContainer/SafeDependencyKeyPatterns/factoryPattern":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"factoryPattern"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"factoryPattern","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/SafeDependencyKeyPatterns\/factoryPattern","role":"symbol","type":"topic","url":"\/documentation\/dicontainer\/safedependencykeypatterns\/factorypattern","abstract":[{"text":"방법 2: Factory 지연 초기화 패턴","type":"text"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/SafeDependencyKeyPatterns/asyncPattern":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncPattern"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/SafeDependencyKeyPatterns\/asyncPattern","abstract":[{"type":"text","text":"방법 3: Task 기반 비동기 등록 패턴"}],"url":"\/documentation\/dicontainer\/safedependencykeypatterns\/asyncpattern","title":"asyncPattern","kind":"symbol","type":"topic","role":"symbol"},"doc://DiContainer/documentation/DiContainer/SafeDependencyKeyPatterns":{"role":"symbol","abstract":[{"type":"text","text":"안전한 DependencyKey 패턴을 위한 확장"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/SafeDependencyKeyPatterns","kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafeDependencyKeyPatterns","kind":"identifier"}],"title":"SafeDependencyKeyPatterns","navigatorTitle":[{"text":"SafeDependencyKeyPatterns","kind":"identifier"}],"url":"\/documentation\/dicontainer\/safedependencykeypatterns"},"doc://DiContainer/documentation/DiContainer/SafeDependencyKeyPatterns/preRegistrationPattern":{"title":"preRegistrationPattern","abstract":[{"text":"방법 1: 앱 시작 시 사전 등록 + 해결","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/SafeDependencyKeyPatterns\/preRegistrationPattern","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preRegistrationPattern","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/dicontainer\/safedependencykeypatterns\/preregistrationpattern","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic","role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}