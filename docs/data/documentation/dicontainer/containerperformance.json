{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","interfaceLanguage":"swift"},"sections":[],"kind":"article","seeAlsoSections":[{"generated":true,"anchor":"핵심-컴포넌트","title":"핵심 컴포넌트","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"metadata":{"modules":[{"name":"DiContainer"}],"roleHeading":"Article","role":"article","title":"Container Performance"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/containerperformance"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다."}],"primaryContentSections":[{"content":[{"text":"핵심 아이디어","anchor":"%ED%95%B5%EC%8B%AC-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4","type":"heading","level":2},{"items":[{"content":[{"inlineContent":[{"text":"스냅샷 후 작업 생성 → actor hop 최소화","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"등록은 ","type":"text"},{"code":"build()","type":"codeVoice"},{"text":"에서 일괄 실행 → 체감 속도 향상","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"코드 스니펫","anchor":"%EC%BD%94%EB%93%9C-%EC%8A%A4%EB%8B%88%ED%8E%AB","type":"heading","level":2},{"syntax":"swift","type":"codeListing","code":["let snapshot = modules","await withTaskGroup(of: Void.self) { group in","  for module in snapshot {","    group.addTask { @Sendable in await module.register() }","  }","  await group.waitForAll()","}"]},{"text":"팁","anchor":"%ED%8C%81","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"모듈 수집 단계에서는 즉시 실행하지 말고 누적하세요."}]}]},{"content":[{"inlineContent":[{"text":"너무 많은 모듈(1000+)일 경우 배치 크기를 조정해 메모리를 관리하세요.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://DiContainer/documentation/DiContainer/Module":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","url":"\/documentation\/dicontainer\/module","abstract":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"type":"strong","inlineContent":[{"type":"text","text":"단일 모듈"}]},{"type":"text","text":"을 나타내는 구조체입니다."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Module","kind":"identifier"}],"type":"topic","kind":"symbol","title":"Module","navigatorTitle":[{"text":"Module","kind":"identifier"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","kind":"symbol","url":"\/documentation\/dicontainer\/dependencycontainer","title":"DependencyContainer","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/DI":{"title":"DI","navigatorTitle":[{"text":"DI","kind":"identifier"}],"url":"\/documentation\/dicontainer\/di","abstract":[{"type":"text","text":"단순화된 DI API - 사용자 혼란을 줄이기 위해 핵심 패턴만 제공"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DI","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","kind":"symbol","type":"topic"},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","abstract":[{"text":"글로벌 통합 Registry 인스턴스","type":"text"},{"text":" ","type":"text"},{"text":"DependencyContainer.live에서 내부적으로 사용","type":"text"}],"title":"GlobalUnifiedRegistry","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GlobalUnifiedRegistry","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/dicontainer\/globalunifiedregistry","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"FactoryValues","kind":"identifier"}],"title":"FactoryValues","type":"topic","url":"\/documentation\/dicontainer\/factoryvalues","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","abstract":[{"text":"A global container of factories used across the application.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryValues","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"type":"codeVoice","code":"UnifiedDI"},{"text":"와 ","type":"text"},{"type":"codeVoice","code":"DI"},{"text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요.","type":"text"}],"title":"통합 DI 시스템 - UnifiedDI vs DI","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","type":"topic","role":"article","url":"\/documentation\/dicontainer\/unifieddi"},"doc://DiContainer/documentation/DiContainer/Container":{"role":"symbol","title":"Container","kind":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"Container","kind":"identifier"}],"url":"\/documentation\/dicontainer\/container"},"doc://DiContainer/documentation/DiContainer/Factory":{"role":"symbol","type":"topic","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues"},{"type":"text","text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다."}],"kind":"symbol","title":"Factory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","url":"\/documentation\/dicontainer\/factory","navigatorTitle":[{"text":"Factory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"title":"RequiredInject","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","abstract":[{"text":"의존성을 필수적으로 해결하여 주입하는 프로퍼티 래퍼입니다.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/requiredinject","type":"topic"},"doc://DiContainer/documentation/DiContainer/Inject":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","navigatorTitle":[{"kind":"identifier","text":"Inject"}],"title":"Inject","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"의존성을 자동으로 해결하여 주입하는 프로퍼티 래퍼입니다."}],"url":"\/documentation\/dicontainer\/inject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Inject"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"title":"AppDIContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AppDIContainer"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppDIContainer"}],"url":"\/documentation\/dicontainer\/appdicontainer"},"doc://DiContainer/documentation/DiContainer/ContainerUsage":{"url":"\/documentation\/dicontainer\/containerusage","abstract":[{"text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다.","type":"text"}],"kind":"article","type":"topic","role":"article","title":"Container Usage","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"}}}