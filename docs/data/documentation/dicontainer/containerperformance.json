{"kind":"article","abstract":[{"text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다.","type":"text"}],"seeAlsoSections":[{"title":"핵심 컴포넌트","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"],"generated":true,"anchor":"핵심-컴포넌트"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"metadata":{"role":"article","title":"Container Performance","modules":[{"name":"DiContainer"}],"roleHeading":"Article"},"sections":[],"variants":[{"paths":["\/documentation\/dicontainer\/containerperformance"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"text":"핵심 아이디어","type":"heading","anchor":"%ED%95%B5%EC%8B%AC-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스냅샷 후 작업 생성 → actor hop 최소화"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"등록은 "},{"type":"codeVoice","code":"build()"},{"type":"text","text":"에서 일괄 실행 → 체감 속도 향상"}]}]}]},{"level":2,"text":"코드 스니펫","type":"heading","anchor":"%EC%BD%94%EB%93%9C-%EC%8A%A4%EB%8B%88%ED%8E%AB"},{"syntax":"swift","code":["let snapshot = modules","await withTaskGroup(of: Void.self) { group in","  for module in snapshot {","    group.addTask { @Sendable in await module.register() }","  }","  await group.waitForAll()","}"],"type":"codeListing"},{"level":2,"text":"팁","type":"heading","anchor":"%ED%8C%81"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"모듈 수집 단계에서는 즉시 실행하지 말고 누적하세요.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"너무 많은 모듈(1000+)일 경우 배치 크기를 조정해 메모리를 관리하세요.","type":"text"}],"type":"paragraph"}]}]}]}],"references":{"doc://DiContainer/documentation/DiContainer/DI":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DI","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","type":"topic","role":"symbol","navigatorTitle":[{"text":"DI","kind":"identifier"}],"url":"\/documentation\/dicontainer\/di","title":"DI","kind":"symbol","abstract":[{"text":"단순화된 의존성 주입 API","type":"text"}]},"doc://DiContainer/documentation/DiContainer/Container":{"abstract":[],"url":"\/documentation\/dicontainer\/container","type":"topic","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"kind":"symbol","title":"Container","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Container"}]},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"title":"DependencyContainer","url":"\/documentation\/dicontainer\/dependencycontainer","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DependencyContainer","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"navigatorTitle":[{"kind":"identifier","text":"FactoryValues"}],"url":"\/documentation\/dicontainer\/factoryvalues","abstract":[{"type":"text","text":"팩토리 값들을 관리하는 프로퍼티 래퍼"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","title":"FactoryValues","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"url":"\/documentation\/dicontainer\/globalunifiedregistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","kind":"symbol","title":"GlobalUnifiedRegistry","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GlobalUnifiedRegistry","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"글로벌 통합 Registry 인스턴스"},{"type":"text","text":" "},{"type":"text","text":"DependencyContainer.live에서 내부적으로 사용"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","url":"\/documentation\/dicontainer\/requiredinject","abstract":[{"text":"필수 의존성 주입을 위한 프로퍼티 래퍼","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"kind":"symbol","title":"RequiredInject","role":"symbol","type":"topic","navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/ContainerUsage":{"url":"\/documentation\/dicontainer\/containerusage","abstract":[{"text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다.","type":"text"}],"role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","title":"Container Usage","kind":"article","type":"topic"},"doc://DiContainer/documentation/DiContainer/Module":{"url":"\/documentation\/dicontainer\/module","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Module"}],"navigatorTitle":[{"text":"Module","kind":"identifier"}],"role":"symbol","title":"Module","type":"topic","abstract":[{"type":"codeVoice","code":"Module"},{"text":"은 DI(의존성 주입)를 위한 ","type":"text"},{"inlineContent":[{"text":"단일 모듈","type":"text"}],"type":"strong"},{"text":"을 나타내는 구조체입니다.","type":"text"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Factory":{"kind":"symbol","type":"topic","title":"Factory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","abstract":[{"text":"팩토리 패턴 기반 의존성 주입을 위한 프로퍼티 래퍼","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"url":"\/documentation\/dicontainer\/factory"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","type":"topic","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","title":"DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"role":"collection"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"title":"AppDIContainer","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppDIContainer"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","kind":"symbol","type":"topic","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"AppDIContainer"}],"url":"\/documentation\/dicontainer\/appdicontainer"},"doc://DiContainer/documentation/DiContainer/Inject":{"type":"topic","url":"\/documentation\/dicontainer\/inject","kind":"symbol","title":"Inject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Inject"}],"navigatorTitle":[{"kind":"identifier","text":"Inject"}],"abstract":[{"type":"text","text":"옵셔널 의존성 주입을 위한 프로퍼티 래퍼"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","role":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","url":"\/documentation\/dicontainer\/unifieddi","kind":"article","type":"topic","title":"통합 DI 시스템 - UnifiedDI vs DI","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"text":"와 ","type":"text"},{"code":"DI","type":"codeVoice"},{"text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요.","type":"text"}],"role":"article"}}}