{"variants":[{"paths":["\/documentation\/dicontainer\/containerperformance"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"text":"핵심 아이디어","type":"heading","level":2,"anchor":"%ED%95%B5%EC%8B%AC-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4"},{"items":[{"content":[{"inlineContent":[{"text":"스냅샷 후 작업 생성 → actor hop 최소화","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"등록은 "},{"type":"codeVoice","code":"build()"},{"type":"text","text":"에서 일괄 실행 → 체감 속도 향상"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"코드 스니펫","type":"heading","level":2,"anchor":"%EC%BD%94%EB%93%9C-%EC%8A%A4%EB%8B%88%ED%8E%AB"},{"type":"codeListing","syntax":"swift","code":["let snapshot = modules","await withTaskGroup(of: Void.self) { group in","  for module in snapshot {","    group.addTask { @Sendable in await module.register() }","  }","  await group.waitForAll()","}"]},{"text":"팁","type":"heading","level":2,"anchor":"%ED%8C%81"},{"items":[{"content":[{"inlineContent":[{"text":"모듈 수집 단계에서는 즉시 실행하지 말고 누적하세요.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"너무 많은 모듈(1000+)일 경우 배치 크기를 조정해 메모리를 관리하세요."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance"},"abstract":[{"text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다.","type":"text"}],"metadata":{"roleHeading":"Article","role":"article","title":"Container Performance","modules":[{"name":"DiContainer"}]},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}