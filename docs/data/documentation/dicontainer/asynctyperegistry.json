{"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncTypeRegistry","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/dicontainer\/asynctyperegistry"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/AnySendableBox"],"anchor":"Structures","title":"Structures","generated":true},{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/init()"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/clearAll()","doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/register(_:factory:)","doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/release(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/resolveBox(_:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/Actor-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"sections":[],"metadata":{"title":"AsyncTypeRegistry","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncTypeRegistry"}],"navigatorTitle":[{"text":"AsyncTypeRegistry","kind":"identifier"}],"modules":[{"name":"DiContainer"}],"roleHeading":"Class","role":"symbol","externalID":"s:11DiContainer17AsyncTypeRegistryC","symbolKind":"class"},"abstract":[{"type":"text","text":"Actor-based async registry for DIAsync."},{"text":" ","type":"text"},{"text":"Stores async factories without using GCD\/locks.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/s16SendableMetatypeP","doc:\/\/DiContainer\/ScA"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"references":{"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/clearAll()":{"url":"\/documentation\/dicontainer\/asynctyperegistry\/clearall()","kind":"symbol","type":"topic","title":"clearAll()","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/clearAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearAll"},{"kind":"text","text":"()"}],"abstract":[{"text":"Clear all registrations (test-only recommended)","type":"text"}]},"doc://DiContainer/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/DiContainer\/ScA"},"doc://DiContainer/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/DiContainer\/s8SendableP"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/register(_:factory:)":{"url":"\/documentation\/dicontainer\/asynctyperegistry\/register(_:factory:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Register an async factory for a type (transient resolution)"}],"title":"register(_:factory:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/register(_:factory:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/AnySendableBox":{"title":"AsyncTypeRegistry.AnySendableBox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/AnySendableBox","url":"\/documentation\/dicontainer\/asynctyperegistry\/anysendablebox","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnySendableBox","kind":"identifier"}],"navigatorTitle":[{"text":"AnySendableBox","kind":"identifier"}],"abstract":[],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/release(_:)":{"url":"\/documentation\/dicontainer\/asynctyperegistry\/release(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Release a registration (factory)"}],"title":"release(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/release(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"release","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}]},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/Actor-Implementations":{"url":"\/documentation\/dicontainer\/asynctyperegistry\/actor-implementations","role":"collectionGroup","type":"topic","abstract":[],"title":"Actor Implementations","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/Actor-Implementations","kind":"article"},"doc://DiContainer/s16SendableMetatypeP":{"type":"unresolvable","title":"Swift.SendableMetatype","identifier":"doc:\/\/DiContainer\/s16SendableMetatypeP"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/resolveBox(_:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/resolveBox(_:)","url":"\/documentation\/dicontainer\/asynctyperegistry\/resolvebox(_:)","title":"resolveBox(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveBox","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC","text":"AsyncTypeRegistry"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC14AnySendableBoxV","text":"AnySendableBox","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Resolve a type and return a sendable box","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry","url":"\/documentation\/dicontainer\/asynctyperegistry","title":"AsyncTypeRegistry","type":"topic","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncTypeRegistry"}],"navigatorTitle":[{"text":"AsyncTypeRegistry","kind":"identifier"}],"abstract":[{"type":"text","text":"Actor-based async registry for DIAsync."},{"type":"text","text":" "},{"text":"Stores async factories without using GCD\/locks.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/init()":{"url":"\/documentation\/dicontainer\/asynctyperegistry\/init()","role":"symbol","type":"topic","abstract":[],"title":"init()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/init()","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]}}}