{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry","interfaceLanguage":"swift"},"metadata":{"title":"AsyncTypeRegistry","symbolKind":"class","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"text":"AsyncTypeRegistry","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncTypeRegistry"}],"role":"symbol","roleHeading":"Class","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer17AsyncTypeRegistryC"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/s16SendableMetatypeP","doc:\/\/DiContainer\/ScA"],"kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncTypeRegistry"}]}],"kind":"declarations"}],"topicSections":[{"title":"Structures","generated":true,"anchor":"Structures","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/AnySendableBox"]},{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/init()"]},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/clearAll()","doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/register(_:factory:)","doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/release(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/resolveBox(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/Actor-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"variants":[{"paths":["\/documentation\/dicontainer\/asynctyperegistry"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Actor-based async registry for DIAsync.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Stores async factories without using GCD\/locks."}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/clearAll()":{"abstract":[{"type":"text","text":"Clear all registrations (test-only recommended)"}],"url":"\/documentation\/dicontainer\/asynctyperegistry\/clearall()","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"clearAll"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/clearAll()","title":"clearAll()"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/Actor-Implementations":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/Actor-Implementations","title":"Actor Implementations","url":"\/documentation\/dicontainer\/asynctyperegistry\/actor-implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/release(_:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/release(_:)","title":"release(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"release"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type)"}],"url":"\/documentation\/dicontainer\/asynctyperegistry\/release(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Release a registration (factory)"}],"type":"topic"},"doc://DiContainer/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/DiContainer\/s8SendableP"},"doc://DiContainer/ScA":{"title":"_Concurrency.Actor","type":"unresolvable","identifier":"doc:\/\/DiContainer\/ScA"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/init()":{"title":"init()","url":"\/documentation\/dicontainer\/asynctyperegistry\/init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/init()","type":"topic"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Actor-based async registry for DIAsync."},{"text":" ","type":"text"},{"text":"Stores async factories without using GCD\/locks.","type":"text"}],"title":"AsyncTypeRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry","url":"\/documentation\/dicontainer\/asynctyperegistry","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncTypeRegistry"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncTypeRegistry"}]},"doc://DiContainer/s16SendableMetatypeP":{"identifier":"doc:\/\/DiContainer\/s16SendableMetatypeP","title":"Swift.SendableMetatype","type":"unresolvable"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/AnySendableBox":{"abstract":[],"navigatorTitle":[{"text":"AnySendableBox","kind":"identifier"}],"url":"\/documentation\/dicontainer\/asynctyperegistry\/anysendablebox","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnySendableBox","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/AnySendableBox","title":"AsyncTypeRegistry.AnySendableBox"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","role":"collection","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/register(_:factory:)":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Register an async factory for a type (transient resolution)","type":"text"}],"title":"register(_:factory:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/register(_:factory:)","url":"\/documentation\/dicontainer\/asynctyperegistry\/register(_:factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}]},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/resolveBox(_:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/resolveBox(_:)","title":"resolveBox(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolveBox"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC","text":"AsyncTypeRegistry","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC14AnySendableBoxV","text":"AnySendableBox","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/dicontainer\/asynctyperegistry\/resolvebox(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Resolve a type and return a sendable box"}],"type":"topic"}}}