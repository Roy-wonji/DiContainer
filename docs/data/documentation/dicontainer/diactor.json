{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@globalActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActor"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"특징:","anchor":"%ED%8A%B9%EC%A7%95","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Actor 격리","type":"text"}],"type":"strong"},{"type":"text","text":": Swift Concurrency 완전 준수"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Type Safety"}]},{"type":"text","text":": 컴파일 타임 타입 안전성"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Memory Safety"}],"type":"strong"},{"type":"text","text":": 자동 메모리 관리"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Performance"}],"type":"strong"},{"type":"text","text":": 최적화된 동시 접근"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"%EC%82%AC%EC%9A%A9%EB%B2%95","level":2,"text":"사용법:","type":"heading"},{"syntax":"swift","code":["\/\/ Async\/await 패턴으로 사용","let diActor = DIActor.shared","await diActor.register(ServiceProtocol.self) { ServiceImpl() }","let service = await diActor.resolve(ServiceProtocol.self)"],"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor"]}],"topicSections":[{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredCount","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/printRegistrationStatus()","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/register(_:factory:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/register(_:instance:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/release(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/releaseAll()","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolve(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveResult(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveThrows(_:)"]},{"generated":true,"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared"]},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/Actor-Implementations","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/GlobalActor-Implementations"]}],"kind":"symbol","sections":[],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/ScA","doc:\/\/DiContainer\/12_Concurrency11GlobalActorP"]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"metadata":{"symbolKind":"class","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"roleHeading":"Class","externalID":"s:11DiContainer7DIActorC","modules":[{"name":"DiContainer"}],"title":"DIActor"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/DIActor/resolveThrows(_:)":{"title":"resolveThrows(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"text":"throwing 방식으로 타입을 해결합니다.","type":"text"}],"url":"\/documentation\/dicontainer\/diactor\/resolvethrows(_:)","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveThrows(_:)"},"doc://DiContainer/documentation/DiContainer/DIActor/register(_:factory:)":{"abstract":[{"text":"타입과 팩토리 클로저를 등록합니다.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/register(_:factory:)","url":"\/documentation\/dicontainer\/diactor\/register(_:factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"}],"title":"register(_:factory:)"},"doc://DiContainer/documentation/DiContainer/DIActor/Actor-Implementations":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/Actor-Implementations","type":"topic","url":"\/documentation\/dicontainer\/diactor\/actor-implementations","abstract":[],"role":"collectionGroup","title":"Actor Implementations","kind":"article"},"doc://DiContainer/documentation/DiContainer/DIActor/shared":{"url":"\/documentation\/dicontainer\/diactor\/shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11DiContainer7DIActorC","text":"DIActor","kind":"typeIdentifier"}],"kind":"symbol","title":"shared","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared","role":"symbol","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActor/registeredTypeNames":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"registeredTypeNames"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames","title":"registeredTypeNames","kind":"symbol","type":"topic","url":"\/documentation\/dicontainer\/diactor\/registeredtypenames","abstract":[{"text":"등록된 모든 타입 이름을 반환합니다.","type":"text"}]},"doc://DiContainer/documentation/DiContainer/DIActor/resolveResult(_:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveResult(_:)","abstract":[{"type":"text","text":"Result 패턴으로 타입을 해결합니다."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveResult","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"DIError","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer7DIErrorO"},{"text":">","kind":"text"}],"kind":"symbol","title":"resolveResult(_:)","type":"topic","role":"symbol","url":"\/documentation\/dicontainer\/diactor\/resolveresult(_:)"},"doc://DiContainer/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/DiContainer\/s8SendableP","title":"Swift.Sendable"},"doc://DiContainer/documentation/DiContainer/DIActor":{"kind":"symbol","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"url":"\/documentation\/dicontainer\/diactor","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"title":"DIActor","type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActor/GlobalActor-Implementations":{"kind":"article","role":"collectionGroup","title":"GlobalActor Implementations","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/GlobalActor-Implementations","type":"topic","abstract":[],"url":"\/documentation\/dicontainer\/diactor\/globalactor-implementations"},"doc://DiContainer/12_Concurrency11GlobalActorP":{"title":"_Concurrency.GlobalActor","type":"unresolvable","identifier":"doc:\/\/DiContainer\/12_Concurrency11GlobalActorP"},"doc://DiContainer/documentation/DiContainer/DIActor/release(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"release"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type)"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/release(_:)","url":"\/documentation\/dicontainer\/diactor\/release(_:)","abstract":[{"text":"특정 타입의 등록을 해제합니다.","type":"text"}],"type":"topic","kind":"symbol","title":"release(_:)"},"doc://DiContainer/documentation/DiContainer/DIActor/resolve(_:)":{"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolve(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"url":"\/documentation\/dicontainer\/diactor\/resolve(_:)","type":"topic","title":"resolve(_:)","kind":"symbol","abstract":[{"type":"text","text":"등록된 타입의 인스턴스를 해결합니다."}]},"doc://DiContainer/ScA":{"title":"_Concurrency.Actor","type":"unresolvable","identifier":"doc:\/\/DiContainer\/ScA"},"doc://DiContainer/documentation/DiContainer/DIActor/register(_:instance:)":{"title":"register(_:instance:)","abstract":[{"type":"text","text":"인스턴스를 직접 등록합니다."}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/register(_:instance:)","url":"\/documentation\/dicontainer\/diactor\/register(_:instance:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"instance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}]},"doc://DiContainer/documentation/DiContainer/DIActor/releaseAll()":{"role":"symbol","url":"\/documentation\/dicontainer\/diactor\/releaseall()","title":"releaseAll()","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/releaseAll()","abstract":[{"type":"text","text":"모든 등록을 해제합니다."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"releaseAll","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActor/printRegistrationStatus()":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/printRegistrationStatus()","url":"\/documentation\/dicontainer\/diactor\/printregistrationstatus()","kind":"symbol","title":"printRegistrationStatus()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"printRegistrationStatus"},{"kind":"text","text":"()"}],"abstract":[{"text":"등록 상태를 자세히 출력합니다.","type":"text"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActor/registeredCount":{"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"등록된 타입 개수를 반환합니다."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"registeredCount"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"title":"registeredCount","url":"\/documentation\/dicontainer\/diactor\/registeredcount","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredCount"}}}