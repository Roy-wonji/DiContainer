{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@globalActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActor"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"%ED%8A%B9%EC%A7%95","level":2,"text":"특징:"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Actor 격리","type":"text"}]},{"text":": Swift Concurrency 완전 준수","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Type Safety"}]},{"type":"text","text":": 컴파일 타임 타입 안전성"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Memory Safety","type":"text"}]},{"text":": 자동 메모리 관리","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Performance","type":"text"}]},{"type":"text","text":": 최적화된 동시 접근"}]}]}]},{"anchor":"%EC%82%AC%EC%9A%A9%EB%B2%95","text":"사용법:","type":"heading","level":2},{"syntax":"swift","type":"codeListing","code":["\/\/ Async\/await 패턴으로 사용","let diActor = DIActor.shared","await diActor.register(ServiceProtocol.self) { ServiceImpl() }","let service = await diActor.resolve(ServiceProtocol.self)"]}],"kind":"content"}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/ScA","doc:\/\/DiContainer\/12_Concurrency11GlobalActorP"],"kind":"relationships"}],"metadata":{"externalID":"s:11DiContainer7DIActorC","role":"symbol","symbolKind":"class","modules":[{"name":"DiContainer"}],"navigatorTitle":[{"kind":"identifier","text":"DIActor"}],"roleHeading":"Class","title":"DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredCount","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/printRegistrationStatus()","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/register(_:factory:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/register(_:instance:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/release(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/releaseAll()","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolve(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveResult(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveThrows(_:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Type Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared"],"generated":true,"anchor":"Type-Properties"},{"title":"Default Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/Actor-Implementations","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/GlobalActor-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"references":{"doc://DiContainer/12_Concurrency11GlobalActorP":{"type":"unresolvable","identifier":"doc:\/\/DiContainer\/12_Concurrency11GlobalActorP","title":"_Concurrency.GlobalActor"},"doc://DiContainer/documentation/DiContainer/DIActor":{"role":"symbol","type":"topic","url":"\/documentation\/dicontainer\/diactor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"kind":"symbol","title":"DIActor"},"doc://DiContainer/documentation/DiContainer/DIActor/GlobalActor-Implementations":{"abstract":[],"role":"collectionGroup","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/GlobalActor-Implementations","type":"topic","title":"GlobalActor Implementations","kind":"article","url":"\/documentation\/dicontainer\/diactor\/globalactor-implementations"},"doc://DiContainer/documentation/DiContainer/DIActor/Actor-Implementations":{"abstract":[],"role":"collectionGroup","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/Actor-Implementations","type":"topic","title":"Actor Implementations","kind":"article","url":"\/documentation\/dicontainer\/diactor\/actor-implementations"},"doc://DiContainer/documentation/DiContainer/DIActor/registeredTypeNames":{"url":"\/documentation\/dicontainer\/diactor\/registeredtypenames","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"등록된 모든 타입 이름을 반환합니다."}],"title":"registeredTypeNames","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"registeredTypeNames"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]"}]},"doc://DiContainer/documentation/DiContainer/DIActor/release(_:)":{"title":"release(_:)","kind":"symbol","abstract":[{"type":"text","text":"특정 타입의 등록을 해제합니다."}],"url":"\/documentation\/dicontainer\/diactor\/release(_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"release","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/release(_:)"},"doc://DiContainer/documentation/DiContainer/DIActor/resolveThrows(_:)":{"abstract":[{"type":"text","text":"throwing 방식으로 타입을 해결합니다."}],"type":"topic","title":"resolveThrows(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveThrows(_:)","url":"\/documentation\/dicontainer\/diactor\/resolvethrows(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActor/releaseAll()":{"kind":"symbol","abstract":[{"text":"모든 등록을 해제합니다.","type":"text"}],"type":"topic","title":"releaseAll()","url":"\/documentation\/dicontainer\/diactor\/releaseall()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"releaseAll","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/releaseAll()"},"doc://DiContainer/documentation/DiContainer/DIActor/printRegistrationStatus()":{"title":"printRegistrationStatus()","type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/printRegistrationStatus()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"printRegistrationStatus"},{"kind":"text","text":"()"}],"url":"\/documentation\/dicontainer\/diactor\/printregistrationstatus()","kind":"symbol","abstract":[{"type":"text","text":"등록 상태를 자세히 출력합니다."}]},"doc://DiContainer/ScA":{"identifier":"doc:\/\/DiContainer\/ScA","type":"unresolvable","title":"_Concurrency.Actor"},"doc://DiContainer/documentation/DiContainer/DIActor/register(_:factory:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/register(_:factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"타입과 팩토리 클로저를 등록합니다."}],"title":"register(_:factory:)","role":"symbol","kind":"symbol","url":"\/documentation\/dicontainer\/diactor\/register(_:factory:)","type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActor/resolveResult(_:)":{"type":"topic","url":"\/documentation\/dicontainer\/diactor\/resolveresult(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveResult","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"DIError","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer7DIErrorO"},{"text":">","kind":"text"}],"title":"resolveResult(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveResult(_:)","abstract":[{"text":"Result 패턴으로 타입을 해결합니다.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/DiContainer\/s8SendableP"},"doc://DiContainer/documentation/DiContainer/DIActor/resolve(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"text":"등록된 타입의 인스턴스를 해결합니다.","type":"text"}],"url":"\/documentation\/dicontainer\/diactor\/resolve(_:)","title":"resolve(_:)","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolve(_:)","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"role":"collection","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActor/register(_:instance:)":{"title":"register(_:instance:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"instance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/register(_:instance:)","type":"topic","url":"\/documentation\/dicontainer\/diactor\/register(_:instance:)","role":"symbol","abstract":[{"type":"text","text":"인스턴스를 직접 등록합니다."}]},"doc://DiContainer/documentation/DiContainer/DIActor/shared":{"abstract":[],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11DiContainer7DIActorC","kind":"typeIdentifier","text":"DIActor"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared","title":"shared","url":"\/documentation\/dicontainer\/diactor\/shared"},"doc://DiContainer/documentation/DiContainer/DIActor/registeredCount":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredCount","abstract":[{"type":"text","text":"등록된 타입 개수를 반환합니다."}],"title":"registeredCount","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredCount","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/dicontainer\/diactor\/registeredcount"}}}