{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeKind\/hash(into:)"},"kind":"symbol","metadata":{"extendedModule":"Swift","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:11DiContainer9ScopeKindO","modules":[{"name":"DiContainer","relatedModules":["Swift"]}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}],"title":"hash(into:)","roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","symbolKind":"method"},"variants":[{"paths":["\/documentation\/dicontainer\/scopekind\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeKind"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RawRepresentable.hash(into:)"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"hasher"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://DiContainer/documentation/DiContainer/ScopeKind/hash(into:)":{"abstract":[],"url":"\/documentation\/dicontainer\/scopekind\/hash(into:)","title":"hash(into:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeKind\/hash(into:)","kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[],"url":"\/documentation\/dicontainer","kind":"symbol","type":"topic","role":"collection"},"doc://DiContainer/documentation/DiContainer/ScopeKind":{"url":"\/documentation\/dicontainer\/scopekind","navigatorTitle":[{"text":"ScopeKind","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeKind","type":"topic","abstract":[{"type":"text","text":"사전 정의된 스코프 종류"}],"title":"ScopeKind","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScopeKind","kind":"identifier"}]}}}