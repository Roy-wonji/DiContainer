{"seeAlsoSections":[{"title":"프로퍼티 래퍼 확장","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers"],"generated":true,"anchor":"프로퍼티-래퍼-확장"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"kind":"article","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyKeyPatterns","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"의존성 해석을 안전하게 하기 위한 DependencyKey 패턴을 정리합니다."}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"안전한 패턴 예시","type":"heading","anchor":"%EC%95%88%EC%A0%84%ED%95%9C-%ED%8C%A8%ED%84%B4-%EC%98%88%EC%8B%9C"},{"syntax":"swift","type":"codeListing","code":["\/\/ 앱 시작 시 사전 등록 + 안전한 해석","extension BookListUseCaseImpl: DependencyKey {","  public static var liveValue: BookListInterface = {","    guard let repo = DependencyContainer.live.resolve(BookListInterface.self) else {","      return DefaultBookListRepositoryImpl()","    }","    return BookListUseCaseImpl(repository: repo)","  }()","}"]},{"type":"heading","anchor":"Factory-%EC%A7%80%EC%97%B0-%EC%B4%88%EA%B8%B0%ED%99%94","text":"Factory 지연 초기화","level":2},{"type":"codeListing","syntax":"swift","code":["extension BookListUseCaseImpl: DependencyKey {","  public static var liveValue: BookListInterface = BookListUseCaseFactory.create()","}","","enum BookListUseCaseFactory {","  static func create() -> BookListInterface {","    @Inject(\\.bookListInterface) var repo: BookListInterface?","    return repo ?? DefaultBookListRepositoryImpl()","  }","}"]},{"anchor":"%EB%B9%84%EB%8F%99%EA%B8%B0-%EB%93%B1%EB%A1%9D-%EC%98%88%EC%8B%9C","type":"heading","text":"비동기 등록 예시","level":2},{"syntax":"swift","type":"codeListing","code":["Task {","  await DependencyContainer.bootstrapAsync { c in","    c.register(BookListInterface.self) { BookListRepositoryImpl() }","  }","}"]}]}],"variants":[{"paths":["\/documentation\/dicontainer\/dependencykeypatterns"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"DiContainer"}],"title":"DependencyKey Patterns","role":"article","roleHeading":"Article"},"references":{"doc://DiContainer/documentation/DiContainer/PropertyWrappers":{"url":"\/documentation\/dicontainer\/propertywrappers","role":"article","title":"Property Wrapper 가이드","abstract":[{"type":"text","text":"DiContainer의 강력한 Property Wrapper들을 활용하여 선언적이고 타입 안전한 의존성 주입을 구현하는 방법"}],"kind":"article","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic","role":"collection","kind":"symbol","title":"DiContainer","abstract":[]}}}