{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync\/requireResolve(_:)"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync"]]},"kind":"symbol","metadata":{"externalID":"s:11DiContainer7DIAsyncO14requireResolveyxxmYalFZ","modules":[{"name":"DiContainer"}],"symbolKind":"method","title":"requireResolve(_:)","roleHeading":"Type Method","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Require resolve (fatalError on failure)","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diasync\/requireresolve(_:)"]}],"references":{"doc://DiContainer/documentation/DiContainer/DIAsync/requireResolve(_:)":{"url":"\/documentation\/dicontainer\/diasync\/requireresolve(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync\/requireResolve(_:)","type":"topic","abstract":[{"type":"text","text":"Require resolve (fatalError on failure)"}],"kind":"symbol","title":"requireResolve(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"requireResolve"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}]},"doc://DiContainer/documentation/DiContainer/DIAsync":{"title":"DIAsync","url":"\/documentation\/dicontainer\/diasync","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync","abstract":[{"text":"Concurrency-first DI API using actor-based registry.","type":"text"},{"text":" ","type":"text"},{"text":"Provides async register\/resolve without relying on GCD.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DIAsync"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIAsync"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[],"url":"\/documentation\/dicontainer","kind":"symbol","type":"topic","role":"collection"}}}