{"sections":[],"abstract":[{"text":"Resolve an instance (async). Falls back to sync container if not found.","type":"text"}],"metadata":{"roleHeading":"Type Method","role":"symbol","externalID":"s:11DiContainer7DIAsyncO7resolveyxSgxmYalFZ","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"title":"resolve(_:)","symbolKind":"method","modules":[{"name":"DiContainer"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync"]]},"variants":[{"paths":["\/documentation\/dicontainer\/diasync\/resolve(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync\/resolve(_:)","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","role":"collection","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/DIAsync/resolve(_:)":{"abstract":[{"type":"text","text":"Resolve an instance (async). Falls back to sync container if not found."}],"url":"\/documentation\/dicontainer\/diasync\/resolve(_:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"title":"resolve(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync\/resolve(_:)"},"doc://DiContainer/documentation/DiContainer/DIAsync":{"type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DIAsync","kind":"identifier"}],"abstract":[{"text":"Concurrency-first DI API using actor-based registry.","type":"text"},{"text":" ","type":"text"},{"text":"Provides async register\/resolve without relying on GCD.","type":"text"}],"title":"DIAsync","navigatorTitle":[{"text":"DIAsync","kind":"identifier"}],"url":"\/documentation\/dicontainer\/diasync"}}}