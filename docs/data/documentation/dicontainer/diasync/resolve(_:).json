{"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync"]]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync\/resolve(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diasync\/resolve(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}]}],"kind":"symbol","metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"symbolKind":"method","roleHeading":"Type Method","title":"resolve(_:)","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer7DIAsyncO7resolveyxSgxmYalFZ"},"abstract":[{"type":"text","text":"Resolve an instance (async). Falls back to sync container if not found."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/DIAsync":{"navigatorTitle":[{"kind":"identifier","text":"DIAsync"}],"title":"DIAsync","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync","kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIAsync","kind":"identifier"}],"url":"\/documentation\/dicontainer\/diasync","abstract":[{"type":"text","text":"Concurrency-first DI API using actor-based registry."},{"type":"text","text":" "},{"type":"text","text":"Provides async register\/resolve without relying on GCD."}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/DIAsync/resolve(_:)":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync\/resolve(_:)","title":"resolve(_:)","url":"\/documentation\/dicontainer\/diasync\/resolve(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"type":"text","text":"Resolve an instance (async). Falls back to sync container if not found."}],"role":"symbol"}}}