{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/requireResolve(_:)-4nmy5"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"해결할 타입"}],"type":"paragraph"}],"name":"type"}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"해결된 인스턴스 (항상 성공)"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"의존성이 반드시 등록되어 있어야 하는 경우 사용합니다."},{"type":"text","text":" "},{"type":"text","text":"등록되지 않은 경우 상세한 디버깅 정보와 함께 앱이 종료됩니다."}],"type":"paragraph"},{"text":"⚠️ 주의사항:","level":3,"type":"heading","anchor":"%E2%9A%A0%EF%B8%8F-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD"},{"inlineContent":[{"type":"text","text":"프로덕션 코드에서는 "},{"code":"resolveThrows","type":"codeVoice"},{"type":"text","text":"를 사용하는 것을 권장합니다."}],"type":"paragraph"},{"text":"사용 예시:","level":3,"type":"heading","anchor":"%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C"},{"code":["let database = UnifiedDI.requireResolve(DatabaseProtocol.self)","\/\/ database는 항상 유효한 인스턴스"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifieddi\/requireresolve(_:)-4nmy5"]}],"metadata":{"title":"requireResolve(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"modules":[{"name":"DiContainer"}],"roleHeading":"Type Method","role":"symbol","externalID":"s:11DiContainer9UnifiedDIO14requireResolveyxxmlFZ","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"]]},"abstract":[{"text":"필수 의존성을 해결합니다 (실패 시 fatalError)","type":"text"}],"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://DiContainer/documentation/DiContainer/UnifiedDI/requireResolve(_:)-4nmy5":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/requireResolve(_:)-4nmy5","url":"\/documentation\/dicontainer\/unifieddi\/requireresolve(_:)-4nmy5","title":"requireResolve(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"text":"필수 의존성을 해결합니다 (실패 시 fatalError)","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"url":"\/documentation\/dicontainer\/unifieddi","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","abstract":[{"type":"text","text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: "},{"code":"UnifiedDI","type":"codeVoice"},{"type":"text","text":"와 "},{"code":"DI","type":"codeVoice"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"title":"통합 DI 시스템 - UnifiedDI vs DI","role":"article","kind":"article"}}}