{"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping "},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> () -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"text":"등록할 타입","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"인스턴스를 생성하는 클로저","type":"text"}],"type":"paragraph"}],"name":"factory"}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"등록 해제 핸들러 (호출하면 등록 해제)"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 메서드는 지연 생성 패턴을 사용하여 실제 "},{"type":"codeVoice","code":"resolve"},{"type":"text","text":" 호출 시에만"},{"type":"text","text":" "},{"type":"text","text":"팩토리 클로저가 실행됩니다. 매번 새로운 인스턴스가 생성됩니다."}]},{"text":"사용 예시:","anchor":"%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C","level":3,"type":"heading"},{"code":["let releaseHandler = UnifiedDI.register(NetworkService.self) {","    DefaultNetworkService()","}","\/\/ 나중에 해제","releaseHandler()"],"syntax":"swift","type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"]]},"variants":[{"paths":["\/documentation\/dicontainer\/unifieddi\/register(_:factory:)-2u3jm"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","metadata":{"symbolKind":"method","title":"register(_:factory:)","modules":[{"name":"DiContainer"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"text":") -> () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}],"roleHeading":"Type Method","role":"symbol","externalID":"s:11DiContainer9UnifiedDIO8register_7factoryyyYbcxm_xyYbctlFZ"},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/register(_:factory:)-2u3jm","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"팩토리 패턴으로 의존성을 등록합니다"}],"references":{"doc://DiContainer/documentation/DiContainer":{"abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","title":"DiContainer","type":"topic","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/UnifiedDI/register(_:factory:)-2u3jm":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/register(_:factory:)-2u3jm","title":"register(_:factory:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": () -> "},{"text":"T","kind":"typeIdentifier"},{"text":") -> () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}],"abstract":[{"text":"팩토리 패턴으로 의존성을 등록합니다","type":"text"}],"type":"topic","url":"\/documentation\/dicontainer\/unifieddi\/register(_:factory:)-2u3jm","role":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"url":"\/documentation\/dicontainer\/unifieddi","title":"통합 DI 시스템 - UnifiedDI vs DI","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"type":"text","text":"와 "},{"code":"DI","type":"codeVoice"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"kind":"article","type":"topic","role":"article"}}}