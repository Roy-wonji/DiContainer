{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"circularDependencies"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"의존성 등록\/해결 과정에서 자동으로 감지된 순환 의존성입니다."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/dicontainer\/unifieddi\/circulardependencies()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"⚠️ 자동 감지된 순환 의존성을 반환합니다"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/circularDependencies()"},"sections":[],"metadata":{"externalID":"s:11DiContainer9UnifiedDIO20circularDependenciesShySSGyFZ","symbolKind":"method","title":"circularDependencies()","role":"symbol","roleHeading":"Type Method","modules":[{"name":"DiContainer"}],"extendedModule":"DiContainer","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"circularDependencies"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":">"}]},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"]]},"references":{"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"role":"article","title":"통합 DI 시스템 - UnifiedDI vs DI","type":"topic","url":"\/documentation\/dicontainer\/unifieddi","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","kind":"article","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"type":"codeVoice","code":"UnifiedDI"},{"text":"와 ","type":"text"},{"type":"codeVoice","code":"DI"},{"text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요.","type":"text"}]},"doc://DiContainer/documentation/DiContainer/UnifiedDI/circularDependencies()":{"title":"circularDependencies()","role":"symbol","url":"\/documentation\/dicontainer\/unifieddi\/circulardependencies()","kind":"symbol","abstract":[{"text":"⚠️ 자동 감지된 순환 의존성을 반환합니다","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/circularDependencies()","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"circularDependencies"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":">"}]}}}