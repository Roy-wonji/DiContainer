{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DependencyContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","preciseIdentifier":"s:11DiContainer010DependencyB0C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"DependencyContainer 내의 KeyPath","type":"text"}],"type":"paragraph"}],"name":"keyPath"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"해결된 인스턴스 (항상 성공)"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"KeyPath 기반으로 의존성이 반드시 등록되어 있어야 하는 경우 사용합니다.","type":"text"},{"text":" ","type":"text"},{"text":"등록되지 않은 경우 상세한 디버깅 정보와 함께 앱이 종료됩니다.","type":"text"}]},{"text":"사용 예시:","type":"heading","level":3,"anchor":"%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C"},{"type":"codeListing","code":["let repository = UnifiedDI.requireResolve(\\.summaryPersistenceInterface)","\/\/ repository는 항상 유효한 인스턴스"],"syntax":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"]]},"variants":[{"paths":["\/documentation\/dicontainer\/unifieddi\/requireresolve(_:)-58cgk"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/requireResolve(_:)-58cgk","interfaceLanguage":"swift"},"metadata":{"role":"symbol","modules":[{"name":"DiContainer"}],"symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"DependencyContainer","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer010DependencyB0C"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"requireResolve(_:)","roleHeading":"Type Method","externalID":"s:11DiContainer9UnifiedDIO14requireResolveyxs7KeyPathCyAA010DependencyB0CxSgGlFZ"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"KeyPath를 사용하여 필수 의존성을 해결합니다 (실패 시 fatalError)"}],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","url":"\/documentation\/dicontainer\/unifieddi","role":"article","abstract":[{"type":"text","text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: "},{"type":"codeVoice","code":"UnifiedDI"},{"type":"text","text":"와 "},{"type":"codeVoice","code":"DI"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"title":"통합 DI 시스템 - UnifiedDI vs DI","kind":"article"},"doc://DiContainer/documentation/DiContainer/UnifiedDI/requireResolve(_:)-58cgk":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/requireResolve(_:)-58cgk","abstract":[{"type":"text","text":"KeyPath를 사용하여 필수 의존성을 해결합니다 (실패 시 fatalError)"}],"url":"\/documentation\/dicontainer\/unifieddi\/requireresolve(_:)-58cgk","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DependencyContainer","preciseIdentifier":"s:11DiContainer010DependencyB0C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"requireResolve(_:)","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic","role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"type":"topic","url":"\/documentation\/dicontainer\/dependencycontainer","title":"DependencyContainer","role":"symbol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer"}}}