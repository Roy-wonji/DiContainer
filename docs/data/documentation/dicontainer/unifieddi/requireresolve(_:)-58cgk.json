{"sections":[],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/requireResolve(_:)-58cgk","interfaceLanguage":"swift"},"metadata":{"title":"requireResolve(_:)","modules":[{"name":"DiContainer"}],"role":"symbol","externalID":"s:11DiContainer9UnifiedDIO14requireResolveyxs7KeyPathCyAA010DependencyB0CxSgGlFZ","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"DependencyContainer","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer010DependencyB0C"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"roleHeading":"Type Method"},"variants":[{"paths":["\/documentation\/dicontainer\/unifieddi\/requireresolve(_:)-58cgk"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"KeyPath를 사용하여 필수 의존성을 해결합니다 (실패 시 fatalError)"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","text":"DependencyContainer","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer010DependencyB0C"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"DependencyContainer 내의 KeyPath","type":"text"}],"type":"paragraph"}],"name":"keyPath"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"해결된 인스턴스 (항상 성공)","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"KeyPath 기반으로 의존성이 반드시 등록되어 있어야 하는 경우 사용합니다.","type":"text"},{"text":" ","type":"text"},{"text":"등록되지 않은 경우 상세한 디버깅 정보와 함께 앱이 종료됩니다.","type":"text"}],"type":"paragraph"},{"type":"heading","level":3,"text":"사용 예시:","anchor":"%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C"},{"type":"codeListing","syntax":"swift","code":["let repository = UnifiedDI.requireResolve(\\.summaryPersistenceInterface)","\/\/ repository는 항상 유효한 인스턴스"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"]]},"kind":"symbol","references":{"doc://DiContainer/documentation/DiContainer":{"abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","title":"DiContainer","type":"topic","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/UnifiedDI/requireResolve(_:)-58cgk":{"title":"requireResolve(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"KeyPath를 사용하여 필수 의존성을 해결합니다 (실패 시 fatalError)"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"DependencyContainer","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer010DependencyB0C"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/requireResolve(_:)-58cgk","url":"\/documentation\/dicontainer\/unifieddi\/requireresolve(_:)-58cgk"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"url":"\/documentation\/dicontainer\/unifieddi","title":"통합 DI 시스템 - UnifiedDI vs DI","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"type":"text","text":"와 "},{"code":"DI","type":"codeVoice"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"kind":"article","type":"topic","role":"article"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","title":"DependencyContainer","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DependencyContainer","kind":"identifier"}],"navigatorTitle":[{"text":"DependencyContainer","kind":"identifier"}],"abstract":[],"type":"topic","url":"\/documentation\/dicontainer\/dependencycontainer","role":"symbol"}}}