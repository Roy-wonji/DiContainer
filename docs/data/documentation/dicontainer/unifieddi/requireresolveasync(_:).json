{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/requireResolveAsync(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"DIActor를 사용한 필수 의존성 조회 (실패 시 예외 발생)"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"requireResolveAsync"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"반드시 등록되어 있어야 하는 의존성을 비동기적으로 조회합니다."},{"type":"text","text":" "},{"type":"text","text":"등록되지 않은 경우 DIError를 throw합니다."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifieddi\/requireresolveasync(_:)"]}],"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Type Method","title":"requireResolveAsync(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"requireResolveAsync"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer9UnifiedDIO19requireResolveAsyncyxxmYaKs8SendableRzlFZ"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedDI/requireResolveAsync(_:)":{"title":"requireResolveAsync(_:)","url":"\/documentation\/dicontainer\/unifieddi\/requireresolveasync(_:)","kind":"symbol","abstract":[{"text":"DIActor를 사용한 필수 의존성 조회 (실패 시 예외 발생)","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireResolveAsync","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/requireResolveAsync(_:)"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"title":"통합 DI 시스템 - UnifiedDI vs DI","role":"article","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"type":"codeVoice","code":"UnifiedDI"},{"text":"와 ","type":"text"},{"type":"codeVoice","code":"DI"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"url":"\/documentation\/dicontainer\/unifieddi","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","kind":"article","type":"topic"},"doc://DiContainer/documentation/DiContainer":{"abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","title":"DiContainer","type":"topic","url":"\/documentation\/dicontainer"}}}