{"metadata":{"title":"resolveWithTracking(_:)","role":"symbol","modules":[{"name":"DiContainer"}],"symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveWithTracking","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"roleHeading":"Type Method","externalID":"s:11DiContainer9UnifiedDIO19resolveWithTrackingyxSgxmlFZ"},"abstract":[{"type":"text","text":"성능 추적과 함께 의존성을 해결합니다"}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/resolveWithTracking(_:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/dicontainer\/unifieddi\/resolvewithtracking(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveWithTracking","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"해결할 타입"}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"해결된 인스턴스 (없으면 nil)"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"해결 과정의 성능을 측정하고 통계를 수집합니다.","type":"text"},{"text":" ","type":"text"},{"text":"디버그 빌드에서만 실제 측정이 수행되며, 릴리즈 빌드에서는 일반 resolve와 동일합니다.","type":"text"}]},{"type":"heading","level":3,"anchor":"%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C","text":"사용 예시:"},{"type":"codeListing","syntax":"swift","code":["let service = UnifiedDI.resolveWithTracking(NetworkService.self)","\/\/ 성능 통계가 자동으로 수집됨"]}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"]]},"references":{"doc://DiContainer/documentation/DiContainer/UnifiedDI/resolveWithTracking(_:)":{"role":"symbol","abstract":[{"text":"성능 추적과 함께 의존성을 해결합니다","type":"text"}],"title":"resolveWithTracking(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/resolveWithTracking(_:)","type":"topic","url":"\/documentation\/dicontainer\/unifieddi\/resolvewithtracking(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveWithTracking"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"role":"article","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"text":"와 ","type":"text"},{"code":"DI","type":"codeVoice"},{"text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요.","type":"text"}],"type":"topic","title":"통합 DI 시스템 - UnifiedDI vs DI","kind":"article","url":"\/documentation\/dicontainer\/unifieddi","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","title":"DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"role":"collection","url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}