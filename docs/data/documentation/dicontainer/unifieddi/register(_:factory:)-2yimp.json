{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/register(_:factory:)-2yimp"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"KeyPath를 사용하여 의존성을 등록하고 인스턴스를 반환합니다 (DI.register 스타일)"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer010DependencyB0C","text":"DependencyContainer"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"keyPath","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"DependencyContainer 내의 KeyPath"}]}]},{"name":"factory","content":[{"inlineContent":[{"text":"인스턴스를 생성하는 팩토리 클로저","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"생성된 인스턴스"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"DependencyContainer의 KeyPath를 사용하여 타입 안전한 방식으로","type":"text"},{"text":" ","type":"text"},{"text":"의존성을 등록하고 동시에 생성된 인스턴스를 반환합니다.","type":"text"},{"text":" ","type":"text"},{"text":"기존 ","type":"text"},{"code":"DI.register(\\.keyPath)","type":"codeVoice"},{"text":" 스타일과 호환되면서 더 편리합니다.","type":"text"}]},{"level":3,"text":"사용 예시:","type":"heading","anchor":"%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C"},{"code":["let repository = UnifiedDI.register(\\.summaryPersistenceInterface) {","    SummaryPersistenceRepositoryImpl()","}","return SummaryPersistenceUseCaseImpl(repository: repository)","","let service = UnifiedDI.register(\\.userService) {","    UserServiceImpl()","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"sections":[],"metadata":{"roleHeading":"Type Method","symbolKind":"method","externalID":"s:11DiContainer9UnifiedDIO8register_7factoryxs7KeyPathCyAA010DependencyB0CxSgG_xyYbctlFZ","title":"register(_:factory:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DependencyContainer","preciseIdentifier":"s:11DiContainer010DependencyB0C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"DiContainer"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifieddi\/register(_:factory:)-2yimp"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"]]},"references":{"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"abstract":[],"url":"\/documentation\/dicontainer\/dependencycontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","role":"symbol","title":"DependencyContainer","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","kind":"article","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"text":"와 ","type":"text"},{"code":"DI","type":"codeVoice"},{"text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요.","type":"text"}],"title":"통합 DI 시스템 - UnifiedDI vs DI","role":"article","type":"topic","url":"\/documentation\/dicontainer\/unifieddi"},"doc://DiContainer/documentation/DiContainer/UnifiedDI/register(_:factory:)-2yimp":{"abstract":[{"text":"KeyPath를 사용하여 의존성을 등록하고 인스턴스를 반환합니다 (DI.register 스타일)","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI\/register(_:factory:)-2yimp","url":"\/documentation\/dicontainer\/unifieddi\/register(_:factory:)-2yimp","type":"topic","title":"register(_:factory:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DependencyContainer","preciseIdentifier":"s:11DiContainer010DependencyB0C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]}}}