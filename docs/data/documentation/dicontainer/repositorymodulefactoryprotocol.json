{"metadata":{"externalID":"s:11DiContainer31RepositoryModuleFactoryProtocola","roleHeading":"Type Alias","modules":[{"name":"DiContainer"}],"platforms":[{"unavailable":false,"deprecated":true,"message":"Use RepositoryModuleFactory instead","beta":false}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"RepositoryModuleFactoryProtocol"}],"symbolKind":"typealias","title":"RepositoryModuleFactoryProtocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RepositoryModuleFactoryProtocol"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactoryProtocol","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/dicontainer\/repositorymodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryModuleFactoryProtocol","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"ModuleFactory","preciseIdentifier":"s:11DiContainer13ModuleFactoryP","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use RepositoryModuleFactory instead"}],"type":"paragraph"}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://DiContainer/documentation/DiContainer":{"role":"collection","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"type":"topic","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","url":"\/documentation\/dicontainer\/modulefactory","abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"role":"article","title":"Module Factory"},"doc://DiContainer/documentation/DiContainer/RepositoryModuleFactoryProtocol":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"RepositoryModuleFactoryProtocol"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactoryProtocol","deprecated":true,"url":"\/documentation\/dicontainer\/repositorymodulefactoryprotocol","role":"symbol","kind":"symbol","type":"topic","title":"RepositoryModuleFactoryProtocol","navigatorTitle":[{"kind":"identifier","text":"RepositoryModuleFactoryProtocol"}],"abstract":[]}}}