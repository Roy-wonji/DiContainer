{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryModuleFactoryProtocol","kind":"identifier"},{"text":" = ","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","text":"ModuleFactory","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer13ModuleFactoryP"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"variants":[{"paths":["\/documentation\/dicontainer\/repositorymodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use RepositoryModuleFactory instead"}],"type":"paragraph"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactoryProtocol"},"kind":"symbol","metadata":{"title":"RepositoryModuleFactoryProtocol","navigatorTitle":[{"text":"RepositoryModuleFactoryProtocol","kind":"identifier"}],"modules":[{"name":"DiContainer"}],"role":"symbol","externalID":"s:11DiContainer31RepositoryModuleFactoryProtocola","platforms":[{"message":"Use RepositoryModuleFactory instead","deprecated":true,"unavailable":false,"beta":false}],"symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryModuleFactoryProtocol","kind":"identifier"}],"roleHeading":"Type Alias"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://DiContainer/documentation/DiContainer/RepositoryModuleFactoryProtocol":{"kind":"symbol","title":"RepositoryModuleFactoryProtocol","navigatorTitle":[{"text":"RepositoryModuleFactoryProtocol","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[],"deprecated":true,"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryModuleFactoryProtocol","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactoryProtocol","url":"\/documentation\/dicontainer\/repositorymodulefactoryprotocol"},"doc://DiContainer/documentation/DiContainer":{"abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","title":"DiContainer","type":"topic","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"title":"Module Factory","url":"\/documentation\/dicontainer\/modulefactory","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","kind":"article","role":"article"}}}