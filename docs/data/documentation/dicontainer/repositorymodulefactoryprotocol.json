{"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use RepositoryModuleFactory instead","type":"text"}]}],"metadata":{"title":"RepositoryModuleFactoryProtocol","modules":[{"name":"DiContainer"}],"role":"symbol","roleHeading":"Type Alias","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"RepositoryModuleFactoryProtocol"}],"symbolKind":"typealias","externalID":"s:11DiContainer31RepositoryModuleFactoryProtocola","navigatorTitle":[{"kind":"identifier","text":"RepositoryModuleFactoryProtocol"}],"platforms":[{"unavailable":false,"beta":false,"deprecated":true,"message":"Use RepositoryModuleFactory instead"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactoryProtocol"},"variants":[{"paths":["\/documentation\/dicontainer\/repositorymodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RepositoryModuleFactoryProtocol"},{"text":" = ","kind":"text"},{"text":"ModuleFactory","kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","preciseIdentifier":"s:11DiContainer13ModuleFactoryP"}],"languages":["swift"]}]}],"references":{"doc://DiContainer/documentation/DiContainer":{"kind":"symbol","role":"collection","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/RepositoryModuleFactoryProtocol":{"title":"RepositoryModuleFactoryProtocol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryModuleFactoryProtocol","kind":"identifier"}],"deprecated":true,"type":"topic","url":"\/documentation\/dicontainer\/repositorymodulefactoryprotocol","abstract":[],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactoryProtocol","navigatorTitle":[{"kind":"identifier","text":"RepositoryModuleFactoryProtocol"}]},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"url":"\/documentation\/dicontainer\/modulefactory","role":"article","kind":"article","type":"topic","title":"Module Factory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}]}}}