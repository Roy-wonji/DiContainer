{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parallelProcessingOptimization","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"병렬 처리 최적화","level":2,"anchor":"%EB%B3%91%EB%A0%AC-%EC%B2%98%EB%A6%AC-%EC%B5%9C%EC%A0%81%ED%99%94","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"동시 실행"}],"type":"strong"},{"text":": 독립적인 모듈들이 병렬로 등록되어 전체 시간 단축","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"메모리 효율","type":"text"}],"type":"strong"},{"text":": 스냅샷 방식으로 불필요한 메모리 복사 최소화","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"CPU 활용","type":"text"}],"type":"strong"},{"text":": 멀티코어 환경에서 모든 코어 활용 가능","type":"text"}]}]}]},{"text":"메모리 관리","level":3,"anchor":"%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC","type":"heading"},{"syntax":"swift","type":"codeListing","code":["\/\/ 등록 완료 후 내부 모듈 배열은 자동으로 해제됨","await container.build() \/\/ 이후 modules 배열은 비워짐"]}]}],"metadata":{"roleHeading":"Type Property","title":"parallelProcessingOptimization","externalID":"s:11DiContainer0B16PerformanceGuideO30parallelProcessingOptimizationSSvpZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parallelProcessingOptimization","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"symbolKind":"property","role":"symbol","modules":[{"name":"DiContainer"}]},"variants":[{"paths":["\/documentation\/dicontainer\/containerperformanceguide\/parallelprocessingoptimization"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/parallelProcessingOptimization","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide"]]},"references":{"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide":{"title":"ContainerPerformanceGuide","type":"topic","abstract":[{"text":"Container 성능 특성에 대한 상세 문서","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerPerformanceGuide","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide","navigatorTitle":[{"text":"ContainerPerformanceGuide","kind":"identifier"}],"url":"\/documentation\/dicontainer\/containerperformanceguide","kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide/parallelProcessingOptimization":{"url":"\/documentation\/dicontainer\/containerperformanceguide\/parallelprocessingoptimization","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parallelProcessingOptimization"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/parallelProcessingOptimization","title":"parallelProcessingOptimization","kind":"symbol"}}}