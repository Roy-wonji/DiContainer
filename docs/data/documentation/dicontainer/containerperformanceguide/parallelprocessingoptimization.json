{"metadata":{"roleHeading":"Type Property","role":"symbol","externalID":"s:11DiContainer0B16PerformanceGuideO30parallelProcessingOptimizationSSvpZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parallelProcessingOptimization","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"parallelProcessingOptimization","modules":[{"name":"DiContainer"}],"symbolKind":"property"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parallelProcessingOptimization","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"%EB%B3%91%EB%A0%AC-%EC%B2%98%EB%A6%AC-%EC%B5%9C%EC%A0%81%ED%99%94","type":"heading","text":"병렬 처리 최적화","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"동시 실행","type":"text"}]},{"text":": 독립적인 모듈들이 병렬로 등록되어 전체 시간 단축","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"메모리 효율"}],"type":"strong"},{"type":"text","text":": 스냅샷 방식으로 불필요한 메모리 복사 최소화"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"CPU 활용"}]},{"type":"text","text":": 멀티코어 환경에서 모든 코어 활용 가능"}],"type":"paragraph"}]}]},{"anchor":"%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC","type":"heading","text":"메모리 관리","level":3},{"code":["\/\/ 등록 완료 후 내부 모듈 배열은 자동으로 해제됨","await container.build() \/\/ 이후 modules 배열은 비워짐"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/parallelProcessingOptimization","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/containerperformanceguide\/parallelprocessingoptimization"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide"]]},"references":{"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide/parallelProcessingOptimization":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/parallelProcessingOptimization","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parallelProcessingOptimization","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"parallelProcessingOptimization","url":"\/documentation\/dicontainer\/containerperformanceguide\/parallelprocessingoptimization","kind":"symbol","type":"topic","role":"symbol","abstract":[]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic","role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide":{"abstract":[{"type":"text","text":"Container 성능 특성에 대한 상세 문서"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerPerformanceGuide","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ContainerPerformanceGuide","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide","title":"ContainerPerformanceGuide","url":"\/documentation\/dicontainer\/containerperformanceguide"}}}