{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"property","externalID":"s:11DiContainer0B16PerformanceGuideO30parallelProcessingOptimizationSSvpZ","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parallelProcessingOptimization"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"modules":[{"name":"DiContainer"}],"roleHeading":"Type Property","title":"parallelProcessingOptimization"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/parallelProcessingOptimization"},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/dicontainer\/containerperformanceguide\/parallelprocessingoptimization"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parallelProcessingOptimization","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"병렬 처리 최적화","anchor":"%EB%B3%91%EB%A0%AC-%EC%B2%98%EB%A6%AC-%EC%B5%9C%EC%A0%81%ED%99%94"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"동시 실행","type":"text"}]},{"text":": 독립적인 모듈들이 병렬로 등록되어 전체 시간 단축","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"메모리 효율","type":"text"}]},{"type":"text","text":": 스냅샷 방식으로 불필요한 메모리 복사 최소화"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"CPU 활용"}],"type":"strong"},{"text":": 멀티코어 환경에서 모든 코어 활용 가능","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"text":"메모리 관리","anchor":"%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC"},{"type":"codeListing","syntax":"swift","code":["\/\/ 등록 완료 후 내부 모듈 배열은 자동으로 해제됨","await container.build() \/\/ 이후 modules 배열은 비워짐"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide"]]},"references":{"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide/parallelProcessingOptimization":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/parallelProcessingOptimization","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parallelProcessingOptimization","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/dicontainer\/containerperformanceguide\/parallelprocessingoptimization","title":"parallelProcessingOptimization","kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","type":"topic","role":"collection"},"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide","url":"\/documentation\/dicontainer\/containerperformanceguide","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerPerformanceGuide"}],"title":"ContainerPerformanceGuide","type":"topic","abstract":[{"text":"Container 성능 특성에 대한 상세 문서","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ContainerPerformanceGuide"}]}}}