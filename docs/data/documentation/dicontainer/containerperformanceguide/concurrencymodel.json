{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"concurrencyModel","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"동시성 모델","type":"heading","anchor":"%EB%8F%99%EC%8B%9C%EC%84%B1-%EB%AA%A8%EB%8D%B8"},{"level":3,"text":"Actor 기반 안전성","type":"heading","anchor":"Actor-%EA%B8%B0%EB%B0%98-%EC%95%88%EC%A0%84%EC%84%B1"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"내부 상태 변경은 actor의 직렬 실행 큐에서만 발생"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"외부에서의 동시 접근이 자동으로 동기화됨","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"데이터 경쟁 조건 완전 차단"}]}]}],"type":"unorderedList"},{"level":3,"text":"Task Group 활용","type":"heading","anchor":"Task-Group-%ED%99%9C%EC%9A%A9"},{"code":["\/\/ 내부 구현 예시 (실제 코드)","await withTaskGroup(of: Void.self) { group in","    for module in modules {","        group.addTask { @Sendable in","            await module.register() \/\/ 각 모듈이 병렬 등록","        }","    }","    await group.waitForAll() \/\/ 모든 등록 완료까지 대기","}"],"type":"codeListing","syntax":"swift"}]}],"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/containerperformanceguide\/concurrencymodel"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/concurrencyModel"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide"]]},"metadata":{"modules":[{"name":"DiContainer"}],"role":"symbol","externalID":"s:11DiContainer0B16PerformanceGuideO16concurrencyModelSSvpZ","title":"concurrencyModel","symbolKind":"property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"concurrencyModel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"roleHeading":"Type Property"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide/concurrencyModel":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"concurrencyModel","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/concurrencyModel","title":"concurrencyModel","type":"topic","url":"\/documentation\/dicontainer\/containerperformanceguide\/concurrencymodel","abstract":[]},"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerPerformanceGuide"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ContainerPerformanceGuide"}],"url":"\/documentation\/dicontainer\/containerperformanceguide","kind":"symbol","title":"ContainerPerformanceGuide","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide","abstract":[{"type":"text","text":"Container 성능 특성에 대한 상세 문서"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}