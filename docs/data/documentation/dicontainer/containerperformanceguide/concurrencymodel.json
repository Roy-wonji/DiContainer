{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"concurrencyModel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"동시성 모델","anchor":"%EB%8F%99%EC%8B%9C%EC%84%B1-%EB%AA%A8%EB%8D%B8"},{"type":"heading","level":3,"text":"Actor 기반 안전성","anchor":"Actor-%EA%B8%B0%EB%B0%98-%EC%95%88%EC%A0%84%EC%84%B1"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"내부 상태 변경은 actor의 직렬 실행 큐에서만 발생","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"외부에서의 동시 접근이 자동으로 동기화됨","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"데이터 경쟁 조건 완전 차단"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"text":"Task Group 활용","anchor":"Task-Group-%ED%99%9C%EC%9A%A9"},{"type":"codeListing","code":["\/\/ 내부 구현 예시 (실제 코드)","await withTaskGroup(of: Void.self) { group in","    for module in modules {","        group.addTask { @Sendable in","            await module.register() \/\/ 각 모듈이 병렬 등록","        }","    }","    await group.waitForAll() \/\/ 모든 등록 완료까지 대기","}"],"syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/containerperformanceguide\/concurrencymodel"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide"]]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/concurrencyModel","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"s:11DiContainer0B16PerformanceGuideO16concurrencyModelSSvpZ","symbolKind":"property","title":"concurrencyModel","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"concurrencyModel","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"DiContainer"}],"roleHeading":"Type Property"},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide":{"abstract":[{"text":"Container 성능 특성에 대한 상세 문서","type":"text"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerPerformanceGuide"}],"kind":"symbol","title":"ContainerPerformanceGuide","url":"\/documentation\/dicontainer\/containerperformanceguide","navigatorTitle":[{"kind":"identifier","text":"ContainerPerformanceGuide"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/ContainerPerformanceGuide/concurrencyModel":{"abstract":[],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformanceGuide\/concurrencyModel","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"concurrencyModel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","title":"concurrencyModel","url":"\/documentation\/dicontainer\/containerperformanceguide\/concurrencymodel","type":"topic"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]}}}