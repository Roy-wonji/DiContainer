{"metadata":{"modules":[{"name":"DiContainer"}],"navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"platforms":[{"unavailable":false,"message":"Use UseCaseModuleFactory instead","deprecated":true,"beta":false}],"title":"UseCaseModuleFactoryProtocol","role":"symbol","externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"roleHeading":"Type Alias"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:11DiContainer13ModuleFactoryP","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","kind":"typeIdentifier","text":"ModuleFactory"}],"languages":["swift"],"platforms":["macOS"]}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use UseCaseModuleFactory instead"}]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"title":"UseCaseModuleFactoryProtocol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","deprecated":true,"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","abstract":[]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"type":"topic","role":"article","title":"Module Factory","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","url":"\/documentation\/dicontainer\/modulefactory"}}}