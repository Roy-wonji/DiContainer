{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","interfaceLanguage":"swift"},"metadata":{"title":"UseCaseModuleFactoryProtocol","symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"roleHeading":"Type Alias","role":"symbol","modules":[{"name":"DiContainer"}],"platforms":[{"message":"Use UseCaseModuleFactory instead","unavailable":false,"deprecated":true,"beta":false}],"externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola"},"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:11DiContainer13ModuleFactoryP","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","kind":"typeIdentifier","text":"ModuleFactory"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"deprecationSummary":[{"inlineContent":[{"text":"Use UseCaseModuleFactory instead","type":"text"}],"type":"paragraph"}],"variants":[{"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"url":"\/documentation\/dicontainer\/modulefactory","type":"topic","role":"article","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","title":"Module Factory"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","title":"UseCaseModuleFactoryProtocol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","role":"symbol","deprecated":true,"abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","role":"collection","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic"}}}