{"metadata":{"platforms":[{"unavailable":false,"message":"Use UseCaseModuleFactory instead","deprecated":true,"beta":false}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"title":"UseCaseModuleFactoryProtocol","navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"roleHeading":"Type Alias","symbolKind":"typealias","role":"symbol","externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","modules":[{"name":"DiContainer"}]},"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use UseCaseModuleFactory instead"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:11DiContainer13ModuleFactoryP","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","text":"ModuleFactory","kind":"typeIdentifier"}]}]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"]}],"references":{"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"type":"topic","url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","title":"UseCaseModuleFactoryProtocol","deprecated":true,"navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"abstract":[]},"doc://DiContainer/documentation/DiContainer":{"role":"collection","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"type":"topic","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","url":"\/documentation\/dicontainer\/modulefactory","abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"role":"article","title":"Module Factory"}}}