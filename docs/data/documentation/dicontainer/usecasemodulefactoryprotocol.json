{"sections":[],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use UseCaseModuleFactory instead"}],"type":"paragraph"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol"},"metadata":{"externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"title":"UseCaseModuleFactoryProtocol","role":"symbol","roleHeading":"Type Alias","modules":[{"name":"DiContainer"}],"navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"platforms":[{"deprecated":true,"beta":false,"message":"Use UseCaseModuleFactory instead","unavailable":false}],"symbolKind":"typealias"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:11DiContainer13ModuleFactoryP","kind":"typeIdentifier","text":"ModuleFactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory"}]}],"kind":"declarations"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","title":"Module Factory","role":"article","abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"kind":"article","url":"\/documentation\/dicontainer\/modulefactory","type":"topic"},"doc://DiContainer/documentation/DiContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","title":"DiContainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"kind":"symbol","url":"\/documentation\/dicontainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"role":"symbol","title":"UseCaseModuleFactoryProtocol","abstract":[],"url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","type":"topic","navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"deprecated":true,"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"kind":"symbol"}}}