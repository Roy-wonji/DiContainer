{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"},{"text":" = ","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","text":"ModuleFactory","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer13ModuleFactoryP"}],"languages":["swift"],"platforms":["macOS"]}]}],"metadata":{"title":"UseCaseModuleFactoryProtocol","symbolKind":"typealias","modules":[{"name":"DiContainer"}],"role":"symbol","navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"platforms":[{"deprecated":true,"beta":false,"message":"Use UseCaseModuleFactory instead","unavailable":false}],"externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"roleHeading":"Type Alias"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use UseCaseModuleFactory instead"}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"references":{"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"kind":"symbol","title":"UseCaseModuleFactoryProtocol","deprecated":true,"type":"topic"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"title":"Module Factory","kind":"article","type":"topic","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"url":"\/documentation\/dicontainer\/modulefactory"}}}