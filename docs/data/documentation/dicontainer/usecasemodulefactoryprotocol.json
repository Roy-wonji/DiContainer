{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use UseCaseModuleFactory instead","type":"text"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","preciseIdentifier":"s:11DiContainer13ModuleFactoryP","text":"ModuleFactory"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","interfaceLanguage":"swift"},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"title":"UseCaseModuleFactoryProtocol","externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","roleHeading":"Type Alias","platforms":[{"message":"Use UseCaseModuleFactory instead","beta":false,"unavailable":false,"deprecated":true}],"symbolKind":"typealias","modules":[{"name":"DiContainer"}],"navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"role":"symbol"},"kind":"symbol","references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"kind":"article","type":"topic","url":"\/documentation\/dicontainer\/modulefactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","title":"Module Factory","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"role":"article"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"title":"UseCaseModuleFactoryProtocol","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"role":"symbol","kind":"symbol","url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}]}}}