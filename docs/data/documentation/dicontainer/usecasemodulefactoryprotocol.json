{"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:11DiContainer13ModuleFactoryP","kind":"typeIdentifier","text":"ModuleFactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use UseCaseModuleFactory instead"}],"type":"paragraph"}],"metadata":{"title":"UseCaseModuleFactoryProtocol","modules":[{"name":"DiContainer"}],"roleHeading":"Type Alias","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"symbolKind":"typealias","externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"platforms":[{"unavailable":false,"beta":false,"message":"Use UseCaseModuleFactory instead","deprecated":true}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"url":"\/documentation\/dicontainer\/modulefactory","role":"article","kind":"article","type":"topic","title":"Module Factory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}]},"doc://DiContainer/documentation/DiContainer":{"kind":"symbol","role":"collection","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"kind":"symbol","title":"UseCaseModuleFactoryProtocol","abstract":[],"type":"topic","deprecated":true,"role":"symbol","url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol"}}}