{"variants":[{"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"ModuleFactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer13ModuleFactoryP"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"deprecationSummary":[{"inlineContent":[{"text":"Use UseCaseModuleFactory instead","type":"text"}],"type":"paragraph"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol"},"metadata":{"symbolKind":"typealias","externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"platforms":[{"message":"Use UseCaseModuleFactory instead","deprecated":true,"beta":false,"unavailable":false}],"navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"title":"UseCaseModuleFactoryProtocol","roleHeading":"Type Alias","modules":[{"name":"DiContainer"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","type":"topic","role":"collection"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"role":"article","type":"topic","title":"Module Factory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","url":"\/documentation\/dicontainer\/modulefactory","abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"kind":"article"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"role":"symbol","url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","kind":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","title":"UseCaseModuleFactoryProtocol","deprecated":true,"abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}]}}}