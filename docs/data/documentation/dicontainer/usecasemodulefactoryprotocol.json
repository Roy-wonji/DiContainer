{"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use UseCaseModuleFactory instead"}],"type":"paragraph"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:11DiContainer13ModuleFactoryP","kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","text":"ModuleFactory"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"DiContainer"}],"roleHeading":"Type Alias","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"symbolKind":"typealias","platforms":[{"message":"Use UseCaseModuleFactory instead","deprecated":true,"unavailable":false,"beta":false}],"externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"title":"UseCaseModuleFactoryProtocol"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","role":"collection","kind":"symbol","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","kind":"symbol","navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"title":"UseCaseModuleFactoryProtocol","role":"symbol","deprecated":true},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"kind":"article","title":"Module Factory","type":"topic","url":"\/documentation\/dicontainer\/modulefactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"role":"article"}}}