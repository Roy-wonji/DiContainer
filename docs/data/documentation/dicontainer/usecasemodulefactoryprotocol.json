{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"]}],"metadata":{"symbolKind":"typealias","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"platforms":[{"message":"Use UseCaseModuleFactory instead","deprecated":true,"beta":false,"unavailable":false}],"roleHeading":"Type Alias","title":"UseCaseModuleFactoryProtocol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"ModuleFactory","preciseIdentifier":"s:11DiContainer13ModuleFactoryP","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use UseCaseModuleFactory instead","type":"text"}]}],"references":{"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"title":"Module Factory","role":"article","url":"\/documentation\/dicontainer\/modulefactory","kind":"article","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"role":"symbol","kind":"symbol","url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"deprecated":true,"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactoryProtocol"}],"title":"UseCaseModuleFactoryProtocol"}}}