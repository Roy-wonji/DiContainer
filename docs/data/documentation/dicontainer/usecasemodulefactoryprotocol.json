{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/dicontainer\/usecasemodulefactoryprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","interfaceLanguage":"swift"},"metadata":{"title":"UseCaseModuleFactoryProtocol","role":"symbol","roleHeading":"Type Alias","platforms":[{"unavailable":false,"deprecated":true,"beta":false,"message":"Use UseCaseModuleFactory instead"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer28UseCaseModuleFactoryProtocola","symbolKind":"typealias","navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:11DiContainer13ModuleFactoryP","text":"ModuleFactory","kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory"}],"languages":["swift"]}]}],"sections":[],"deprecationSummary":[{"inlineContent":[{"text":"Use UseCaseModuleFactory instead","type":"text"}],"type":"paragraph"}],"references":{"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","type":"topic","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","title":"DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"role":"collection"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"role":"article","url":"\/documentation\/dicontainer\/modulefactory","type":"topic","title":"Module Factory","kind":"article"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactoryProtocol":{"url":"\/documentation\/dicontainer\/usecasemodulefactoryprotocol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"deprecated":true,"abstract":[],"title":"UseCaseModuleFactoryProtocol","type":"topic","navigatorTitle":[{"text":"UseCaseModuleFactoryProtocol","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactoryProtocol","kind":"symbol","role":"symbol"}}}