{"seeAlsoSections":[{"generated":true,"anchor":"핵심-컴포넌트","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"],"title":"핵심 컴포넌트"}],"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Inject"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"개요","anchor":"%EA%B0%9C%EC%9A%94"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"@Inject"},{"type":"text","text":"는 UnifiedDI 시스템과 통합되어 의존성을 자동으로 해결하고 주입합니다."},{"type":"text","text":" "},{"type":"text","text":"타입 기반과 KeyPath 기반 주입을 모두 지원하며, 옵셔널과 필수 주입을 구분합니다."}]},{"type":"heading","level":2,"text":"핵심 특징","anchor":"%ED%95%B5%EC%8B%AC-%ED%8A%B9%EC%A7%95"},{"type":"heading","level":3,"text":"🎯 자동 해결","anchor":"%F0%9F%8E%AF-%EC%9E%90%EB%8F%99-%ED%95%B4%EA%B2%B0"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"타입 기반"}],"type":"strong"},{"type":"text","text":": 타입만으로 자동 해결"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"KeyPath 기반","type":"text"}],"type":"strong"},{"type":"text","text":": DependencyContainer KeyPath 사용"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"지연 주입","type":"text"}],"type":"strong"},{"text":": 실제 접근 시점까지 해결 지연","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","level":3,"text":"🔒 안전성","anchor":"%F0%9F%94%92-%EC%95%88%EC%A0%84%EC%84%B1"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"옵셔널 주입"}]},{"type":"text","text":": 실패해도 안전하게 처리"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"필수 주입","type":"text"}]},{"text":": 실패 시 명확한 에러 메시지","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"타입 안전성"}]},{"type":"text","text":": 컴파일 타임 타입 검증"}]}]}],"type":"unorderedList"},{"type":"heading","level":3,"text":"⚡ 성능 최적화","anchor":"%E2%9A%A1-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"캐싱","type":"text"}]},{"type":"text","text":": 한 번 해결된 인스턴스 재사용"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"성능 추적"}]},{"text":": 해결 성능 자동 측정 (디버그 빌드)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"메모리 효율","type":"text"}],"type":"strong"},{"text":": 약한 참조로 메모리 누수 방지","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","level":2,"text":"사용 예시","anchor":"%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C"},{"type":"heading","level":3,"text":"기본 사용법","anchor":"%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95"},{"syntax":"swift","type":"codeListing","code":["class UserViewModel {","    @Inject var userService: UserService?              \/\/ 옵셔널 주입","    @Inject var networkService: NetworkService!        \/\/ 필수 주입 (강제 언랩핑)","    @Inject(\\.databaseService) var database: DatabaseService?  \/\/ KeyPath 기반","","    func loadUser() {","        userService?.fetchUser { user in","            \/\/ 사용자 처리","        }","    }","}"]},{"type":"heading","level":3,"text":"고급 사용법","anchor":"%EA%B3%A0%EA%B8%89-%EC%82%AC%EC%9A%A9%EB%B2%95"},{"syntax":"swift","type":"codeListing","code":["class AdvancedService {","    @Inject(fallback: { MockAnalytics() })","    var analytics: AnalyticsService                      \/\/ 폴백 제공","","    @Inject(cached: true)","    var expensiveService: ExpensiveService              \/\/ 캐싱 활성화","","    @Inject(tracking: true)","    var monitoredService: MonitoredService              \/\/ 성능 추적","}"]},{"type":"heading","level":2,"text":"성능 고려사항","anchor":"%EC%84%B1%EB%8A%A5-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"첫 번째 접근 시에만 해결 비용 발생"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"캐싱 활성화 시 메모리 사용량 증가","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"디버그 빌드에서 성능 추적 오버헤드 존재"}]}]}],"type":"unorderedList"},{"text":"마이그레이션","type":"heading","level":2,"anchor":"%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98"},{"text":"기존 DI 시스템에서","type":"heading","level":3,"anchor":"%EA%B8%B0%EC%A1%B4-DI-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%97%90%EC%84%9C"},{"syntax":"swift","code":["\/\/ Before","let userService = DI.resolve(\\.userService)","","\/\/ After","@Inject(\\.userService) var userService: UserService?"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/dicontainer\/inject"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Inject\/init(_:fallback:cached:tracking:)-8adkq","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject\/init(_:fallback:cached:tracking:)-qxq1"],"title":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Inject\/wrappedValue"],"title":"Instance Properties"}],"abstract":[{"type":"text","text":"의존성을 자동으로 해결하여 주입하는 프로퍼티 래퍼입니다."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Structure","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer6InjectV","symbolKind":"struct","role":"symbol","navigatorTitle":[{"text":"Inject","kind":"identifier"}],"title":"Inject","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inject","kind":"identifier"}]},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","url":"\/documentation\/dicontainer\/unifieddi","role":"article","abstract":[{"type":"text","text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: "},{"type":"codeVoice","code":"UnifiedDI"},{"type":"text","text":"와 "},{"type":"codeVoice","code":"DI"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"title":"통합 DI 시스템 - UnifiedDI vs DI","kind":"article"},"doc://DiContainer/documentation/DiContainer/Inject":{"role":"symbol","navigatorTitle":[{"text":"Inject","kind":"identifier"}],"abstract":[{"type":"text","text":"의존성을 자동으로 해결하여 주입하는 프로퍼티 래퍼입니다."}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inject","kind":"identifier"}],"type":"topic","title":"Inject","url":"\/documentation\/dicontainer\/inject"},"doc://DiContainer/documentation/DiContainer/Container":{"abstract":[],"role":"symbol","kind":"symbol","title":"Container","type":"topic","url":"\/documentation\/dicontainer\/container","navigatorTitle":[{"kind":"identifier","text":"Container"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}]},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","title":"RequiredInject","navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/requiredinject","type":"topic","abstract":[{"text":"의존성을 필수적으로 해결하여 주입하는 프로퍼티 래퍼입니다.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"type":"topic","url":"\/documentation\/dicontainer\/dependencycontainer","title":"DependencyContainer","role":"symbol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer"},"doc://DiContainer/documentation/DiContainer/ContainerUsage":{"role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","title":"Container Usage","kind":"article","type":"topic","abstract":[{"text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다.","type":"text"}],"url":"\/documentation\/dicontainer\/containerusage"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic","role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","abstract":[{"type":"text","text":"A global container of factories used across the application."}],"type":"topic","role":"symbol","url":"\/documentation\/dicontainer\/factoryvalues","navigatorTitle":[{"text":"FactoryValues","kind":"identifier"}],"title":"FactoryValues"},"doc://DiContainer/documentation/DiContainer/DI":{"type":"topic","url":"\/documentation\/dicontainer\/di","title":"DI","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"DI","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DI","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","abstract":[{"type":"text","text":"단순화된 DI API - 사용자 혼란을 줄이기 위해 핵심 패턴만 제공"}]},"doc://DiContainer/documentation/DiContainer/Factory":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"kind":"symbol","title":"Factory","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","type":"topic","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues"},{"text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다.","type":"text"}],"url":"\/documentation\/dicontainer\/factory"},"doc://DiContainer/documentation/DiContainer/Inject/init(_:fallback:cached:tracking:)-qxq1":{"url":"\/documentation\/dicontainer\/inject\/init(_:fallback:cached:tracking:)-qxq1","kind":"symbol","title":"init(_:fallback:cached:tracking:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject\/init(_:fallback:cached:tracking:)-qxq1","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"fallback","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"cached","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tracking"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"타입 기반 의존성 주입을 위한 초기화"}],"role":"symbol","type":"topic"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"url":"\/documentation\/dicontainer\/appdicontainer","title":"AppDIContainer","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","kind":"symbol","navigatorTitle":[{"text":"AppDIContainer","kind":"identifier"}],"abstract":[],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/Module":{"kind":"symbol","url":"\/documentation\/dicontainer\/module","title":"Module","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Module"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","abstract":[{"code":"Module","type":"codeVoice"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"inlineContent":[{"text":"단일 모듈","type":"text"}],"type":"strong"},{"type":"text","text":"을 나타내는 구조체입니다."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Module"}]},"doc://DiContainer/documentation/DiContainer/ContainerPerformance":{"url":"\/documentation\/dicontainer\/containerperformance","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","title":"Container Performance","abstract":[{"type":"text","text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다."}],"type":"topic","role":"article","kind":"article"},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"role":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GlobalUnifiedRegistry","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"글로벌 통합 Registry 인스턴스"},{"type":"text","text":" "},{"type":"text","text":"DependencyContainer.live에서 내부적으로 사용"}],"kind":"symbol","title":"GlobalUnifiedRegistry","url":"\/documentation\/dicontainer\/globalunifiedregistry"},"doc://DiContainer/documentation/DiContainer/Inject/init(_:fallback:cached:tracking:)-8adkq":{"title":"init(_:fallback:cached:tracking:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject\/init(_:fallback:cached:tracking:)-8adkq","kind":"symbol","url":"\/documentation\/dicontainer\/inject\/init(_:fallback:cached:tracking:)-8adkq","abstract":[{"text":"KeyPath 기반 의존성 주입을 위한 초기화","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"DependencyContainer","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer010DependencyB0C"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"fallback","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"cached","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tracking","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://DiContainer/documentation/DiContainer/Inject/wrappedValue":{"title":"wrappedValue","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject\/wrappedValue","kind":"symbol","url":"\/documentation\/dicontainer\/inject\/wrappedvalue","type":"topic","abstract":[{"text":"의존성을 해결하여 반환합니다","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}}}