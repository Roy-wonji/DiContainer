{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox\/unwrap()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/valuebox\/unwrap()"]}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","title":"unwrap()","externalID":"s:11DiContainer15UnifiedRegistryC8ValueBoxV6unwrapxSgylF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","modules":[{"name":"DiContainer"}]},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"]]},"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueBox"}],"role":"symbol","title":"UnifiedRegistry.ValueBox","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","kind":"symbol","abstract":[{"type":"text","text":"Type-erased, sendable box for storing values safely across concurrency boundaries"}]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox/unwrap()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","title":"unwrap()","type":"topic","url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox\/unwrap()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox\/unwrap()","kind":"symbol","abstract":[]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"role":"symbol","title":"UnifiedRegistry","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}],"url":"\/documentation\/dicontainer\/unifiedregistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","kind":"symbol","abstract":[]},"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"}}}