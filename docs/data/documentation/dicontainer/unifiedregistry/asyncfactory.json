{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncFactory","kind":"identifier"},{"text":" = () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","text":"UnifiedRegistry","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","text":"ValueBox","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/AsyncFactory","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"metadata":{"symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncFactory","kind":"identifier"}],"roleHeading":"Type Alias","navigatorTitle":[{"text":"AsyncFactory","kind":"identifier"}],"externalID":"s:11DiContainer15UnifiedRegistryC12AsyncFactorya","title":"UnifiedRegistry.AsyncFactory","modules":[{"name":"DiContainer"}],"role":"symbol"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/dicontainer\/unifiedregistry\/asyncfactory"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/AsyncFactory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/AsyncFactory","navigatorTitle":[{"text":"AsyncFactory","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/dicontainer\/unifiedregistry\/asyncfactory","title":"UnifiedRegistry.AsyncFactory","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncFactory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer":{"abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","title":"DiContainer","type":"topic","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}],"kind":"symbol","abstract":[],"title":"UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","role":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"title":"UnifiedRegistry.ValueBox","navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","kind":"symbol","abstract":[{"text":"Type-erased, sendable box for storing values safely across concurrency boundaries","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ValueBox","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"}}}