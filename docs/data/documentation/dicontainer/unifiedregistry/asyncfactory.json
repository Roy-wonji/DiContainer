{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncFactory","kind":"identifier"},{"text":" = () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry","kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","text":"ValueBox","kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/AsyncFactory","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncFactory"}],"modules":[{"name":"DiContainer"}],"role":"symbol","navigatorTitle":[{"text":"AsyncFactory","kind":"identifier"}],"title":"UnifiedRegistry.AsyncFactory","symbolKind":"typealias","externalID":"s:11DiContainer15UnifiedRegistryC12AsyncFactorya","roleHeading":"Type Alias"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/asyncfactory"]}],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"abstract":[],"role":"symbol","navigatorTitle":[{"text":"UnifiedRegistry","kind":"identifier"}],"kind":"symbol","title":"UnifiedRegistry","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnifiedRegistry","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"title":"UnifiedRegistry.ValueBox","type":"topic","abstract":[{"text":"Type-erased, sendable box for storing values safely across concurrency boundaries","type":"text"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueBox","kind":"identifier"}],"navigatorTitle":[{"text":"ValueBox","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/AsyncFactory":{"title":"UnifiedRegistry.AsyncFactory","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncFactory"}],"abstract":[],"url":"\/documentation\/dicontainer\/unifiedregistry\/asyncfactory","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncFactory"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/AsyncFactory","type":"topic"}}}