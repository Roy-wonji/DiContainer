{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncFactory"},{"kind":"text","text":" = () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier","text":"ValueBox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/asyncfactory"]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/AsyncFactory","interfaceLanguage":"swift"},"metadata":{"symbolKind":"typealias","externalID":"s:11DiContainer15UnifiedRegistryC12AsyncFactorya","role":"symbol","title":"UnifiedRegistry.AsyncFactory","roleHeading":"Type Alias","modules":[{"name":"DiContainer"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncFactory","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncFactory","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/AsyncFactory":{"title":"UnifiedRegistry.AsyncFactory","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncFactory"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncFactory"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/AsyncFactory","kind":"symbol","url":"\/documentation\/dicontainer\/unifiedregistry\/asyncfactory"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueBox"}],"role":"symbol","title":"UnifiedRegistry.ValueBox","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","kind":"symbol","abstract":[{"type":"text","text":"Type-erased, sendable box for storing values safely across concurrency boundaries"}]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"role":"symbol","title":"UnifiedRegistry","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}],"url":"\/documentation\/dicontainer\/unifiedregistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","kind":"symbol","abstract":[]},"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"}}}