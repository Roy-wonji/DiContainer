{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/asyncfactory"]}],"metadata":{"modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer15UnifiedRegistryC12AsyncFactorya","roleHeading":"Type Alias","title":"UnifiedRegistry.AsyncFactory","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncFactory"}],"navigatorTitle":[{"text":"AsyncFactory","kind":"identifier"}],"role":"symbol","symbolKind":"typealias"},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/AsyncFactory","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncFactory"},{"kind":"text","text":" = () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"}]}],"kind":"declarations"}],"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","title":"UnifiedRegistry.ValueBox","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueBox"}],"navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"abstract":[{"type":"text","text":"Type-erased, sendable box for storing values safely across concurrency boundaries"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"url":"\/documentation\/dicontainer\/unifiedregistry","kind":"symbol","type":"topic","navigatorTitle":[{"text":"UnifiedRegistry","kind":"identifier"}],"title":"UnifiedRegistry","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","fragments":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnifiedRegistry"}],"abstract":[]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/AsyncFactory":{"title":"UnifiedRegistry.AsyncFactory","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncFactory","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncFactory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/AsyncFactory","role":"symbol","abstract":[],"url":"\/documentation\/dicontainer\/unifiedregistry\/asyncfactory","type":"topic"}}}