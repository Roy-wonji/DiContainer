{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/dicontainer\/unifiedregistry\/resolveanyasyncbox(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyAsyncBox","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"UnifiedRegistry","kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC"},{"text":".","kind":"text"},{"text":"ValueBox","kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"해결할 런타임 타입"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"ValueBox(@unchecked Sendable)에 담긴 값 (없으면 nil)","type":"text"}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyAsyncBox","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","text":"ValueBox","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"resolveAnyAsyncBox(_:)","externalID":"s:11DiContainer15UnifiedRegistryC18resolveAnyAsyncBoxyAC05ValueH0VSgypXpYaF","modules":[{"name":"DiContainer"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyAsyncBox(_:)"},"abstract":[{"type":"text","text":"비동기 컨텍스트에서 런타임 타입(Any.Type)을 Sendable 박스로 해결합니다."}],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"kind":"symbol","title":"UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry","role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"title":"UnifiedRegistry.ValueBox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","type":"topic","abstract":[{"type":"text","text":"Type-erased, sendable box for storing values safely across concurrency boundaries"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","navigatorTitle":[{"text":"ValueBox","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueBox","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/resolveAnyAsyncBox(_:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/dicontainer\/unifiedregistry\/resolveanyasyncbox(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyAsyncBox","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"UnifiedRegistry","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC"},{"text":".","kind":"text"},{"text":"ValueBox","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyAsyncBox(_:)","abstract":[{"text":"비동기 컨텍스트에서 런타임 타입(Any.Type)을 Sendable 박스로 해결합니다.","type":"text"}],"type":"topic","title":"resolveAnyAsyncBox(_:)"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}