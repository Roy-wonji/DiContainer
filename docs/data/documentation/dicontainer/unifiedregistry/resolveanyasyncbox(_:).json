{"abstract":[{"type":"text","text":"비동기 컨텍스트에서 런타임 타입(Any.Type)을 Sendable 박스로 해결합니다."}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyAsyncBox","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"UnifiedRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ValueBox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"해결할 런타임 타입","type":"text"}]}],"name":"type"}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"ValueBox(@unchecked Sendable)에 담긴 값 (없으면 nil)"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/dicontainer\/unifiedregistry\/resolveanyasyncbox(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyAsyncBox(_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"resolveAnyAsyncBox(_:)","symbolKind":"method","externalID":"s:11DiContainer15UnifiedRegistryC18resolveAnyAsyncBoxyAC05ValueH0VSgypXpYaF","role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAnyAsyncBox"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier","text":"UnifiedRegistry"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier","text":"ValueBox"},{"kind":"text","text":"?"}],"modules":[{"name":"DiContainer"}]},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/resolveAnyAsyncBox(_:)":{"url":"\/documentation\/dicontainer\/unifiedregistry\/resolveanyasyncbox(_:)","abstract":[{"type":"text","text":"비동기 컨텍스트에서 런타임 타입(Any.Type)을 Sendable 박스로 해결합니다."}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyAsyncBox(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAnyAsyncBox"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV"},{"kind":"text","text":"?"}],"role":"symbol","title":"resolveAnyAsyncBox(_:)","kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"title":"UnifiedRegistry.ValueBox","type":"topic","abstract":[{"text":"Type-erased, sendable box for storing values safely across concurrency boundaries","type":"text"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueBox","kind":"identifier"}],"navigatorTitle":[{"text":"ValueBox","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"abstract":[],"role":"symbol","navigatorTitle":[{"text":"UnifiedRegistry","kind":"identifier"}],"kind":"symbol","title":"UnifiedRegistry","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnifiedRegistry","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry"}}}