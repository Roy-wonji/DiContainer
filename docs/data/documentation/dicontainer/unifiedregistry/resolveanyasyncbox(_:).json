{"metadata":{"symbolKind":"method","externalID":"s:11DiContainer15UnifiedRegistryC18resolveAnyAsyncBoxyAC05ValueH0VSgypXpYaF","modules":[{"name":"DiContainer"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyAsyncBox","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","title":"resolveAnyAsyncBox(_:)"},"abstract":[{"text":"비동기 컨텍스트에서 런타임 타입(Any.Type)을 Sendable 박스로 해결합니다.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyAsyncBox","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"UnifiedRegistry","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"},{"text":".","kind":"text"},{"text":"ValueBox","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"해결할 런타임 타입"}]}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ValueBox(@unchecked Sendable)에 담긴 값 (없으면 nil)"}]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/resolveanyasyncbox(_:)"]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyAsyncBox(_:)","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/resolveAnyAsyncBox(_:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAnyAsyncBox"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","text":"ValueBox"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"비동기 컨텍스트에서 런타임 타입(Any.Type)을 Sendable 박스로 해결합니다."}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyAsyncBox(_:)","title":"resolveAnyAsyncBox(_:)","url":"\/documentation\/dicontainer\/unifiedregistry\/resolveanyasyncbox(_:)"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueBox","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Type-erased, sendable box for storing values safely across concurrency boundaries"}],"role":"symbol","title":"UnifiedRegistry.ValueBox","navigatorTitle":[{"text":"ValueBox","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic","role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"type":"topic","abstract":[],"kind":"symbol","title":"UnifiedRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry","navigatorTitle":[{"text":"UnifiedRegistry","kind":"identifier"}],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnifiedRegistry","kind":"identifier"}],"role":"symbol"}}}