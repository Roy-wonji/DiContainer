{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncFactory","kind":"identifier"},{"text":" = () -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","text":"ValueBox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Factory closure that produces instances","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/syncfactory"]}],"sections":[],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory","interfaceLanguage":"swift"},"metadata":{"title":"UnifiedRegistry.SyncFactory","modules":[{"name":"DiContainer"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncFactory","kind":"identifier"}],"role":"symbol","externalID":"s:11DiContainer15UnifiedRegistryC11SyncFactorya","navigatorTitle":[{"text":"SyncFactory","kind":"identifier"}],"roleHeading":"Type Alias","symbolKind":"typealias"},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","role":"collection","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"title":"UnifiedRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueBox"}],"abstract":[{"text":"Type-erased, sendable box for storing values safely across concurrency boundaries","type":"text"}],"title":"UnifiedRegistry.ValueBox","navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/SyncFactory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory","title":"UnifiedRegistry.SyncFactory","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncFactory"}],"navigatorTitle":[{"kind":"identifier","text":"SyncFactory"}],"kind":"symbol","url":"\/documentation\/dicontainer\/unifiedregistry\/syncfactory","role":"symbol","abstract":[{"type":"text","text":"Factory closure that produces instances"}],"type":"topic"}}}