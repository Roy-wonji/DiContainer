{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Type Alias","externalID":"s:11DiContainer15UnifiedRegistryC11SyncFactorya","symbolKind":"typealias","navigatorTitle":[{"text":"SyncFactory","kind":"identifier"}],"title":"UnifiedRegistry.SyncFactory","role":"symbol","modules":[{"name":"DiContainer"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncFactory","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/dicontainer\/unifiedregistry\/syncfactory"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Factory closure that produces instances"}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncFactory"},{"kind":"text","text":" = () -> "},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier","text":"UnifiedRegistry"},{"kind":"text","text":"."},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier","text":"ValueBox"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"abstract":[{"type":"text","text":"Type-erased, sendable box for storing values safely across concurrency boundaries"}],"title":"UnifiedRegistry.ValueBox","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueBox"}],"type":"topic","kind":"symbol","url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/SyncFactory":{"type":"topic","kind":"symbol","title":"UnifiedRegistry.SyncFactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory","navigatorTitle":[{"kind":"identifier","text":"SyncFactory"}],"role":"symbol","url":"\/documentation\/dicontainer\/unifiedregistry\/syncfactory","abstract":[{"text":"Factory closure that produces instances","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncFactory"}]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","kind":"symbol","title":"UnifiedRegistry","navigatorTitle":[{"text":"UnifiedRegistry","kind":"identifier"}],"url":"\/documentation\/dicontainer\/unifiedregistry","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnifiedRegistry","kind":"identifier"}],"abstract":[]},"doc://DiContainer/documentation/DiContainer":{"type":"topic","title":"DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"role":"collection","url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}