{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory"},"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyncFactory"}],"externalID":"s:11DiContainer15UnifiedRegistryC11SyncFactorya","symbolKind":"typealias","navigatorTitle":[{"text":"SyncFactory","kind":"identifier"}],"role":"symbol","title":"UnifiedRegistry.SyncFactory","modules":[{"name":"DiContainer"}],"roleHeading":"Type Alias"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Factory closure that produces instances"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncFactory","kind":"identifier"},{"text":" = () -> ","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","text":"UnifiedRegistry","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC"},{"text":".","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","text":"ValueBox","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV"}]}]}],"variants":[{"paths":["\/documentation\/dicontainer\/unifiedregistry\/syncfactory"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"title":"UnifiedRegistry.ValueBox","navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","kind":"symbol","abstract":[{"text":"Type-erased, sendable box for storing values safely across concurrency boundaries","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ValueBox","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/SyncFactory":{"title":"UnifiedRegistry.SyncFactory","navigatorTitle":[{"text":"SyncFactory","kind":"identifier"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/syncfactory","kind":"symbol","abstract":[{"text":"Factory closure that produces instances","type":"text"}],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncFactory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory"},"doc://DiContainer/documentation/DiContainer":{"abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","title":"DiContainer","type":"topic","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}],"kind":"symbol","abstract":[],"title":"UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","role":"symbol"}}}