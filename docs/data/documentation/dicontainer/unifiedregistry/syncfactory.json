{"metadata":{"role":"symbol","roleHeading":"Type Alias","externalID":"s:11DiContainer15UnifiedRegistryC11SyncFactorya","navigatorTitle":[{"kind":"identifier","text":"SyncFactory"}],"modules":[{"name":"DiContainer"}],"symbolKind":"typealias","title":"UnifiedRegistry.SyncFactory","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncFactory"}]},"abstract":[{"type":"text","text":"Factory closure that produces instances"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/syncfactory"]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncFactory","kind":"identifier"},{"text":" = () -> ","kind":"text"},{"text":"UnifiedRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ValueBox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier"}]}]}],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Type-erased, sendable box for storing values safely across concurrency boundaries"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueBox"}],"title":"UnifiedRegistry.ValueBox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","type":"topic","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","title":"DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"role":"collection"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"type":"topic","kind":"symbol","title":"UnifiedRegistry","role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"abstract":[],"url":"\/documentation\/dicontainer\/unifiedregistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/SyncFactory":{"url":"\/documentation\/dicontainer\/unifiedregistry\/syncfactory","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"SyncFactory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory","title":"UnifiedRegistry.SyncFactory","abstract":[{"type":"text","text":"Factory closure that produces instances"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncFactory","kind":"identifier"}]}}}