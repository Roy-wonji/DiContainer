{"metadata":{"roleHeading":"Type Alias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncFactory","kind":"identifier"}],"role":"symbol","symbolKind":"typealias","modules":[{"name":"DiContainer"}],"navigatorTitle":[{"kind":"identifier","text":"SyncFactory"}],"externalID":"s:11DiContainer15UnifiedRegistryC11SyncFactorya","title":"UnifiedRegistry.SyncFactory"},"abstract":[{"text":"Factory closure that produces instances","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncFactory","kind":"identifier"},{"text":" = () -> ","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","text":"ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/syncfactory"]}],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/SyncFactory":{"type":"topic","title":"UnifiedRegistry.SyncFactory","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncFactory"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyncFactory"}],"abstract":[{"type":"text","text":"Factory closure that produces instances"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/syncfactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/SyncFactory"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"abstract":[],"role":"symbol","navigatorTitle":[{"text":"UnifiedRegistry","kind":"identifier"}],"kind":"symbol","title":"UnifiedRegistry","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnifiedRegistry","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"title":"UnifiedRegistry.ValueBox","type":"topic","abstract":[{"text":"Type-erased, sendable box for storing values safely across concurrency boundaries","type":"text"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueBox","kind":"identifier"}],"navigatorTitle":[{"text":"ValueBox","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]}}}