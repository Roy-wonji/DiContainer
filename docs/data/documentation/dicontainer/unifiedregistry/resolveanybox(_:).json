{"abstract":[{"text":"런타임 타입(Any.Type)으로 의존성을 해결하고, Sendable 박스로 반환합니다.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAnyBox"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","text":"ValueBox"},{"kind":"text","text":"?"}],"platforms":["macOS"]}]},{"parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"해결할 런타임 타입","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"ValueBox(@unchecked Sendable)에 담긴 값 (없으면 nil)","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","roleHeading":"Instance Method","externalID":"s:11DiContainer15UnifiedRegistryC13resolveAnyBoxyAC05ValueG0VSgypXpF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyBox","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","text":"ValueBox","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"modules":[{"name":"DiContainer"}],"title":"resolveAnyBox(_:)","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/resolveanybox(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyBox(_:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/resolveAnyBox(_:)":{"abstract":[{"text":"런타임 타입(Any.Type)으로 의존성을 해결하고, Sendable 박스로 반환합니다.","type":"text"}],"title":"resolveAnyBox(_:)","url":"\/documentation\/dicontainer\/unifiedregistry\/resolveanybox(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAnyBox"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyBox(_:)","type":"topic"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","kind":"symbol","title":"UnifiedRegistry","navigatorTitle":[{"text":"UnifiedRegistry","kind":"identifier"}],"url":"\/documentation\/dicontainer\/unifiedregistry","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnifiedRegistry","kind":"identifier"}],"abstract":[]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"abstract":[{"type":"text","text":"Type-erased, sendable box for storing values safely across concurrency boundaries"}],"title":"UnifiedRegistry.ValueBox","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueBox"}],"type":"topic","kind":"symbol","url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","title":"DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"role":"collection","url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}