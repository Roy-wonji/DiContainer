{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyBox","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry","kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"},{"text":".","kind":"text"},{"text":"ValueBox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV"},{"text":"?","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"해결할 런타임 타입"}]}],"name":"type"}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"ValueBox(@unchecked Sendable)에 담긴 값 (없으면 nil)","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyBox(_:)"},"abstract":[{"text":"런타임 타입(Any.Type)으로 의존성을 해결하고, Sendable 박스로 반환합니다.","type":"text"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/resolveanybox(_:)"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"metadata":{"role":"symbol","title":"resolveAnyBox(_:)","modules":[{"name":"DiContainer"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAnyBox"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier","text":"UnifiedRegistry"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier","text":"ValueBox"},{"kind":"text","text":"?"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:11DiContainer15UnifiedRegistryC13resolveAnyBoxyAC05ValueG0VSgypXpF"},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/resolveAnyBox(_:)":{"title":"resolveAnyBox(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyBox","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) -> ","kind":"text"},{"text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ValueBox","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyBox(_:)","type":"topic","abstract":[{"text":"런타임 타입(Any.Type)으로 의존성을 해결하고, Sendable 박스로 반환합니다.","type":"text"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/resolveanybox(_:)","kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"role":"symbol","abstract":[{"text":"Type-erased, sendable box for storing values safely across concurrency boundaries","type":"text"}],"title":"UnifiedRegistry.ValueBox","kind":"symbol","url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueBox","kind":"identifier"}],"navigatorTitle":[{"text":"ValueBox","kind":"identifier"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"abstract":[],"role":"symbol","title":"UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry","navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","kind":"symbol"}}}