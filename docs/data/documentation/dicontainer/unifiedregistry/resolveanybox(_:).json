{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyBox(_:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAnyBox","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier","text":"UnifiedRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","kind":"typeIdentifier","text":"ValueBox","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"해결할 런타임 타입"}]}]}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"ValueBox(@unchecked Sendable)에 담긴 값 (없으면 nil)"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"런타임 타입(Any.Type)으로 의존성을 해결하고, Sendable 박스로 반환합니다.","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/resolveanybox(_:)"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAnyBox"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","text":"ValueBox","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","modules":[{"name":"DiContainer"}],"title":"resolveAnyBox(_:)","symbolKind":"method","externalID":"s:11DiContainer15UnifiedRegistryC13resolveAnyBoxyAC05ValueG0VSgypXpF","roleHeading":"Instance Method"},"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"title":"UnifiedRegistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","role":"collection","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/resolveAnyBox(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAnyBox"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC8ValueBoxV","text":"ValueBox","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAnyBox(_:)","abstract":[{"text":"런타임 타입(Any.Type)으로 의존성을 해결하고, Sendable 박스로 반환합니다.","type":"text"}],"type":"topic","kind":"symbol","title":"resolveAnyBox(_:)","url":"\/documentation\/dicontainer\/unifiedregistry\/resolveanybox(_:)"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/ValueBox":{"type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/ValueBox","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueBox"}],"abstract":[{"text":"Type-erased, sendable box for storing values safely across concurrency boundaries","type":"text"}],"title":"UnifiedRegistry.ValueBox","navigatorTitle":[{"kind":"identifier","text":"ValueBox"}],"url":"\/documentation\/dicontainer\/unifiedregistry\/valuebox"}}}