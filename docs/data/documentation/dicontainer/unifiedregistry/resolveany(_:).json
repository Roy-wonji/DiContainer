{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/resolveany(_:)"]}],"metadata":{"externalID":"s:11DiContainer15UnifiedRegistryC10resolveAnyyypSgypXpF","role":"symbol","modules":[{"name":"DiContainer"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAny","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"title":"resolveAny(_:)","symbolKind":"method","roleHeading":"Instance Method"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAny(_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAny","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"해결할 런타임 타입","type":"text"}]}],"name":"type"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"해결된 인스턴스 (없으면 nil)"}]}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"런타임 타입(Any.Type)으로 의존성을 해결합니다.","type":"text"}],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/resolveAny(_:)":{"url":"\/documentation\/dicontainer\/unifiedregistry\/resolveany(_:)","title":"resolveAny(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAny"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAny(_:)","abstract":[{"type":"text","text":"런타임 타입(Any.Type)으로 의존성을 해결합니다."}]},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"kind":"symbol","title":"UnifiedRegistry","url":"\/documentation\/dicontainer\/unifiedregistry","role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"UnifiedRegistry"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}