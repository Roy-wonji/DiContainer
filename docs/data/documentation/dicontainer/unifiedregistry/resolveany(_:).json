{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifiedregistry\/resolveany(_:)"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry"]]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveAny","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"해결할 런타임 타입"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"해결된 인스턴스 (없으면 nil)"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"런타임 타입(Any.Type)으로 의존성을 해결합니다."}],"metadata":{"title":"resolveAny(_:)","externalID":"s:11DiContainer15UnifiedRegistryC10resolveAnyyypSgypXpF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAny"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","modules":[{"name":"DiContainer"}],"role":"symbol","symbolKind":"method"},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAny(_:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/UnifiedRegistry/resolveAny(_:)":{"role":"symbol","title":"resolveAny(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry\/resolveAny(_:)","type":"topic","url":"\/documentation\/dicontainer\/unifiedregistry\/resolveany(_:)","kind":"symbol","abstract":[{"text":"런타임 타입(Any.Type)으로 의존성을 해결합니다.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveAny"},{"kind":"text","text":"(any "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}]},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","role":"collection","kind":"symbol","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/UnifiedRegistry":{"url":"\/documentation\/dicontainer\/unifiedregistry","navigatorTitle":[{"text":"UnifiedRegistry","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedRegistry","title":"UnifiedRegistry","role":"symbol","abstract":[],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnifiedRegistry"}]}}}