{"metadata":{"title":"resolveThrows(_:)","modules":[{"name":"DiContainer"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolveThrows"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","externalID":"s:11DiContainer16DIActorGlobalAPIO13resolveThrowsyxxmYaKs8SendableRzlFZ","roleHeading":"Type Method","symbolKind":"method"},"kind":"symbol","abstract":[{"type":"text","text":"Resolve with throwing using DIActor"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"resolveThrows","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","role":"collection","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Global API for DIActor to provide seamless async\/await interface","type":"text"}],"title":"DIActorGlobalAPI","url":"\/documentation\/dicontainer\/diactorglobalapi","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DIActorGlobalAPI"}],"navigatorTitle":[{"kind":"identifier","text":"DIActorGlobalAPI"}]},"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI/resolveThrows(_:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)","title":"resolveThrows(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveThrows"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","url":"\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)","role":"symbol","abstract":[{"text":"Resolve with throwing using DIActor","type":"text"}],"type":"topic"}}}