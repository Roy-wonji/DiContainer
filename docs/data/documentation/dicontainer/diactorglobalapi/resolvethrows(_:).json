{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI"]]},"metadata":{"symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolveThrows"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"externalID":"s:11DiContainer16DIActorGlobalAPIO13resolveThrowsyxxmYaKs8SendableRzlFZ","modules":[{"name":"DiContainer"}],"title":"resolveThrows(_:)","role":"symbol","roleHeading":"Type Method"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)"},"abstract":[{"text":"Resolve with throwing using DIActor","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveThrows"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI/resolveThrows(_:)":{"url":"\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)","kind":"symbol","type":"topic","title":"resolveThrows(_:)","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolveThrows"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"text":"Resolve with throwing using DIActor","type":"text"}]},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI":{"url":"\/documentation\/dicontainer\/diactorglobalapi","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DIActorGlobalAPI"}],"title":"DIActorGlobalAPI","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActorGlobalAPI"}],"abstract":[{"type":"text","text":"Global API for DIActor to provide seamless async\/await interface"}]}}}