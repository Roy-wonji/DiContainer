{"metadata":{"title":"resolveThrows(_:)","externalID":"s:11DiContainer16DIActorGlobalAPIO13resolveThrowsyxxmYaKs8SendableRzlFZ","roleHeading":"Type Method","modules":[{"name":"DiContainer"}],"role":"symbol","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI"]]},"abstract":[{"text":"Resolve with throwing using DIActor","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI":{"type":"topic","abstract":[{"type":"text","text":"Global API for DIActor to provide seamless async\/await interface"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActorGlobalAPI","kind":"identifier"}],"url":"\/documentation\/dicontainer\/diactorglobalapi","title":"DIActorGlobalAPI","navigatorTitle":[{"text":"DIActorGlobalAPI","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","role":"collection","kind":"symbol","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI/resolveThrows(_:)":{"title":"resolveThrows(_:)","url":"\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveThrows"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","abstract":[{"type":"text","text":"Resolve with throwing using DIActor"}]}}}