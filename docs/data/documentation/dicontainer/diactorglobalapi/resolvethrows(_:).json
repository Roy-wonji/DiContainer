{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)"},"metadata":{"roleHeading":"Type Method","symbolKind":"method","title":"resolveThrows(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"externalID":"s:11DiContainer16DIActorGlobalAPIO13resolveThrowsyxxmYaKs8SendableRzlFZ","modules":[{"name":"DiContainer"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI"]]},"kind":"symbol","abstract":[{"text":"Resolve with throwing using DIActor","type":"text"}],"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic","role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI":{"title":"DIActorGlobalAPI","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActorGlobalAPI","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI","navigatorTitle":[{"text":"DIActorGlobalAPI","kind":"identifier"}],"abstract":[{"type":"text","text":"Global API for DIActor to provide seamless async\/await interface"}],"type":"topic","url":"\/documentation\/dicontainer\/diactorglobalapi","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI/resolveThrows(_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)","type":"topic","abstract":[{"type":"text","text":"Resolve with throwing using DIActor"}],"url":"\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)","title":"resolveThrows(_:)","role":"symbol"}}}