{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Resolve with throwing using DIActor"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveThrows"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]}]}],"variants":[{"paths":["\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer16DIActorGlobalAPIO13resolveThrowsyxxmYaKs8SendableRzlFZ","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolveThrows"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"roleHeading":"Type Method","title":"resolveThrows(_:)"},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI"]]},"references":{"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI/resolveThrows(_:)":{"title":"resolveThrows(_:)","url":"\/documentation\/dicontainer\/diactorglobalapi\/resolvethrows(_:)","abstract":[{"text":"Resolve with throwing using DIActor","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI\/resolveThrows(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://DiContainer/documentation/DiContainer/DIActorGlobalAPI":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActorGlobalAPI"}],"role":"symbol","title":"DIActorGlobalAPI","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DIActorGlobalAPI"}],"url":"\/documentation\/dicontainer\/diactorglobalapi","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorGlobalAPI","kind":"symbol","abstract":[{"type":"text","text":"Global API for DIActor to provide seamless async\/await interface"}]},"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"}}}