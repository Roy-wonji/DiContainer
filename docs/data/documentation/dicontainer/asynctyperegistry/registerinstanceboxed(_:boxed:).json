{"abstract":[{"type":"text","text":"Register a pre-boxed singleton instance (avoid sending non-Sendable across boundary)"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerInstanceBoxed","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"boxed","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry","text":"AsyncTypeRegistry","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC"},{"text":".","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/AnySendableBox","text":"AnySendableBox","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC14AnySendableBoxV"},{"text":")","kind":"text"}],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry"]]},"variants":[{"paths":["\/documentation\/dicontainer\/asynctyperegistry\/registerinstanceboxed(_:boxed:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"registerInstanceBoxed(_:boxed:)","symbolKind":"method","externalID":"s:11DiContainer17AsyncTypeRegistryC21registerInstanceBoxed_5boxedyxm_AC14AnySendableBoxVtlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerInstanceBoxed"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"boxed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncTypeRegistry","preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"AnySendableBox","preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC14AnySendableBoxV"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","modules":[{"name":"DiContainer"}],"role":"symbol"},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/registerInstanceBoxed(_:boxed:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry":{"title":"AsyncTypeRegistry","kind":"symbol","url":"\/documentation\/dicontainer\/asynctyperegistry","role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncTypeRegistry"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncTypeRegistry"}],"abstract":[{"text":"Actor-based async registry for DIAsync.","type":"text"},{"text":" ","type":"text"},{"text":"Stores async factories and singleton instances without using GCD\/locks.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","type":"topic","role":"collection"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/registerInstanceBoxed(_:boxed:)":{"title":"registerInstanceBoxed(_:boxed:)","url":"\/documentation\/dicontainer\/asynctyperegistry\/registerinstanceboxed(_:boxed:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerInstanceBoxed","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"boxed","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AsyncTypeRegistry","preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"AnySendableBox","preciseIdentifier":"s:11DiContainer17AsyncTypeRegistryC14AnySendableBoxV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/registerInstanceBoxed(_:boxed:)","abstract":[{"text":"Register a pre-boxed singleton instance (avoid sending non-Sendable across boundary)","type":"text"}],"type":"topic","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/AnySendableBox":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/AnySendableBox","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"AnySendableBox","kind":"identifier"}],"url":"\/documentation\/dicontainer\/asynctyperegistry\/anysendablebox","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnySendableBox","kind":"identifier"}],"type":"topic","role":"symbol","title":"AsyncTypeRegistry.AnySendableBox"}}}