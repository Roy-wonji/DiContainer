{"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assumeIsolated"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": ("},{"kind":"keyword","text":"isolated"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#fileID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/asynctyperegistry\/assumeisolated(_:file:line:)"]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Actor.assumeIsolated(_:file:line:)"},{"type":"text","text":"."}],"sections":[],"metadata":{"extendedModule":"_Concurrency","modules":[{"relatedModules":["_Concurrency"],"name":"DiContainer"}],"title":"assumeIsolated(_:file:line:)","roleHeading":"Instance Method","externalID":"s:ScA12_ConcurrencyE14assumeIsolated_4file4lineqd__qd__xYiKXE_s12StaticStringVSutKs8SendableRd__lF::SYNTHESIZED::s:11DiContainer17AsyncTypeRegistryC","platforms":[{"introducedAt":"13.0","beta":false,"name":"iOS","unavailable":false,"deprecated":false},{"introducedAt":"10.15","beta":false,"name":"macOS","unavailable":false,"deprecated":false},{"introducedAt":"13.0","beta":false,"name":"tvOS","unavailable":false,"deprecated":false},{"unavailable":false,"beta":false,"name":"watchOS","introducedAt":"6.0","deprecated":false}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assumeIsolated"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"keyword","text":"isolated"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/assumeIsolated(_:file:line:)"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry"]]},"kind":"symbol","references":{"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry":{"navigatorTitle":[{"kind":"identifier","text":"AsyncTypeRegistry"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry","title":"AsyncTypeRegistry","fragments":[{"kind":"keyword","text":"actor"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncTypeRegistry"}],"abstract":[{"type":"text","text":"Actor-based async registry for DIAsync."},{"type":"text","text":" "},{"type":"text","text":"Stores async factories without using GCD\/locks."}],"type":"topic","url":"\/documentation\/dicontainer\/asynctyperegistry","role":"symbol","kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"abstract":[],"type":"topic","title":"DiContainer","role":"collection","url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/AsyncTypeRegistry/assumeIsolated(_:file:line:)":{"abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assumeIsolated"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"keyword","text":"isolated"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"title":"assumeIsolated(_:file:line:)","type":"topic","role":"symbol","url":"\/documentation\/dicontainer\/asynctyperegistry\/assumeisolated(_:file:line:)","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AsyncTypeRegistry\/assumeIsolated(_:file:line:)"}}}