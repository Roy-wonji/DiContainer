{"primaryContentSections":[{"content":[{"anchor":"%EA%B8%B0%EB%B3%B8","type":"heading","text":"기본","level":2},{"type":"codeListing","code":["let factory = RepositoryModuleFactory()","await factory.makeAllModules().asyncForEach { await container.register($0) }","await container.build()"],"syntax":"swift"},{"anchor":"UseCase-Factory-%EC%97%B0%EB%8F%99","type":"heading","text":"UseCase Factory 연동","level":2},{"type":"codeListing","code":["let useCaseFactory = UseCaseModuleFactory()","await useCaseFactory.makeAllModules().asyncForEach { await container.register($0) }"],"syntax":"swift"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/dicontainer\/modulefactory"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"sections":[],"metadata":{"modules":[{"name":"DiContainer"}],"title":"Module Factory","roleHeading":"Article","role":"article"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory"},"kind":"article","seeAlsoSections":[{"title":"고급 기능","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AutoResolution","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDependencyResolver","doc:\/\/DiContainer\/documentation\/DiContainer\/PluginSystem","doc:\/\/DiContainer\/documentation\/DiContainer\/BasePlugin","doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory"],"anchor":"고급-기능","generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://DiContainer/documentation/DiContainer/ScopeModuleFactory":{"title":"ScopeModuleFactory","url":"\/documentation\/dicontainer\/scopemodulefactory","navigatorTitle":[{"text":"ScopeModuleFactory","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Scope 계층 모듈 팩토리"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScopeModuleFactory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/PluginSystem":{"type":"topic","abstract":[{"text":"DiContainer의 강력한 플러그인 아키텍처를 사용하여 의존성 주입 과정을 커스터마이징하고 확장하는 방법","type":"text"}],"title":"플러그인 시스템","url":"\/documentation\/dicontainer\/pluginsystem","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/PluginSystem","role":"article"},"doc://DiContainer/documentation/DiContainer/BasePlugin":{"title":"BasePlugin","abstract":[{"type":"text","text":"기본 플러그인 구현을 위한 베이스 클래스"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasePlugin"}],"url":"\/documentation\/dicontainer\/baseplugin","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/BasePlugin","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasePlugin"}]},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory":{"url":"\/documentation\/dicontainer\/usecasemodulefactory","title":"UseCaseModuleFactory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactory","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory","navigatorTitle":[{"text":"UseCaseModuleFactory","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"UseCase 계층 모듈 팩토리","type":"text"}]},"doc://DiContainer/documentation/DiContainer/AutoResolution":{"url":"\/documentation\/dicontainer\/autoresolution","title":"자동 의존성 해결","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoResolution","role":"article","type":"topic","abstract":[{"type":"text","text":"DiContainer의 강력한 자동 의존성 해결 시스템을 활용하여 리플렉션 기반의 자동 주입을 구현하는 방법"}]},"doc://DiContainer/documentation/DiContainer/RepositoryModuleFactory":{"abstract":[{"text":"Repository 계층 모듈 팩토리","type":"text"}],"title":"RepositoryModuleFactory","navigatorTitle":[{"text":"RepositoryModuleFactory","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","url":"\/documentation\/dicontainer\/repositorymodulefactory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryModuleFactory","kind":"identifier"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/AutoDependencyResolver":{"role":"symbol","kind":"symbol","title":"AutoDependencyResolver","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDependencyResolver","abstract":[{"type":"text","text":"자동 의존성 해결을 수행하는 핵심 클래스 (메인 액터 격리)"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AutoDependencyResolver"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoDependencyResolver"}],"url":"\/documentation\/dicontainer\/autodependencyresolver"}}}