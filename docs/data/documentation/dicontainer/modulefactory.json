{"metadata":{"role":"article","modules":[{"name":"DiContainer"}],"title":"Module Factory","roleHeading":"Article"},"seeAlsoSections":[{"anchor":"고급-기능","title":"고급 기능","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory"],"generated":true}],"primaryContentSections":[{"content":[{"level":2,"text":"기본","anchor":"%EA%B8%B0%EB%B3%B8","type":"heading"},{"syntax":"swift","type":"codeListing","code":["let factory = RepositoryModuleFactory()","await factory.makeAllModules().asyncForEach { await container.register($0) }","await container.build()"]},{"type":"heading","level":2,"text":"UseCase Factory 연동","anchor":"UseCase-Factory-%EC%97%B0%EB%8F%99"},{"type":"codeListing","code":["let useCaseFactory = UseCaseModuleFactory()","await useCaseFactory.makeAllModules().asyncForEach { await container.register($0) }"],"syntax":"swift"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/dicontainer\/modulefactory"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory"},"abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"references":{"doc://DiContainer/documentation/DiContainer/RepositoryModuleFactory":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RepositoryModuleFactory"}],"abstract":[{"type":"text","text":"Repository 계층 모듈 팩토리"}],"title":"RepositoryModuleFactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","url":"\/documentation\/dicontainer\/repositorymodulefactory","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RepositoryModuleFactory"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory":{"title":"UseCaseModuleFactory","abstract":[{"text":"UseCase 계층 모듈 팩토리","type":"text"}],"url":"\/documentation\/dicontainer\/usecasemodulefactory","navigatorTitle":[{"text":"UseCaseModuleFactory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/AutoDIOptimizer":{"title":"자동 DI 최적화","url":"\/documentation\/dicontainer\/autodioptimizer","abstract":[{"text":"자동으로 의존성 그래프를 생성하고 성능을 최적화하는 시스템","type":"text"}],"kind":"article","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","type":"topic"},"doc://DiContainer/documentation/DiContainer/ScopeModuleFactory":{"title":"ScopeModuleFactory","role":"symbol","url":"\/documentation\/dicontainer\/scopemodulefactory","kind":"symbol","abstract":[{"text":"Scope 계층 모듈 팩토리","type":"text"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScopeModuleFactory","kind":"identifier"}],"navigatorTitle":[{"text":"ScopeModuleFactory","kind":"identifier"}]}}}