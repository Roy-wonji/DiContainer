{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/build()"},"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Container"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"build","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"이 메서드는 "},{"type":"codeVoice","code":"register(_:)"},{"type":"text","text":" 호출로 수집된 모든 모듈들을 Swift의 TaskGroup을 사용하여"},{"type":"text","text":" "},{"type":"text","text":"동시에 병렬 처리합니다. 이를 통해 대량의 의존성 등록 시간을 크게 단축할 수 있습니다."}],"type":"paragraph"},{"type":"heading","level":2,"text":"동작 과정","anchor":"%EB%8F%99%EC%9E%91-%EA%B3%BC%EC%A0%95"},{"type":"heading","level":3,"text":"1단계: 스냅샷 생성","anchor":"1%EB%8B%A8%EA%B3%84-%EC%8A%A4%EB%83%85%EC%83%B7-%EC%83%9D%EC%84%B1"},{"syntax":"swift","type":"codeListing","code":["\/\/ Actor 내부에서 배열을 지역 변수로 복사","let snapshot = modules"]},{"inlineContent":[{"type":"text","text":"이렇게 함으로써 TaskGroup 실행 중 불필요한 actor isolation hop을 방지합니다."}],"type":"paragraph"},{"type":"heading","level":3,"text":"2단계: 병렬 작업 생성","anchor":"2%EB%8B%A8%EA%B3%84-%EB%B3%91%EB%A0%AC-%EC%9E%91%EC%97%85-%EC%83%9D%EC%84%B1"},{"syntax":"swift","type":"codeListing","code":["await withTaskGroup(of: Void.self) { group in","    for module in snapshot {","        group.addTask { @Sendable in","            await module.register() \/\/ 각 모듈이 병렬 실행","        }","    }","    await group.waitForAll() \/\/ 모든 작업 완료 대기","}"]},{"type":"heading","level":2,"text":"성능 특성","anchor":"%EC%84%B1%EB%8A%A5-%ED%8A%B9%EC%84%B1"},{"type":"heading","level":3,"text":"시간 복잡도","anchor":"%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"순차 처리"}]},{"type":"text","text":": O(n) - 모든 모듈을 하나씩 등록"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"병렬 처리"}]},{"type":"text","text":": O(max(모듈별 등록 시간)) - 가장 오래 걸리는 모듈의 등록 시간"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"text":"실제 성능 예시","anchor":"%EC%8B%A4%EC%A0%9C-%EC%84%B1%EB%8A%A5-%EC%98%88%EC%8B%9C"},{"syntax":"swift","type":"codeListing","code":["\/\/ 10개 모듈, 각각 100ms 소요 시","\/\/ 순차 처리: 1000ms","\/\/ 병렬 처리: 100ms (약 90% 성능 향상)"]},{"name":"Note","type":"aside","content":[{"inlineContent":[{"text":"모든 등록 작업이 완료될 때까지 메서드가 반환되지 않습니다.","type":"text"}],"type":"paragraph"}],"style":"note"},{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 메서드는 현재 throws 하지 않지만, 개별 모듈에서 오류 로깅은 가능합니다."}]}],"style":"important"},{"name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"매우 많은 모듈(1000개 이상)을 한 번에 처리할 때는 메모리 사용량을 모니터링하세요.","type":"text"}]}],"style":"warning"}],"kind":"content"}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer0B0C5buildyyYaF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"build"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"extendedModule":"DiContainer","role":"symbol","title":"build()"},"abstract":[{"type":"text","text":"수집된 모든 모듈의 등록을 병렬로 실행하는 핵심 메서드입니다."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/container\/build()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://DiContainer/documentation/DiContainer/Container/build()":{"type":"topic","url":"\/documentation\/dicontainer\/container\/build()","role":"symbol","title":"build()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"build","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/build()","abstract":[{"type":"text","text":"수집된 모든 모듈의 등록을 병렬로 실행하는 핵심 메서드입니다."}]},"doc://DiContainer/documentation/DiContainer/Container":{"role":"symbol","title":"Container","kind":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"Container","kind":"identifier"}],"url":"\/documentation\/dicontainer\/container"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"}}}