{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"DiContainer"}],"title":"callAsFunction(_:)","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:11DiContainer0B0C14callAsFunctionyACXDyyXEF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol"},"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Container"]]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/callAsFunction(_:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Trailing closure를 처리할 때 사용되는 메서드입니다.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"block"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"호출 즉시 실행할 클로저. 이 클로저 내부에서 추가 설정을 수행할 수 있습니다.","type":"text"}],"type":"paragraph"}],"name":"block"}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"현재 "},{"type":"codeVoice","code":"Container"},{"type":"text","text":" 인스턴스(Self). 메서드 체이닝(Fluent API) 방식으로 연쇄 호출이 가능합니다."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/dicontainer\/container\/callasfunction(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://DiContainer/documentation/DiContainer/Container":{"role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/dicontainer\/container","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"navigatorTitle":[{"kind":"identifier","text":"Container"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","title":"Container","type":"topic"},"doc://DiContainer/documentation/DiContainer/Container/callAsFunction(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/callAsFunction(_:)","type":"topic","url":"\/documentation\/dicontainer\/container\/callasfunction(_:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Trailing closure를 처리할 때 사용되는 메서드입니다."}],"title":"callAsFunction(_:)"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]}}}