{"abstract":[{"type":"text","text":"등록된 모듈들의 타입 이름을 반환합니다 (디버깅용)."}],"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getModuleTypeNames","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"모듈 타입 이름 배열","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Container"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/container\/getmoduletypenames()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getModuleTypeNames"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"title":"getModuleTypeNames()","externalID":"s:11DiContainer0B0C18getModuleTypeNamesSaySSGyF","modules":[{"name":"DiContainer"}]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/getModuleTypeNames()","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer/Container/getModuleTypeNames()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getModuleTypeNames","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]","kind":"text"}],"abstract":[{"text":"등록된 모듈들의 타입 이름을 반환합니다 (디버깅용).","type":"text"}],"title":"getModuleTypeNames()","url":"\/documentation\/dicontainer\/container\/getmoduletypenames()","kind":"symbol","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/getModuleTypeNames()","type":"topic"},"doc://DiContainer/documentation/DiContainer/Container":{"title":"Container","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","url":"\/documentation\/dicontainer\/container","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","role":"collection","kind":"symbol","url":"\/documentation\/dicontainer"}}}