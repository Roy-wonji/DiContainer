{"abstract":[{"type":"text","text":"기본 초기화 메서드."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/container\/init()"]}],"metadata":{"modules":[{"name":"DiContainer"}],"title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:11DiContainer0B0CACycfc","role":"symbol","symbolKind":"init","roleHeading":"Initializer"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"설명: 인스턴스 생성 시 ","type":"text"},{"code":"modules","type":"codeVoice"},{"text":" 배열은 빈 상태로 시작됩니다.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Container"]]},"kind":"symbol","sections":[],"references":{"doc://DiContainer/documentation/DiContainer/Container/init()":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"기본 초기화 메서드."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/dicontainer\/container\/init()","title":"init()","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()"},"doc://DiContainer/documentation/DiContainer/Container":{"abstract":[],"url":"\/documentation\/dicontainer\/container","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"navigatorTitle":[{"kind":"identifier","text":"Container"}],"title":"Container","type":"topic","kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"role":"collection","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","kind":"symbol"}}}