{"metadata":{"modules":[{"name":"DiContainer"}],"title":"init()","role":"symbol","symbolKind":"init","externalID":"s:11DiContainer0B0CACycfc","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"variants":[{"paths":["\/documentation\/dicontainer\/container\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"설명: 인스턴스 생성 시 "},{"type":"codeVoice","code":"modules"},{"text":" 배열은 빈 상태로 시작됩니다.","type":"text"}]}]}],"type":"unorderedList"}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Container"]]},"abstract":[{"type":"text","text":"기본 초기화 메서드."}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://DiContainer/documentation/DiContainer/Container":{"url":"\/documentation\/dicontainer\/container","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Container"}],"title":"Container","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"abstract":[]},"doc://DiContainer/documentation/DiContainer/Container/init()":{"url":"\/documentation\/dicontainer\/container\/init()","role":"symbol","type":"topic","abstract":[{"text":"기본 초기화 메서드.","type":"text"}],"title":"init()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"}}}