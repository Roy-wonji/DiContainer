{"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Container"]]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"설명: 인스턴스 생성 시 "},{"type":"codeVoice","code":"modules"},{"type":"text","text":" 배열은 빈 상태로 시작됩니다."}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/container\/init()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()"},"kind":"symbol","abstract":[{"text":"기본 초기화 메서드.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"init()","roleHeading":"Initializer","modules":[{"name":"DiContainer"}],"role":"symbol","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:11DiContainer0B0CACycfc"},"references":{"doc://DiContainer/documentation/DiContainer/Container/init()":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","type":"topic","title":"init()","kind":"symbol","url":"\/documentation\/dicontainer\/container\/init()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()","abstract":[{"type":"text","text":"기본 초기화 메서드."}]},"doc://DiContainer/documentation/DiContainer/Container":{"abstract":[],"url":"\/documentation\/dicontainer\/container","type":"topic","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"kind":"symbol","title":"Container","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Container"}]},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","type":"topic","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","title":"DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"role":"collection"}}}