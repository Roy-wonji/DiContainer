{"metadata":{"modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer0B0CACycfc","roleHeading":"Initializer","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","title":"init()"},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"설명: 인스턴스 생성 시 "},{"type":"codeVoice","code":"modules"},{"type":"text","text":" 배열은 빈 상태로 시작됩니다."}]}]}]}],"kind":"content"}],"sections":[],"variants":[{"paths":["\/documentation\/dicontainer\/container\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"기본 초기화 메서드.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Container"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://DiContainer/documentation/DiContainer/Container/init()":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()","title":"init()","url":"\/documentation\/dicontainer\/container\/init()","role":"symbol","abstract":[{"text":"기본 초기화 메서드.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Container":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","type":"topic","title":"Container","url":"\/documentation\/dicontainer\/container","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"navigatorTitle":[{"kind":"identifier","text":"Container"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","type":"topic","role":"collection"}}}