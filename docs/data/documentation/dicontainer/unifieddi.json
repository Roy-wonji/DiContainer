{"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"metadata":{"roleHeading":"Article","modules":[{"name":"DiContainer"}],"role":"article","title":"통합 DI 시스템 - UnifiedDI vs DI"},"kind":"article","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"text":"와 ","type":"text"},{"code":"DI","type":"codeVoice"},{"text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요.","type":"text"}],"seeAlsoSections":[{"anchor":"Core-Components","title":"Core Components","generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"%F0%9F%8E%AF-API-%EC%84%A0%ED%83%9D-%EA%B0%80%EC%9D%B4%EB%93%9C","level":2,"text":"🎯 API 선택 가이드","type":"heading"},{"anchor":"UnifiedDI-%EA%B6%8C%EC%9E%A5","level":3,"text":"UnifiedDI (권장)","type":"heading"},{"inlineContent":[{"inlineContent":[{"text":"“모든 기능을 담은 포괄적 API”","type":"text"}],"type":"strong"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ 모든 등록 방식 지원","UnifiedDI.register(Service.self) { ServiceImpl() }","UnifiedDI.registerIf(Service.self, condition: isProduction,","                     factory: { ProdService() },","                     fallback: { MockService() })","","\/\/ 다양한 해결 전략","let service = UnifiedDI.resolve(Service.self)                    \/\/ 옵셔널","let required = UnifiedDI.requireResolve(Service.self)           \/\/ 필수","let safe = try UnifiedDI.resolveThrows(Service.self)           \/\/ Throws","let withDefault = UnifiedDI.resolve(Service.self, default: MockService())","","\/\/ 성능 추적","let tracked = UnifiedDI.resolveWithTracking(Service.self)","","\/\/ 배치 등록","UnifiedDI.registerMany {","    Registration(NetworkService.self) { NetworkServiceImpl() }","    Registration(UserService.self) { sharedUserService }","    Registration(AnalyticsService.self, condition: analytics) {","        GoogleAnalytics()","    } fallback: {","        NoOpAnalytics()","    }","}"]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"사용 시나리오:","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"복잡한 앱 아키텍처","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"고급 DI 기능이 필요한 경우"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"성능 최적화가 중요한 경우"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A\/B 테스트나 조건부 등록이 필요한 경우"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"대규모 팀 개발"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"DI (단순화)","anchor":"DI-%EB%8B%A8%EC%88%9C%ED%99%94","type":"heading","level":3},{"inlineContent":[{"inlineContent":[{"text":"“핵심만 담은 간결한 API”","type":"text"}],"type":"strong"}],"type":"paragraph"},{"code":["\/\/ 기본 3가지 패턴만 제공","DI.register(Service.self) { ServiceImpl() }  \/\/ 등록","@Inject var service: Service?                 \/\/ 주입","let service = DI.resolve(Service.self)        \/\/ 해결"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"사용 시나리오:"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"간단한 프로젝트","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"DI 학습 목적","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"최소한의 설정을 원하는 경우"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"프로토타입 개발","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"소규모 팀 개발"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"%F0%9F%94%84-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%EC%A0%84%EB%9E%B5","level":2,"type":"heading","text":"🔄 마이그레이션 전략"},{"anchor":"Legacy-DI-%E2%86%92-UnifiedDI","level":3,"type":"heading","text":"Legacy DI → UnifiedDI"},{"code":["\/\/ Before (Legacy)","DI.register(Service.self) { ServiceImpl() }","let service = DI.resolve(Service.self)","","\/\/ After (UnifiedDI)","UnifiedDI.register(Service.self) { ServiceImpl() }","let service = UnifiedDI.resolve(Service.self)"],"type":"codeListing","syntax":"swift"},{"anchor":"%EC%A0%90%EC%A7%84%EC%A0%81-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98","level":3,"type":"heading","text":"점진적 마이그레이션"},{"code":["\/\/ 1단계: 기존 코드 유지하면서 새로운 코드는 UnifiedDI 사용","class LegacyViewController {","    @Inject var service: OldService?  \/\/ 기존 코드 유지","}","","class NewViewController {","    private let newService = UnifiedDI.resolve(NewService.self, default: DefaultNewService())","}","","\/\/ 2단계: 배치 등록으로 통합","await DependencyContainer.bootstrap { container in","    \/\/ 기존 서비스들","    container.register(OldService.self) { OldServiceImpl() }","","    \/\/ 새로운 서비스들 - UnifiedDI 스타일로 등록","    UnifiedDI.register(NewService.self) { NewServiceImpl() }","}","","\/\/ 3단계: 완전히 UnifiedDI로 통합","UnifiedDI.registerMany {","    Registration(OldService.self) { OldServiceImpl() }","    Registration(NewService.self) { NewServiceImpl() }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"%F0%9F%8F%97%EF%B8%8F-%EC%8B%A4%EB%AC%B4-%ED%8C%A8%ED%84%B4","level":2,"type":"heading","text":"🏗️ 실무 패턴"},{"anchor":"%ED%99%98%EA%B2%BD%EB%B3%84-%EA%B5%AC%EC%84%B1","level":3,"type":"heading","text":"환경별 구성"},{"code":["#if DEBUG","UnifiedDI.registerMany {","    Registration(APIService.self) { MockAPIService() }","    Registration(AnalyticsService.self) { DebugAnalytics() }","    Registration(LoggerService.self, default: ConsoleLogger(level: .debug))","}","#else","UnifiedDI.registerMany {","    Registration(APIService.self) { ProductionAPIService() }","    Registration(AnalyticsService.self) { FirebaseAnalytics() }","    Registration(LoggerService.self, default: CloudLogger(level: .info))","}","#endif"],"type":"codeListing","syntax":"swift"},{"anchor":"%EB%AA%A8%EB%93%88%EB%B3%84-%EB%B6%84%EB%A6%AC","level":3,"type":"heading","text":"모듈별 분리"},{"code":["enum NetworkModule {","    static func register() {","        UnifiedDI.registerMany {","            Registration(HTTPClient.self) { URLSessionHTTPClient() }","            Registration(APIService.self) { APIServiceImpl() }","            Registration(NetworkReachability.self) { NetworkReachability.shared }","        }","    }","}","","enum DataModule {","    static func register() {","        UnifiedDI.registerMany {","            Registration(DatabaseService.self) { CoreDataService() }","            Registration(CacheService.self) { NSCacheService() }","            Registration(KeychainService.self) { KeychainService.shared }","        }","    }","}","","\/\/ 앱 초기화에서","await DependencyContainer.bootstrap { container in","    NetworkModule.register()","    DataModule.register()","}"],"type":"codeListing","syntax":"swift"},{"anchor":"%F0%9F%93%8A-%EC%84%B1%EB%8A%A5-%ED%8A%B9%EC%84%B1-%EB%B9%84%EA%B5%90","level":2,"type":"heading","text":"📊 성능 특성 비교"},{"rows":[[[{"inlineContent":[{"text":"기능","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"UnifiedDI","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"DI (단순화)"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"기본 등록\/해결","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅ 최적화됨","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅ 최적화됨","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"조건부 등록","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅ 지원"}],"type":"paragraph"}],[{"inlineContent":[{"text":"❌ 미지원","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"성능 추적","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅ 내장","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌ 미지원"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"배치 등록"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅ Result Builder DSL"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌ 미지원"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"KeyPath 등록"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅ 지원"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌ 미지원"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"에러 전략"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅ 다양함 (throws, default 등)","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅ 기본만","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"학습 곡선"}],"type":"paragraph"}],[{"inlineContent":[{"text":"보통","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"낮음"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"메모리 오버헤드"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"낮음"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"매우 낮음"}],"type":"paragraph"}]]],"header":"row","type":"table"},{"anchor":"%F0%9F%8E%AF-%EA%B2%B0%EB%A1%A0-%EB%B0%8F-%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD","type":"heading","level":2,"text":"🎯 결론 및 권장사항"},{"anchor":"%E2%9C%85-UnifiedDI%EB%A5%BC-%EC%84%A0%ED%83%9D%ED%95%98%EC%84%B8%EC%9A%94","type":"heading","level":3,"text":"✅ UnifiedDI를 선택하세요"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"프로덕션 앱 개발 시","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"팀 개발 환경"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"복잡한 의존성 그래프","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"성능 최적화가 중요한 경우"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"테스트 친화적 아키텍처 필요 시"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"%E2%9C%85-DI%EB%8B%A8%EC%88%9C%ED%99%94%EB%A5%BC-%EC%84%A0%ED%83%9D%ED%95%98%EC%84%B8%EC%9A%94","level":3,"text":"✅ DI(단순화)를 선택하세요","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"프로토타입 개발","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"학습 목적"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"매우 간단한 프로젝트","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"최소한의 의존성 관리만 필요한 경우","type":"text"}]}]}]},{"anchor":"%F0%9F%92%A1-Best-Practice","type":"heading","text":"💡 Best Practice","level":3},{"inlineContent":[{"text":"대부분의 경우 ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"UnifiedDI"}]},{"text":"를 사용하는 것을 권장합니다. 더 많은 기능을 제공하면서도 필요한 만큼만 사용할 수 있어 확장성이 뛰어나기 때문입니다.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ 권장 패턴: UnifiedDI로 시작하여 필요에 따라 기능 확장","@main","struct MyApp: App {","    init() {","        Task {","            await setupDependencies()","        }","    }","","    private func setupDependencies() async {","        \/\/ UnifiedDI의 강력한 배치 등록 사용","        UnifiedDI.registerMany {","            \/\/ 기본 서비스들","            Registration(NetworkService.self) { NetworkServiceImpl() }","            Registration(UserService.self) { UserServiceImpl() }","","            \/\/ 환경별 조건부 등록","            Registration(AnalyticsService.self,","                        condition: !isDebug,","                        factory: { GoogleAnalytics() },","                        fallback: { NoOpAnalytics() })","        }","","        \/\/ 성능 최적화 활성화","        await UnifiedDI.enablePerformanceOptimization()","    }","}"]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/unifieddi"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://DiContainer/documentation/DiContainer/Inject":{"type":"topic","abstract":[{"text":"옵셔널 의존성 주입을 위한 프로퍼티 래퍼","type":"text"}],"role":"symbol","title":"Inject","url":"\/documentation\/dicontainer\/inject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Inject"}],"navigatorTitle":[{"kind":"identifier","text":"Inject"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"kind":"symbol","role":"symbol","type":"topic","title":"DependencyContainer","url":"\/documentation\/dicontainer\/dependencycontainer"},"doc://DiContainer/documentation/DiContainer/Factory":{"type":"topic","abstract":[{"type":"text","text":"팩토리 패턴 기반 의존성 주입을 위한 프로퍼티 래퍼"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","title":"Factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"url":"\/documentation\/dicontainer\/factory","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Factory"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","url":"\/documentation\/dicontainer\/requiredinject","title":"RequiredInject","type":"topic","kind":"symbol","abstract":[{"text":"필수 의존성 주입을 위한 프로퍼티 래퍼","type":"text"}],"navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/Module":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Module"}],"title":"Module","url":"\/documentation\/dicontainer\/module","abstract":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"type":"strong","inlineContent":[{"text":"단일 모듈","type":"text"}]},{"type":"text","text":"을 나타내는 구조체입니다."}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Module"}]},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"kind":"symbol","url":"\/documentation\/dicontainer\/factoryvalues","type":"topic","title":"FactoryValues","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","navigatorTitle":[{"kind":"identifier","text":"FactoryValues"}],"abstract":[{"type":"text","text":"팩토리 값들을 관리하는 프로퍼티 래퍼"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"kind":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"url":"\/documentation\/dicontainer\/appdicontainer","title":"AppDIContainer","type":"topic","role":"symbol","navigatorTitle":[{"text":"AppDIContainer","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"},"doc://DiContainer/documentation/DiContainer/DI":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DI","kind":"identifier"}],"navigatorTitle":[{"text":"DI","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"단순화된 의존성 주입 API","type":"text"}],"title":"DI","url":"\/documentation\/dicontainer\/di","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI"},"doc://DiContainer/documentation/DiContainer/Container":{"url":"\/documentation\/dicontainer\/container","abstract":[],"role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Container"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","title":"Container","navigatorTitle":[{"kind":"identifier","text":"Container"}],"kind":"symbol"}}}