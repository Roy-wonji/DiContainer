{"abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"type":"text","text":"와 "},{"code":"DI","type":"codeVoice"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"DiContainer"}],"title":"통합 DI 시스템 - UnifiedDI vs DI"},"variants":[{"paths":["\/documentation\/dicontainer\/unifieddi"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"핵심 컴포넌트","generated":true,"anchor":"핵심-컴포넌트","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"%F0%9F%8E%AF-API-%EC%84%A0%ED%83%9D-%EA%B0%80%EC%9D%B4%EB%93%9C","text":"🎯 API 선택 가이드","level":2,"type":"heading"},{"anchor":"UnifiedDI-%EA%B6%8C%EC%9E%A5","text":"UnifiedDI (권장)","level":3,"type":"heading"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"“모든 기능을 담은 포괄적 API”"}]}],"type":"paragraph"},{"code":["\/\/ 모든 등록 방식 지원","UnifiedDI.register(Service.self) { ServiceImpl() }","UnifiedDI.registerIf(Service.self, condition: isProduction,","                     factory: { ProdService() },","                     fallback: { MockService() })","","\/\/ 다양한 해결 전략","let service = UnifiedDI.resolve(Service.self)                    \/\/ 옵셔널","let required = UnifiedDI.requireResolve(Service.self)           \/\/ 필수","let safe = try UnifiedDI.resolveThrows(Service.self)           \/\/ Throws","let withDefault = UnifiedDI.resolve(Service.self, default: MockService())","","\/\/ 성능 추적","let tracked = UnifiedDI.resolveWithTracking(Service.self)","","\/\/ 배치 등록","UnifiedDI.registerMany {","    Registration(NetworkService.self) { NetworkServiceImpl() }","    Registration(UserService.self) { sharedUserService }","    Registration(AnalyticsService.self, condition: analytics) {","        GoogleAnalytics()","    } fallback: {","        NoOpAnalytics()","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"heading","anchor":"%EC%8A%A4%EC%BD%94%ED%94%84-%EA%B8%B0%EB%B0%98-%EB%93%B1%EB%A1%9D%ED%95%B4%EA%B2%B0%ED%99%94%EB%A9%B4%EC%84%B8%EC%85%98%EC%9A%94%EC%B2%AD","level":4,"text":"스코프 기반 등록\/해결(화면\/세션\/요청)"},{"code":["\/\/ 스코프 ID 설정 (예: 로그인 성공 시 세션 스코프 시작)","ScopeContext.shared.setCurrent(.session, id: user.id)","","\/\/ 스코프 등록 (동기\/비동기)","UnifiedDI.registerScoped(UserService.self, scope: .session) { UserServiceImpl() }","UnifiedDI.registerAsyncScoped(ProfileCache.self, scope: .screen) { await ProfileCache.make() }","","\/\/ 기존과 동일한 방식으로 해결 (현재 스코프 ID가 있으면 스코프 캐시 사용)","let userService = UnifiedDI.resolve(UserService.self)","","\/\/ 스코프 해제 (전체\/특정 타입)","UnifiedDI.releaseScope(.session, id: user.id)","UnifiedDI.releaseScoped(UserService.self, kind: .session, id: user.id)"],"syntax":"swift","type":"codeListing"},{"type":"heading","anchor":"%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%8B%B1%EA%B8%80%ED%86%A4%EC%B5%9C%EC%B4%88-1%ED%9A%8C-%EC%83%9D%EC%84%B1","level":4,"text":"비동기 싱글톤(최초 1회 생성)"},{"code":["await GlobalUnifiedRegistry.registerAsyncSingleton(RemoteConfig.self) { await RemoteConfig.fetch() }","","\/\/ 어디서든 사용","let config: RemoteConfig? = await UnifiedDI.resolveAsync(RemoteConfig.self)"],"syntax":"swift","type":"codeListing"},{"type":"heading","level":4,"text":"그래프 자동 수집(선택)","anchor":"%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9E%90%EB%8F%99-%EC%88%98%EC%A7%91%EC%84%A0%ED%83%9D"},{"type":"codeListing","code":["\/\/ 자동 기록 활성화 (해결 시 상위 컨텍스트 → 대상 타입 간 엣지 기록)","CircularDependencyDetector.shared.setAutoRecordingEnabled(true)","","\/\/ 더 정확한 그래프를 원하면 '소유 타입' 컨텍스트에서 begin\/end로 감싸주세요","try? CircularDependencyDetector.shared.beginResolution(HomeViewModel.self)","defer { CircularDependencyDetector.shared.endResolution(HomeViewModel.self) }","","let service = UnifiedDI.resolve(UserService.self)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"사용 시나리오:","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"복잡한 앱 아키텍처","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"고급 DI 기능이 필요한 경우","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"성능 최적화가 중요한 경우","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A\/B 테스트나 조건부 등록이 필요한 경우","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"대규모 팀 개발","type":"text"}]}]}]},{"level":3,"text":"DI (단순화)","anchor":"DI-%EB%8B%A8%EC%88%9C%ED%99%94","type":"heading"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"“핵심만 담은 간결한 API”"}]}],"type":"paragraph"},{"code":["\/\/ 기본 3가지 패턴만 제공","DI.register(Service.self) { ServiceImpl() }  \/\/ 등록","@Inject var service: Service?                 \/\/ 주입","let service = DI.resolve(Service.self)        \/\/ 해결"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"사용 시나리오:"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"간단한 프로젝트"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"DI 학습 목적","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"최소한의 설정을 원하는 경우","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"프로토타입 개발"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"소규모 팀 개발"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"text":"🔄 마이그레이션 전략","anchor":"%F0%9F%94%84-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%EC%A0%84%EB%9E%B5","type":"heading"},{"type":"heading","level":3,"text":"Legacy DI → UnifiedDI","anchor":"Legacy-DI-%E2%86%92-UnifiedDI"},{"type":"codeListing","code":["\/\/ Before (Legacy)","DI.register(Service.self) { ServiceImpl() }","let service = DI.resolve(Service.self)","","\/\/ After (UnifiedDI)","UnifiedDI.register(Service.self) { ServiceImpl() }","let service = UnifiedDI.resolve(Service.self)"],"syntax":"swift"},{"type":"heading","level":3,"text":"점진적 마이그레이션","anchor":"%EC%A0%90%EC%A7%84%EC%A0%81-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98"},{"code":["\/\/ 1단계: 기존 코드 유지하면서 새로운 코드는 UnifiedDI 사용","class LegacyViewController {","    @Inject var service: OldService?  \/\/ 기존 코드 유지","}","","class NewViewController {","    private let newService = UnifiedDI.resolve(NewService.self, default: DefaultNewService())","}","","\/\/ 2단계: 배치 등록으로 통합","await DependencyContainer.bootstrap { container in","    \/\/ 기존 서비스들","    container.register(OldService.self) { OldServiceImpl() }","","    \/\/ 새로운 서비스들 - UnifiedDI 스타일로 등록","    UnifiedDI.register(NewService.self) { NewServiceImpl() }","}","","\/\/ 3단계: 완전히 UnifiedDI로 통합","UnifiedDI.registerMany {","    Registration(OldService.self) { OldServiceImpl() }","    Registration(NewService.self) { NewServiceImpl() }","}"],"syntax":"swift","type":"codeListing"},{"anchor":"%F0%9F%8F%97%EF%B8%8F-%EC%8B%A4%EB%AC%B4-%ED%8C%A8%ED%84%B4","text":"🏗️ 실무 패턴","level":2,"type":"heading"},{"anchor":"%ED%99%98%EA%B2%BD%EB%B3%84-%EA%B5%AC%EC%84%B1","text":"환경별 구성","level":3,"type":"heading"},{"code":["#if DEBUG","UnifiedDI.registerMany {","    Registration(APIService.self) { MockAPIService() }","    Registration(AnalyticsService.self) { DebugAnalytics() }","    Registration(LoggerService.self, default: ConsoleLogger(level: .debug))","}","#else","UnifiedDI.registerMany {","    Registration(APIService.self) { ProductionAPIService() }","    Registration(AnalyticsService.self) { FirebaseAnalytics() }","    Registration(LoggerService.self, default: CloudLogger(level: .info))","}","#endif"],"syntax":"swift","type":"codeListing"},{"anchor":"%EB%AA%A8%EB%93%88%EB%B3%84-%EB%B6%84%EB%A6%AC","text":"모듈별 분리","level":3,"type":"heading"},{"code":["enum NetworkModule {","    static func register() {","        UnifiedDI.registerMany {","            Registration(HTTPClient.self) { URLSessionHTTPClient() }","            Registration(APIService.self) { APIServiceImpl() }","            Registration(NetworkReachability.self) { NetworkReachability.shared }","        }","    }","}","","enum DataModule {","    static func register() {","        UnifiedDI.registerMany {","            Registration(DatabaseService.self) { CoreDataService() }","            Registration(CacheService.self) { NSCacheService() }","            Registration(KeychainService.self) { KeychainService.shared }","        }","    }","}","","\/\/ 앱 초기화에서","await DependencyContainer.bootstrap { container in","    NetworkModule.register()","    DataModule.register()","}"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"📊 성능 특성 비교","anchor":"%F0%9F%93%8A-%EC%84%B1%EB%8A%A5-%ED%8A%B9%EC%84%B1-%EB%B9%84%EA%B5%90","type":"heading"},{"header":"row","type":"table","rows":[[[{"inlineContent":[{"type":"text","text":"기능"}],"type":"paragraph"}],[{"inlineContent":[{"text":"UnifiedDI","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"DI (단순화)","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"기본 등록\/해결","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅ 최적화됨","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅ 최적화됨","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"조건부 등록","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅ 지원","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"❌ 미지원","type":"text"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"text":"성능 추적","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅ 내장","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"❌ 미지원","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"배치 등록","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅ Result Builder DSL","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"❌ 미지원","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"KeyPath 등록","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅ 지원","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"❌ 미지원","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"스코프(.screen\/.session\/.request)","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅ 등록\/해결\/해제 지원","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"❌ 미지원","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"비동기 싱글톤(초기화 1회 보장)","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅ 지원(GlobalUnifiedRegistry)","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"❌ 미지원","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"그래프 자동 수집 옵션","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅ 지원(CircularDependencyDetector)","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"❌ 미지원","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"에러 전략","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅ 다양함 (throws, default 등)","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅ 기본만","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"학습 곡선","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"보통","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"낮음","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"메모리 오버헤드","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"낮음","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"매우 낮음","type":"text"}]}]]]},{"anchor":"%F0%9F%8E%AF-%EA%B2%B0%EB%A1%A0-%EB%B0%8F-%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD","text":"🎯 결론 및 권장사항","level":2,"type":"heading"},{"anchor":"%E2%9C%85-UnifiedDI%EB%A5%BC-%EC%84%A0%ED%83%9D%ED%95%98%EC%84%B8%EC%9A%94","text":"✅ UnifiedDI를 선택하세요","level":3,"type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"프로덕션 앱 개발 시","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"팀 개발 환경","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"복잡한 의존성 그래프"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"성능 최적화가 중요한 경우"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"테스트 친화적 아키텍처 필요 시"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"%E2%9C%85-DI%EB%8B%A8%EC%88%9C%ED%99%94%EB%A5%BC-%EC%84%A0%ED%83%9D%ED%95%98%EC%84%B8%EC%9A%94","text":"✅ DI(단순화)를 선택하세요","level":3,"type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"프로토타입 개발","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"학습 목적"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"매우 간단한 프로젝트"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"최소한의 의존성 관리만 필요한 경우","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"%F0%9F%92%A1-Best-Practice","text":"💡 Best Practice","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"대부분의 경우 "},{"type":"strong","inlineContent":[{"text":"UnifiedDI","type":"text"}]},{"type":"text","text":"를 사용하는 것을 권장합니다. 더 많은 기능을 제공하면서도 필요한 만큼만 사용할 수 있어 확장성이 뛰어나기 때문입니다."}],"type":"paragraph"},{"code":["\/\/ 권장 패턴: UnifiedDI로 시작하여 필요에 따라 기능 확장","@main","struct MyApp: App {","    init() {","        Task {","            await setupDependencies()","        }","    }","","    private func setupDependencies() async {","        \/\/ UnifiedDI의 강력한 배치 등록 사용","        UnifiedDI.registerMany {","            \/\/ 기본 서비스들","            Registration(NetworkService.self) { NetworkServiceImpl() }","            Registration(UserService.self) { UserServiceImpl() }","","            \/\/ 환경별 조건부 등록","            Registration(AnalyticsService.self,","                        condition: !isDebug,","                        factory: { GoogleAnalytics() },","                        fallback: { NoOpAnalytics() })","        }","","        \/\/ 성능 최적화 활성화","        await UnifiedDI.enablePerformanceOptimization()","    }","}"],"syntax":"swift","type":"codeListing"},{"anchor":"%F0%9F%94%AC-%EC%B0%B8%EA%B3%A0-%EC%BB%B4%ED%8C%8C%EC%9D%BC-%ED%83%80%EC%9E%84-%EC%A0%88%EB%8C%80-%EB%B3%B4%EC%A6%9D%EC%B4%88%EC%A0%80%EC%98%A4%EB%B2%84%ED%97%A4%EB%93%9C%EA%B0%80-%EB%AA%A9%ED%91%9C%EB%9D%BC%EB%A9%B4","text":"🔬 참고: “컴파일 타임 절대 보증\/초저오버헤드”가 목표라면","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"본 프레임워크는 런타임 DI(유연성\/도구\/동시성 최적화) 중심입니다. 만약 Needle 스타일의 "},{"type":"strong","inlineContent":[{"type":"text","text":"컴파일 타임 보증"}]},{"type":"text","text":"과 "},{"type":"strong","inlineContent":[{"type":"text","text":"초저오버헤드"}]},{"type":"text","text":"가 최우선이라면:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"레지스트리\/런타임 조회 대신 코드 생성 기반 정적 바인딩으로 전환"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"컴포넌트(Dependencies\/Provides) 선언 → 빌드 시 wire 코드 생성"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"프로덕션 핫패스에서 프로퍼티 래퍼\/딕셔너리\/캐스팅 제거, 생성자 주입\/직접 참조로 대체"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"이 접근은 팀\/도메인에 따라 큰 이점을 줄 수 있습니다. 현 레포에서도 점진 전환(디버그=런타임 DI, 릴리즈=코드생성 DI) 전략을 고려할 수 있습니다."}],"type":"paragraph"}]}],"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/DI":{"role":"symbol","title":"DI","abstract":[{"text":"기존 DI API와의 호환성을 위한 별칭","type":"text"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","url":"\/documentation\/dicontainer\/di","navigatorTitle":[{"kind":"identifier","text":"DI"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DI"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/ContainerUsage":{"abstract":[{"type":"text","text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다."}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","title":"Container Usage","type":"topic","role":"article","kind":"article","url":"\/documentation\/dicontainer\/containerusage"},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GlobalUnifiedRegistry","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","text":"UnifiedRegistry","kind":"typeIdentifier"}],"title":"GlobalUnifiedRegistry","role":"symbol","abstract":[{"type":"text","text":"글로벌 통합 Registry 인스턴스"},{"text":" ","type":"text"},{"text":"DependencyContainer.live에서 내부적으로 사용","type":"text"}],"kind":"symbol","url":"\/documentation\/dicontainer\/globalunifiedregistry","type":"topic"},"doc://DiContainer/documentation/DiContainer/Container":{"type":"topic","url":"\/documentation\/dicontainer\/container","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Container"}],"navigatorTitle":[{"text":"Container","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","title":"Container","abstract":[{"type":"text","text":"기존 Container와의 호환성을 위한 별칭"}]},"doc://DiContainer/documentation/DiContainer/Factory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"title":"Factory","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"kind":"symbol","url":"\/documentation\/dicontainer\/factory","type":"topic"},"doc://DiContainer/documentation/DiContainer/Module":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Module","kind":"identifier"}],"url":"\/documentation\/dicontainer\/module","title":"Module","role":"symbol","type":"topic","abstract":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"type":"strong","inlineContent":[{"text":"단일 모듈","type":"text"}]},{"text":"을 나타내는 구조체입니다.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","navigatorTitle":[{"text":"Module","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/Inject":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/inject","title":"Inject","role":"symbol","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","navigatorTitle":[{"text":"Inject","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"DependencyContainer","kind":"identifier"}],"title":"DependencyContainer","role":"symbol","abstract":[{"text":"기존 DependencyContainer와의 호환성을 위한 별칭","type":"text"}],"navigatorTitle":[{"text":"DependencyContainer","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dicontainer\/dependencycontainer","type":"topic"},"doc://DiContainer/documentation/DiContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","title":"DiContainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"kind":"symbol","url":"\/documentation\/dicontainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredInject"}],"title":"RequiredInject","role":"symbol","abstract":[],"navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dicontainer\/requiredinject","type":"topic"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"title":"AppDIContainer","role":"symbol","abstract":[],"navigatorTitle":[{"text":"AppDIContainer","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dicontainer\/appdicontainer","type":"topic"}}}