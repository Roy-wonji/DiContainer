{"abstract":[{"text":"기존 코드를 Actor 기반으로 마이그레이션하기 위한 브리지","type":"text"}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/migrateToActor()","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/registerSync(_:factory:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/resolveSync(_:)"],"generated":true,"anchor":"Type-Methods","title":"Type Methods"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActorBridge","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%EC%98%88%EC%8B%9C","type":"heading","level":2,"text":"마이그레이션 예시:"},{"syntax":"swift","type":"codeListing","code":["\/\/ OLD (DispatchQueue 기반):","DI.register(Service.self) { ServiceImpl() }","let service = DI.resolve(Service.self)","","\/\/ NEW (Actor 기반):","await DIActorBridge.register(Service.self) { ServiceImpl() }","let service = await DIActorBridge.resolve(Service.self)"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActorBridge"}],"title":"DIActorBridge","roleHeading":"Enumeration","role":"symbol","modules":[{"name":"DiContainer"}],"navigatorTitle":[{"kind":"identifier","text":"DIActorBridge"}],"externalID":"s:11DiContainer13DIActorBridgeO","symbolKind":"enum"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactorbridge"]}],"kind":"symbol","sections":[],"references":{"doc://DiContainer/documentation/DiContainer/DIActorBridge":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"기존 코드를 Actor 기반으로 마이그레이션하기 위한 브리지"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge","url":"\/documentation\/dicontainer\/diactorbridge","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActorBridge"}],"title":"DIActorBridge","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DIActorBridge"}]},"doc://DiContainer/documentation/DiContainer/DIActorBridge/registerSync(_:factory:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/registerSync(_:factory:)","url":"\/documentation\/dicontainer\/diactorbridge\/registersync(_:factory:)","title":"registerSync(_:factory:)","abstract":[{"type":"text","text":"기존 코드와 호환성을 위한 동기 래퍼 (과도기용)"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerSync"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActorBridge/migrateToActor()":{"abstract":[{"type":"text","text":"기존 DI API를 Actor 기반으로 브리지"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/migrateToActor()","url":"\/documentation\/dicontainer\/diactorbridge\/migratetoactor()","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"migrateToActor","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"role":"symbol","title":"migrateToActor()"},"doc://DiContainer/documentation/DiContainer/DIActorBridge/resolveSync(_:)":{"type":"topic","role":"symbol","url":"\/documentation\/dicontainer\/diactorbridge\/resolvesync(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveSync"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/resolveSync(_:)","abstract":[{"type":"text","text":"기존 코드와 호환성을 위한 동기 래퍼 (과도기용)"}],"kind":"symbol","title":"resolveSync(_:)"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]}}}