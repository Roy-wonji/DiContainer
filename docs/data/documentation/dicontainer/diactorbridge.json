{"topicSections":[{"generated":true,"anchor":"Type-Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/migrateToActor()","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/registerSync(_:factory:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/resolveSync(_:)"],"title":"Type Methods"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActorBridge","kind":"identifier"}]}]},{"kind":"content","content":[{"anchor":"%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%EC%98%88%EC%8B%9C","level":2,"type":"heading","text":"마이그레이션 예시:"},{"syntax":"swift","type":"codeListing","code":["\/\/ OLD (DispatchQueue 기반):","DI.register(Service.self) { ServiceImpl() }","let service = DI.resolve(Service.self)","","\/\/ NEW (Actor 기반):","await DIActorBridge.register(Service.self) { ServiceImpl() }","let service = await DIActorBridge.resolve(Service.self)"]}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactorbridge"]}],"sections":[],"metadata":{"symbolKind":"enum","title":"DIActorBridge","modules":[{"name":"DiContainer"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActorBridge","kind":"identifier"}],"roleHeading":"Enumeration","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DIActorBridge"}],"externalID":"s:11DiContainer13DIActorBridgeO"},"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"기존 코드를 Actor 기반으로 마이그레이션하기 위한 브리지"}],"references":{"doc://DiContainer/documentation/DiContainer/DIActorBridge/registerSync(_:factory:)":{"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/registerSync(_:factory:)","title":"registerSync(_:factory:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerSync"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"text":"기존 코드와 호환성을 위한 동기 래퍼 (과도기용)","type":"text"}],"type":"topic","url":"\/documentation\/dicontainer\/diactorbridge\/registersync(_:factory:)","role":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActorBridge/migrateToActor()":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/migrateToActor()","type":"topic","role":"symbol","title":"migrateToActor()","url":"\/documentation\/dicontainer\/diactorbridge\/migratetoactor()","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"migrateToActor","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"abstract":[{"text":"기존 DI API를 Actor 기반으로 브리지","type":"text"}]},"doc://DiContainer/documentation/DiContainer/DIActorBridge":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge","title":"DIActorBridge","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DIActorBridge"}],"navigatorTitle":[{"kind":"identifier","text":"DIActorBridge"}],"abstract":[{"text":"기존 코드를 Actor 기반으로 마이그레이션하기 위한 브리지","type":"text"}],"type":"topic","url":"\/documentation\/dicontainer\/diactorbridge","role":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActorBridge/resolveSync(_:)":{"kind":"symbol","title":"resolveSync(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/resolveSync(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveSync","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"기존 코드와 호환성을 위한 동기 래퍼 (과도기용)"}],"type":"topic","url":"\/documentation\/dicontainer\/diactorbridge\/resolvesync(_:)","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","title":"DiContainer","type":"topic","url":"\/documentation\/dicontainer"}}}