{"abstract":[{"text":"기존 코드를 Actor 기반으로 마이그레이션하기 위한 브리지","type":"text"}],"topicSections":[{"anchor":"Type-Methods","title":"Type Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/migrateToActor()","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/registerSync(_:factory:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/resolveSync(_:)"],"generated":true}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActorBridge"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%EC%98%88%EC%8B%9C","text":"마이그레이션 예시:","level":2},{"code":["\/\/ OLD (DispatchQueue 기반):","DI.register(Service.self) { ServiceImpl() }","let service = DI.resolve(Service.self)","","\/\/ NEW (Actor 기반):","await DIActorBridge.register(Service.self) { ServiceImpl() }","let service = await DIActorBridge.resolve(Service.self)"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"roleHeading":"Enumeration","title":"DIActorBridge","symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActorBridge","kind":"identifier"}],"modules":[{"name":"DiContainer"}],"role":"symbol","externalID":"s:11DiContainer13DIActorBridgeO","navigatorTitle":[{"text":"DIActorBridge","kind":"identifier"}]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactorbridge"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer/DIActorBridge":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge","title":"DIActorBridge","type":"topic","abstract":[{"text":"기존 코드를 Actor 기반으로 마이그레이션하기 위한 브리지","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActorBridge","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dicontainer\/diactorbridge","role":"symbol","navigatorTitle":[{"text":"DIActorBridge","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/DIActorBridge/registerSync(_:factory:)":{"type":"topic","title":"registerSync(_:factory:)","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/registerSync(_:factory:)","abstract":[{"type":"text","text":"기존 코드와 호환성을 위한 동기 래퍼 (과도기용)"}],"url":"\/documentation\/dicontainer\/diactorbridge\/registersync(_:factory:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerSync"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActorBridge/migrateToActor()":{"title":"migrateToActor()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/migrateToActor()","abstract":[{"text":"기존 DI API를 Actor 기반으로 브리지","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"migrateToActor","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/dicontainer\/diactorbridge\/migratetoactor()"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActorBridge/resolveSync(_:)":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActorBridge\/resolveSync(_:)","role":"symbol","url":"\/documentation\/dicontainer\/diactorbridge\/resolvesync(_:)","title":"resolveSync(_:)","kind":"symbol","abstract":[{"text":"기존 코드와 호환성을 위한 동기 래퍼 (과도기용)","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveSync"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}]}}}