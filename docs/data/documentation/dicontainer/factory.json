{"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"title":"Factory","role":"symbol","modules":[{"name":"DiContainer"}],"symbolKind":"struct","roleHeading":"Structure","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"externalID":"s:11DiContainer7FactoryV"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Factory\/init(_:)"],"title":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Factory\/wrappedValue"],"title":"Instance Properties"}],"variants":[{"paths":["\/documentation\/dicontainer\/factory"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"abstract":[{"type":"reference","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","isActive":true},{"type":"text","text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다."}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"%EA%B0%9C%EC%9A%94","level":2,"type":"heading","text":"개요"},{"inlineContent":[{"type":"codeVoice","code":"@Factory"},{"type":"text","text":"는 "},{"type":"codeVoice","code":"FactoryValues"},{"type":"text","text":"의 특정 프로퍼티(KeyPath로 지정)를 읽고\/쓰는"},{"type":"text","text":" "},{"type":"text","text":"가벼운 팩토리 주입 도구입니다. 팩토리 인스턴스 자체를 관리하며,"},{"type":"text","text":" "},{"type":"text","text":"런타임에 팩토리를 교체할 수 있는 유연성을 제공합니다."}],"type":"paragraph"},{"anchor":"%ED%95%B5%EC%8B%AC-%ED%8A%B9%EC%A7%95","level":2,"type":"heading","text":"핵심 특징"},{"anchor":"%F0%9F%8F%AD-%ED%8C%A9%ED%86%A0%EB%A6%AC-%EA%B4%80%EB%A6%AC","level":3,"type":"heading","text":"🏭 팩토리 관리"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"런타임 교체","type":"text"}]},{"text":": 팩토리 인스턴스를 런타임에 동적 교체 가능","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"실시간 참조","type":"text"}]},{"text":": ","type":"text"},{"code":"FactoryValues.current","type":"codeVoice"},{"text":"를 통한 최신 팩토리 참조","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"타입 안전성"}],"type":"strong"},{"text":": KeyPath 기반 타입 안전한 팩토리 접근","type":"text"}],"type":"paragraph"}]}]},{"anchor":"%F0%9F%94%84-%EB%8F%99%EC%A0%81-%EC%84%A4%EC%A0%95","level":3,"type":"heading","text":"🔄 동적 설정"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"테스트 환경","type":"text"}]},{"type":"text","text":": 테스트용 Mock 팩토리로 쉽게 교체"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"A\/B 테스트"}]},{"text":": 다양한 팩토리 구현체 간 전환","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"환경별 설정"}]},{"text":": Development\/Staging\/Production 환경별 팩토리","type":"text"}]}]}]},{"anchor":"%F0%9F%94%92-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%95%88%EC%A0%84%EC%84%B1","level":3,"type":"heading","text":"🔒 동시성 안전성"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Thread-safe 접근","type":"text"}]},{"text":": NSLock 기반 동시성 안전성 보장","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Actor 호환"}],"type":"strong"},{"type":"text","text":": Swift Concurrency와 호환되는 nonisolated 접근"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"메모리 안전성"}],"type":"strong"},{"type":"text","text":": 자동 메모리 관리 및 참조 안전성"}]}]}]},{"anchor":"%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C","level":2,"type":"heading","text":"사용 예시"},{"anchor":"%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95","level":3,"type":"heading","text":"기본 사용법"},{"syntax":"swift","code":["final class MyViewModel {","    @Factory(\\.repositoryFactory)","    var repositoryFactory: RepositoryModuleFactory","","    @Factory(\\.useCaseFactory)","    var useCaseFactory: UseCaseModuleFactory","","    func configureServices() {","        \/\/ 팩토리를 사용해서 모듈 생성","        let repositories = repositoryFactory.makeAllModules()","        let useCases = useCaseFactory.makeAllModules()","","        \/\/ 각 모듈을 등록","        repositories.forEach { await $0.register() }","        useCases.forEach { await $0.register() }","    }","}"],"type":"codeListing"},{"anchor":"%EB%9F%B0%ED%83%80%EC%9E%84-%ED%8C%A9%ED%86%A0%EB%A6%AC-%EA%B5%90%EC%B2%B4","level":3,"type":"heading","text":"런타임 팩토리 교체"},{"syntax":"swift","code":["\/\/ 프로덕션 환경","FactoryValues.current.repositoryFactory = ProductionRepositoryModuleFactory()","","\/\/ 테스트 환경에서 Mock 팩토리로 교체","FactoryValues.current.repositoryFactory = MockRepositoryModuleFactory()","","final class TestableService {","    @Factory(\\.repositoryFactory)","    var factory: RepositoryModuleFactory  \/\/ 자동으로 최신 팩토리 참조","}"],"type":"codeListing"},{"anchor":"%ED%99%98%EA%B2%BD%EB%B3%84-%EC%84%A4%EC%A0%95","level":3,"type":"heading","text":"환경별 설정"},{"syntax":"swift","code":["final class AppConfigurationManager {","    static func configureDevelopmentFactories() {","        FactoryValues.current = FactoryValues(","            repositoryFactory: DevelopmentRepositoryModuleFactory(),","            useCaseFactory: DevelopmentUseCaseModuleFactory(),","            scopeFactory: DevelopmentScopeModuleFactory()","        )","    }","","    static func configureProductionFactories() {","        FactoryValues.current = FactoryValues(","            repositoryFactory: ProductionRepositoryModuleFactory(),","            useCaseFactory: ProductionUseCaseModuleFactory(),","            scopeFactory: ProductionScopeModuleFactory()","        )","    }","}"],"type":"codeListing"},{"anchor":"Factory-vs-Inject-%EB%B9%84%EA%B5%90","level":2,"type":"heading","text":"@Factory vs @Inject 비교"},{"rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"특징"}]}],[{"type":"paragraph","inlineContent":[{"text":"@Factory","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"@Inject","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"목적","type":"text"}]}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"팩토리 인스턴스 주입"}]}],[{"type":"paragraph","inlineContent":[{"text":"의존성 인스턴스 주입","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"관리 대상","type":"text"}]}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"FactoryValues"}]}],[{"type":"paragraph","inlineContent":[{"text":"UnifiedDI","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"교체 가능성"}],"type":"strong"}]}],[{"type":"paragraph","inlineContent":[{"text":"런타임 동적 교체","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"등록 시점 고정"}]}]],[[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"사용 사례"}],"type":"strong"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"팩토리 패턴, A\/B 테스트"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"일반적인 DI"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"성능","type":"text"}]}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"가벼움 (직접 참조)"}]}],[{"type":"paragraph","inlineContent":[{"text":"해결 오버헤드","type":"text"}]}]]],"header":"row","type":"table"},{"anchor":"%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%EA%B0%80%EC%9D%B4%EB%93%9C","level":2,"type":"heading","text":"마이그레이션 가이드"},{"anchor":"1x%EC%97%90%EC%84%9C-2x%EB%A1%9C","level":3,"type":"heading","text":"1.x에서 2.x로"},{"syntax":"swift","code":["\/\/ 1.x (기존)","@Factory(\\.repositoryFactory) var factory: RepositoryFactory","","\/\/ 2.x (개선됨)","@Factory(\\.repositoryFactory) var factory: RepositoryModuleFactory"],"type":"codeListing"}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"anchor":"핵심-컴포넌트","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"],"title":"핵심 컴포넌트"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory"},"references":{"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"title":"AppDIContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AppDIContainer"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppDIContainer"}],"url":"\/documentation\/dicontainer\/appdicontainer"},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"title":"RequiredInject","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","abstract":[{"text":"의존성을 필수적으로 해결하여 주입하는 프로퍼티 래퍼입니다.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/requiredinject","type":"topic"},"doc://DiContainer/documentation/DiContainer/Module":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","url":"\/documentation\/dicontainer\/module","abstract":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"type":"strong","inlineContent":[{"type":"text","text":"단일 모듈"}]},{"type":"text","text":"을 나타내는 구조체입니다."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Module","kind":"identifier"}],"type":"topic","kind":"symbol","title":"Module","navigatorTitle":[{"text":"Module","kind":"identifier"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/FactoryValues/current":{"url":"\/documentation\/dicontainer\/factoryvalues\/current","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"current","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FactoryValues","preciseIdentifier":"s:11DiContainer13FactoryValuesV","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Thread-safe access to the current factory values","type":"text"}],"role":"symbol","kind":"symbol","title":"current","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/current"},"doc://DiContainer/documentation/DiContainer/Factory":{"role":"symbol","type":"topic","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues"},{"type":"text","text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다."}],"kind":"symbol","title":"Factory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","url":"\/documentation\/dicontainer\/factory","navigatorTitle":[{"text":"Factory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","kind":"symbol","url":"\/documentation\/dicontainer\/dependencycontainer","title":"DependencyContainer","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/DI":{"title":"DI","navigatorTitle":[{"text":"DI","kind":"identifier"}],"url":"\/documentation\/dicontainer\/di","abstract":[{"type":"text","text":"단순화된 DI API - 사용자 혼란을 줄이기 위해 핵심 패턴만 제공"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DI","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","kind":"symbol","type":"topic"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/Factory/init(_:)":{"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11DiContainer13FactoryValuesV","text":"FactoryValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"type":"text","text":"주어진 KeyPath를 참조하는 프로퍼티 래퍼를 생성합니다."}],"kind":"symbol","url":"\/documentation\/dicontainer\/factory\/init(_:)","title":"init(_:)","type":"topic"},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","abstract":[{"text":"글로벌 통합 Registry 인스턴스","type":"text"},{"text":" ","type":"text"},{"text":"DependencyContainer.live에서 내부적으로 사용","type":"text"}],"title":"GlobalUnifiedRegistry","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GlobalUnifiedRegistry","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/dicontainer\/globalunifiedregistry","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Container":{"role":"symbol","title":"Container","kind":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"Container","kind":"identifier"}],"url":"\/documentation\/dicontainer\/container"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"type":"codeVoice","code":"UnifiedDI"},{"text":"와 ","type":"text"},{"type":"codeVoice","code":"DI"},{"text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요.","type":"text"}],"title":"통합 DI 시스템 - UnifiedDI vs DI","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","type":"topic","role":"article","url":"\/documentation\/dicontainer\/unifieddi"},"doc://DiContainer/documentation/DiContainer/Inject":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","navigatorTitle":[{"kind":"identifier","text":"Inject"}],"title":"Inject","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"의존성을 자동으로 해결하여 주입하는 프로퍼티 래퍼입니다."}],"url":"\/documentation\/dicontainer\/inject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Inject"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"FactoryValues","kind":"identifier"}],"title":"FactoryValues","type":"topic","url":"\/documentation\/dicontainer\/factoryvalues","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","abstract":[{"text":"A global container of factories used across the application.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryValues","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/ContainerPerformance":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","type":"topic","kind":"article","role":"article","title":"Container Performance","url":"\/documentation\/dicontainer\/containerperformance","abstract":[{"text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다.","type":"text"}]},"doc://DiContainer/documentation/DiContainer/Factory/wrappedValue":{"title":"wrappedValue","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory\/wrappedValue","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/dicontainer\/factory\/wrappedvalue","abstract":[{"type":"text","text":"저장된 keyPath를 사용해 "},{"type":"reference","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/current","isActive":true},{"type":"text","text":" 로부터 값을 반환합니다."}]},"doc://DiContainer/documentation/DiContainer/ContainerUsage":{"url":"\/documentation\/dicontainer\/containerusage","abstract":[{"text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다.","type":"text"}],"kind":"article","type":"topic","role":"article","title":"Container Usage","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage"}}}