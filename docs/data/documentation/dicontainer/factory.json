{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"seeAlsoSections":[{"anchor":"핵심-컴포넌트","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"],"title":"핵심 컴포넌트","generated":true}],"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues"},{"type":"text","text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"%EA%B0%9C%EC%9A%94","type":"heading","text":"개요"},{"inlineContent":[{"type":"codeVoice","code":"@Factory"},{"type":"text","text":"는 "},{"type":"codeVoice","code":"FactoryValues"},{"type":"text","text":"의 특정 프로퍼티(KeyPath로 지정)를 읽고\/쓰는"},{"type":"text","text":" "},{"type":"text","text":"가벼운 팩토리 주입 도구입니다. 팩토리 인스턴스 자체를 관리하며,"},{"type":"text","text":" "},{"type":"text","text":"런타임에 팩토리를 교체할 수 있는 유연성을 제공합니다."}],"type":"paragraph"},{"anchor":"%ED%95%B5%EC%8B%AC-%ED%8A%B9%EC%A7%95","type":"heading","level":2,"text":"핵심 특징"},{"anchor":"%F0%9F%8F%AD-%ED%8C%A9%ED%86%A0%EB%A6%AC-%EA%B4%80%EB%A6%AC","type":"heading","level":3,"text":"🏭 팩토리 관리"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"런타임 교체","type":"text"}],"type":"strong"},{"text":": 팩토리 인스턴스를 런타임에 동적 교체 가능","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"실시간 참조"}]},{"type":"text","text":": "},{"type":"codeVoice","code":"FactoryValues.current"},{"type":"text","text":"를 통한 최신 팩토리 참조"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"타입 안전성"}]},{"text":": KeyPath 기반 타입 안전한 팩토리 접근","type":"text"}]}]}]},{"anchor":"%F0%9F%94%84-%EB%8F%99%EC%A0%81-%EC%84%A4%EC%A0%95","level":3,"text":"🔄 동적 설정","type":"heading"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"테스트 환경"}],"type":"strong"},{"type":"text","text":": 테스트용 Mock 팩토리로 쉽게 교체"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"A\/B 테스트"}],"type":"strong"},{"type":"text","text":": 다양한 팩토리 구현체 간 전환"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"환경별 설정","type":"text"}]},{"type":"text","text":": Development\/Staging\/Production 환경별 팩토리"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","anchor":"%F0%9F%94%92-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%95%88%EC%A0%84%EC%84%B1","text":"🔒 동시성 안전성","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Thread-safe 접근"}]},{"type":"text","text":": NSLock 기반 동시성 안전성 보장"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Actor 호환"}]},{"type":"text","text":": Swift Concurrency와 호환되는 nonisolated 접근"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"메모리 안전성"}],"type":"strong"},{"text":": 자동 메모리 관리 및 참조 안전성","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C","text":"사용 예시","level":2},{"type":"heading","anchor":"%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95","text":"기본 사용법","level":3},{"type":"codeListing","syntax":"swift","code":["final class MyViewModel {","    @Factory(\\.repositoryFactory)","    var repositoryFactory: RepositoryModuleFactory","","    @Factory(\\.useCaseFactory)","    var useCaseFactory: UseCaseModuleFactory","","    func configureServices() {","        \/\/ 팩토리를 사용해서 모듈 생성","        let repositories = repositoryFactory.makeAllModules()","        let useCases = useCaseFactory.makeAllModules()","","        \/\/ 각 모듈을 등록","        repositories.forEach { await $0.register() }","        useCases.forEach { await $0.register() }","    }","}"]},{"type":"heading","anchor":"%EB%9F%B0%ED%83%80%EC%9E%84-%ED%8C%A9%ED%86%A0%EB%A6%AC-%EA%B5%90%EC%B2%B4","text":"런타임 팩토리 교체","level":3},{"type":"codeListing","syntax":"swift","code":["\/\/ 프로덕션 환경","FactoryValues.current.repositoryFactory = ProductionRepositoryModuleFactory()","","\/\/ 테스트 환경에서 Mock 팩토리로 교체","FactoryValues.current.repositoryFactory = MockRepositoryModuleFactory()","","final class TestableService {","    @Factory(\\.repositoryFactory)","    var factory: RepositoryModuleFactory  \/\/ 자동으로 최신 팩토리 참조","}"]},{"type":"heading","anchor":"%ED%99%98%EA%B2%BD%EB%B3%84-%EC%84%A4%EC%A0%95","text":"환경별 설정","level":3},{"type":"codeListing","syntax":"swift","code":["final class AppConfigurationManager {","    static func configureDevelopmentFactories() {","        FactoryValues.current = FactoryValues(","            repositoryFactory: DevelopmentRepositoryModuleFactory(),","            useCaseFactory: DevelopmentUseCaseModuleFactory(),","            scopeFactory: DevelopmentScopeModuleFactory()","        )","    }","","    static func configureProductionFactories() {","        FactoryValues.current = FactoryValues(","            repositoryFactory: ProductionRepositoryModuleFactory(),","            useCaseFactory: ProductionUseCaseModuleFactory(),","            scopeFactory: ProductionScopeModuleFactory()","        )","    }","}"]},{"type":"heading","anchor":"Factory-vs-Inject-%EB%B9%84%EA%B5%90","text":"@Factory vs @Inject 비교","level":2},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"text":"특징","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"@Factory","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"@Inject","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"목적"}],"type":"strong"}]}],[{"inlineContent":[{"type":"text","text":"팩토리 인스턴스 주입"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"의존성 인스턴스 주입"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"관리 대상"}]}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"FactoryValues"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"UnifiedDI"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"교체 가능성"}]}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"런타임 동적 교체"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"등록 시점 고정"}]}]],[[{"inlineContent":[{"inlineContent":[{"text":"사용 사례","type":"text"}],"type":"strong"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"팩토리 패턴, A\/B 테스트"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"일반적인 DI"}],"type":"paragraph"}]],[[{"inlineContent":[{"inlineContent":[{"text":"성능","type":"text"}],"type":"strong"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"가벼움 (직접 참조)"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"해결 오버헤드"}],"type":"paragraph"}]]],"header":"row"},{"anchor":"%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%EA%B0%80%EC%9D%B4%EB%93%9C","type":"heading","level":2,"text":"마이그레이션 가이드"},{"anchor":"1x%EC%97%90%EC%84%9C-2x%EB%A1%9C","type":"heading","level":3,"text":"1.x에서 2.x로"},{"type":"codeListing","syntax":"swift","code":["\/\/ 1.x (기존)","@Factory(\\.repositoryFactory) var factory: RepositoryFactory","","\/\/ 2.x (개선됨)","@Factory(\\.repositoryFactory) var factory: RepositoryModuleFactory"]}]}],"kind":"symbol","sections":[],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Factory\/init(_:)"],"title":"Initializers","generated":true},{"anchor":"Instance-Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Factory\/wrappedValue"],"title":"Instance Properties","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/factory"]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","interfaceLanguage":"swift"},"metadata":{"title":"Factory","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer7FactoryV","roleHeading":"Structure","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Factory"}]},"references":{"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"type":"topic","url":"\/documentation\/dicontainer\/dependencycontainer","title":"DependencyContainer","role":"symbol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer"},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","title":"RequiredInject","navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/requiredinject","type":"topic","abstract":[{"text":"의존성을 필수적으로 해결하여 주입하는 프로퍼티 래퍼입니다.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/DI":{"type":"topic","url":"\/documentation\/dicontainer\/di","title":"DI","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"DI","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DI","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","abstract":[{"type":"text","text":"단순화된 DI API - 사용자 혼란을 줄이기 위해 핵심 패턴만 제공"}]},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"role":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GlobalUnifiedRegistry","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"글로벌 통합 Registry 인스턴스"},{"type":"text","text":" "},{"type":"text","text":"DependencyContainer.live에서 내부적으로 사용"}],"kind":"symbol","title":"GlobalUnifiedRegistry","url":"\/documentation\/dicontainer\/globalunifiedregistry"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic","role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/ContainerPerformance":{"url":"\/documentation\/dicontainer\/containerperformance","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","title":"Container Performance","abstract":[{"type":"text","text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다."}],"type":"topic","role":"article","kind":"article"},"doc://DiContainer/documentation/DiContainer/Factory/init(_:)":{"title":"init(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory\/init(_:)","role":"symbol","abstract":[{"text":"주어진 KeyPath를 참조하는 프로퍼티 래퍼를 생성합니다.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"FactoryValues","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer13FactoryValuesV"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"url":"\/documentation\/dicontainer\/factory\/init(_:)","kind":"symbol","type":"topic"},"doc://DiContainer/documentation/DiContainer/Module":{"kind":"symbol","url":"\/documentation\/dicontainer\/module","title":"Module","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Module"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","abstract":[{"code":"Module","type":"codeVoice"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"inlineContent":[{"text":"단일 모듈","type":"text"}],"type":"strong"},{"type":"text","text":"을 나타내는 구조체입니다."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Module"}]},"doc://DiContainer/documentation/DiContainer/Factory":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"kind":"symbol","title":"Factory","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","type":"topic","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues"},{"text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다.","type":"text"}],"url":"\/documentation\/dicontainer\/factory"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","abstract":[{"type":"text","text":"A global container of factories used across the application."}],"type":"topic","role":"symbol","url":"\/documentation\/dicontainer\/factoryvalues","navigatorTitle":[{"text":"FactoryValues","kind":"identifier"}],"title":"FactoryValues"},"doc://DiContainer/documentation/DiContainer/Container":{"abstract":[],"role":"symbol","kind":"symbol","title":"Container","type":"topic","url":"\/documentation\/dicontainer\/container","navigatorTitle":[{"kind":"identifier","text":"Container"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}]},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"url":"\/documentation\/dicontainer\/appdicontainer","title":"AppDIContainer","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","kind":"symbol","navigatorTitle":[{"text":"AppDIContainer","kind":"identifier"}],"abstract":[],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","url":"\/documentation\/dicontainer\/unifieddi","role":"article","abstract":[{"type":"text","text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: "},{"type":"codeVoice","code":"UnifiedDI"},{"type":"text","text":"와 "},{"type":"codeVoice","code":"DI"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"title":"통합 DI 시스템 - UnifiedDI vs DI","kind":"article"},"doc://DiContainer/documentation/DiContainer/ContainerUsage":{"role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","title":"Container Usage","kind":"article","type":"topic","abstract":[{"text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다.","type":"text"}],"url":"\/documentation\/dicontainer\/containerusage"},"doc://DiContainer/documentation/DiContainer/Factory/wrappedValue":{"url":"\/documentation\/dicontainer\/factory\/wrappedvalue","kind":"symbol","type":"topic","title":"wrappedValue","abstract":[{"text":"저장된 keyPath를 사용해 ","type":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/current","isActive":true,"type":"reference"},{"text":" 로부터 값을 반환합니다.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory\/wrappedValue","role":"symbol"},"doc://DiContainer/documentation/DiContainer/Inject":{"role":"symbol","navigatorTitle":[{"text":"Inject","kind":"identifier"}],"abstract":[{"type":"text","text":"의존성을 자동으로 해결하여 주입하는 프로퍼티 래퍼입니다."}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inject","kind":"identifier"}],"type":"topic","title":"Inject","url":"\/documentation\/dicontainer\/inject"},"doc://DiContainer/documentation/DiContainer/FactoryValues/current":{"url":"\/documentation\/dicontainer\/factoryvalues\/current","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"current"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11DiContainer13FactoryValuesV","kind":"typeIdentifier","text":"FactoryValues"}],"abstract":[{"type":"text","text":"Thread-safe access to the current factory values"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/current","kind":"symbol","type":"topic","role":"symbol","title":"current"}}}