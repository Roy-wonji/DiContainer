{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"article","modules":[{"name":"DiContainer"}],"roleHeading":"Article","title":"App DI Integration"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"sections":[],"kind":"article","abstract":[{"type":"text","text":"애플리케이션 레벨에서 DI를 구성하고 부트스트랩하는 방법을 설명합니다."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/appdiintegration"]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIIntegration","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"SwiftUI-%EC%98%88%EC%8B%9C","text":"SwiftUI 예시"},{"code":["@main","struct MyApp: App {","  init() {","    Task { await DependencyContainer.bootstrap { c in","      c.register(LoggerProtocol.self) { ConsoleLogger() }","    }}","  }","  var body: some Scene { WindowGroup { ContentView() } }","}"],"syntax":"swift","type":"codeListing"},{"level":2,"type":"heading","anchor":"UIKitAppDelegate-%EC%98%88%EC%8B%9C","text":"UIKit(AppDelegate) 예시"},{"code":["@main","class AppDelegate: UIResponder, UIApplicationDelegate {","  func application(_ application: UIApplication,","                   didFinishLaunchingWithOptions opts: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","    Task { await DependencyContainer.bootstrapAsync { c in","      let db = await Database.initialize()","      c.register(Database.self, instance: db)","    }}","    return true","  }","}"],"syntax":"swift","type":"codeListing"}]}],"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}