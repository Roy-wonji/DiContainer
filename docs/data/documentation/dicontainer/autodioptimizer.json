{"seeAlsoSections":[{"identifiers":["doc:\/\/DiContainer\/tutorials\/DiContainer\/Tutorial-YourFirstDI","doc:\/\/DiContainer\/tutorials\/DiContainer\/Tutorial-MeetDiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"],"title":"시작하기","generated":true,"anchor":"시작하기"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"개요","anchor":"%EA%B0%9C%EC%9A%94"},{"type":"paragraph","inlineContent":[{"text":"DiContainer는 별도 설정 없이 자동으로 의존성 관계를 추적하고 성능을 최적화하는 시스템을 제공합니다. 개발자가 신경쓰지 않아도 백그라운드에서 자동으로 실행됩니다.","type":"text"}]},{"type":"heading","level":2,"text":"자동 기능들","anchor":"%EC%9E%90%EB%8F%99-%EA%B8%B0%EB%8A%A5%EB%93%A4"},{"type":"heading","level":3,"text":"🔄 자동 의존성 그래프 생성","anchor":"%F0%9F%94%84-%EC%9E%90%EB%8F%99-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%83%9D%EC%84%B1"},{"inlineContent":[{"text":"의존성을 등록하거나 해결할 때마다 자동으로 그래프가 업데이트됩니다.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ 등록하기만 하면 자동으로 그래프에 추가","let service = UnifiedDI.register(UserService.self) {","    UserServiceImpl()","}","","\/\/ 자동 생성된 그래프는 LogMacro로 자동 출력됩니다","\/\/ 별도 호출 불필요 - 자동 로깅: 📊 Auto tracking registration: UserService"],"type":"codeListing"},{"text":"🎯 자동 Actor Hop 감지 및 최적화","anchor":"%F0%9F%8E%AF-%EC%9E%90%EB%8F%99-Actor-Hop-%EA%B0%90%EC%A7%80-%EB%B0%8F-%EC%B5%9C%EC%A0%81%ED%99%94","type":"heading","level":3},{"inlineContent":[{"text":"의존성 해결 시 자동으로 Actor hop 패턴을 감지하고 최적화 제안을 제공합니다.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ 해결하기만 하면 자동으로 Actor hop 감지","let service = UnifiedDI.resolve(UserService.self)","","\/\/ 자동 로그 (5회 이상 hop 발생 시):","\/\/ 🎯 Actor optimization suggestion for UserService: MainActor로 이동 권장 (hops: 12, avg: 85.3ms)"],"type":"codeListing"},{"text":"🔒 자동 타입 안전성 검증","anchor":"%F0%9F%94%92-%EC%9E%90%EB%8F%99-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%84%EC%84%B1-%EA%B2%80%EC%A6%9D","type":"heading","level":3},{"inlineContent":[{"text":"런타임에서 타입 안전성 문제를 자동으로 감지하고 안전하게 처리합니다.","type":"text"}],"type":"paragraph"},{"code":["\/\/ 해결 시 자동으로 타입 안전성 검증","let service = UnifiedDI.resolve(UserService.self)","","\/\/ 자동 로그 (문제 감지 시):","\/\/ 🔒 Type safety issue: UserService is not Sendable","\/\/ 🚨 Auto safety check: UserService resolved to nil - dependency not registered"],"type":"codeListing","syntax":"swift"},{"text":"⚡ 자동 성능 최적화","anchor":"%E2%9A%A1-%EC%9E%90%EB%8F%99-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94","type":"heading","level":3},{"inlineContent":[{"text":"사용 패턴을 분석하여 자주 사용되는 타입을 자동으로 최적화합니다.","type":"text"}],"type":"paragraph"},{"code":["\/\/ 여러 번 사용하면 자동으로 최적화됨","for _ in 1...15 {","    let service = UnifiedDI.resolve(UserService.self)","}","","\/\/ 최적화된 타입들은 자동으로 로깅됩니다","\/\/ 자동 로그: ⚡ Auto optimized: UserService (10 uses)"],"type":"codeListing","syntax":"swift"},{"anchor":"%F0%9F%93%8A-%EC%9E%90%EB%8F%99-%EC%82%AC%EC%9A%A9-%ED%86%B5%EA%B3%84-%EC%88%98%EC%A7%91","text":"📊 자동 사용 통계 수집","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"각 타입의 사용 빈도가 자동으로 추적됩니다.","type":"text"}]},{"code":["\/\/ 사용 통계는 30초마다 자동으로 로깅됩니다","\/\/ 자동 로그: 📊 [AutoDI] Current stats: [\"UserService\": 15, \"DataRepository\": 8]"],"type":"codeListing","syntax":"swift"},{"anchor":"%E2%9A%A0%EF%B8%8F-%EC%9E%90%EB%8F%99-%EC%88%9C%ED%99%98-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B0%90%EC%A7%80","text":"⚠️ 자동 순환 의존성 감지","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"의존성 등록 시 순환 의존성을 자동으로 감지하고 경고합니다.","type":"text"}]},{"code":["\/\/ 순환 의존성이 있다면 자동으로 감지하고 에러 로깅","\/\/ 자동 로그: ⚠️ Auto detected circular dependencies: {ServiceA, ServiceB}"],"type":"codeListing","syntax":"swift"},{"text":"API 참조","anchor":"API-%EC%B0%B8%EC%A1%B0","type":"heading","level":2},{"type":"heading","level":3,"text":"자동 수집 정보 확인","anchor":"%EC%9E%90%EB%8F%99-%EC%88%98%EC%A7%91-%EC%A0%95%EB%B3%B4-%ED%99%95%EC%9D%B8"},{"type":"codeListing","code":["\/\/ 🔄 자동 생성된 의존성 그래프","UnifiedDI.autoGraph","","\/\/ ⚡ 자동 최적화된 타입들","UnifiedDI.optimizedTypes","","\/\/ 📊 자동 수집된 사용 통계","UnifiedDI.stats","","\/\/ ⚠️ 자동 감지된 순환 의존성","UnifiedDI.circularDependencies","","\/\/ 🎯 Actor 최적화 제안 목록","UnifiedDI.actorOptimizations","","\/\/ 🔒 타입 안전성 이슈 목록","UnifiedDI.typeSafetyIssues","","\/\/ 🛠️ 자동 수정된 타입들","UnifiedDI.autoFixedTypes","","\/\/ ⚡ Actor hop 통계","UnifiedDI.actorHopStats","","\/\/ 📊 비동기 성능 통계 (밀리초)","UnifiedDI.asyncPerformanceStats"],"syntax":"swift"},{"anchor":"%EC%B5%9C%EC%A0%81%ED%99%94-%EC%A0%9C%EC%96%B4","text":"최적화 제어","type":"heading","level":3},{"code":["\/\/ 자동 최적화 비활성화 (기본값: true)","UnifiedDI.setAutoOptimization(false)","","\/\/ 특정 타입의 최적화 상태 확인","UnifiedDI.isOptimized(UserService.self)","","\/\/ 통계 초기화","UnifiedDI.resetStats()"],"type":"codeListing","syntax":"swift"},{"anchor":"%EB%A1%9C%EA%B9%85-%EB%A0%88%EB%B2%A8-%EC%A0%9C%EC%96%B4","text":"로깅 레벨 제어","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"기본값","type":"text"}]},{"type":"text","text":": 모든 로그가 활성화되어 있습니다 ("},{"type":"codeVoice","code":".all"},{"type":"text","text":")"}]},{"anchor":"%EC%82%AC%EC%9A%A9-%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4%EB%B3%84-%EC%84%A4%EC%A0%95","text":"사용 시나리오별 설정:","type":"heading","level":4},{"code":["\/\/ ✅ 기본 상태: 모든 로그 출력 (권장)","\/\/ 📊 Auto tracking registration: UserService","\/\/ ⚡ Auto optimized: UserService (10 uses)","\/\/ 📊 [AutoDI] Current stats: {...}","","\/\/ 📝 등록된 의존성만 보고 싶은 경우","UnifiedDI.setLogLevel(.registration)","\/\/ 📊 Auto tracking registration: UserService (등록 로그만)","","\/\/ ⚡ 성능 최적화 정보만 보고 싶은 경우","UnifiedDI.setLogLevel(.optimization)","\/\/ ⚡ Auto optimized: UserService (10 uses) (최적화 로그만)","","\/\/ ⚠️ 순환 의존성 에러만 보고 싶은 경우","UnifiedDI.setLogLevel(.errors)","\/\/ ⚠️ Auto detected circular dependencies: {...} (에러만)","","\/\/ 🔇 모든 자동 로깅을 끄고 싶은 경우","UnifiedDI.setLogLevel(.off)","\/\/ (로그 없음)","","\/\/ 🔄 기본값으로 되돌리기","UnifiedDI.setLogLevel(.all)","","\/\/ 📋 현재 설정 확인","Log.debug(\"현재 로깅 레벨: \\(UnifiedDI.logLevel)\")"],"type":"codeListing","syntax":"swift"},{"anchor":"%EC%A3%BC%EC%9A%94-%ED%8A%B9%EC%A7%95","text":"주요 특징","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"무설정","type":"text"}],"type":"strong"},{"text":": 별도 설정 없이 자동으로 동작","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"백그라운드 실행","type":"text"}],"type":"strong"},{"text":": 성능에 영향 없이 백그라운드에서 실행","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"실시간 업데이트","type":"text"}]},{"text":": 30초마다 자동으로 최적화 수행","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"메모리 효율적","type":"text"}]},{"type":"text","text":": 상위 20개 타입만 캐시에 유지"}]}]}]},{"anchor":"%EC%84%B1%EB%8A%A5-%EC%98%81%ED%96%A5","text":"성능 영향","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"자동화 시스템은 성능에 최소한의 영향만 미치도록 설계되었습니다:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"등록\/해결 시 마이크로초 단위의 오버헤드만 발생"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"백그라운드에서 비동기로 실행"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"메모리 사용량 최적화"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"이 모든 기능은 개발자가 별도로 호출하거나 설정할 필요 없이 자동으로 실행됩니다.","type":"text"}]},{"anchor":"Deprecated-%EC%9D%BD%EA%B8%B0-API-%EC%95%88%EB%82%B4","text":"Deprecated 읽기 API 안내","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"아래 ","type":"text"},{"code":"AutoDIOptimizer","type":"codeVoice"},{"text":"의 읽기용 API는 내부 스냅샷 기반으로 재구성되었으며, 외부 사용은 비권장(Deprecated)입니다. 외부에서는 ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"text":" 또는 ","type":"text"},{"code":"DIContainer","type":"codeVoice"},{"text":"의 동기 헬퍼를 사용하세요.","type":"text"}]},{"type":"table","header":"row","rows":[[[{"inlineContent":[{"text":"Deprecated (AutoDIOptimizer)","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Replacement","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"getCurrentStats()"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"UnifiedDI.stats()"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"DIContainer.getUsageStatistics()"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"visualizeGraph()"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"UnifiedDI.autoGraph()"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"DIContainer.getAutoGeneratedGraph()"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"getFrequentlyUsedTypes()"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"UnifiedDI.optimizedTypes()"},{"type":"text","text":" \/ "},{"type":"codeVoice","code":"DIContainer.getOptimizedTypes()"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"code":"getDetectedCircularDependencies()","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnifiedDI.circularDependencies()"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"DIContainer.getDetectedCircularDependencies()"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isOptimized(_:)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnifiedDI.isOptimized(_:)"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"DIContainer.isAutoOptimized(_:)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"getActorOptimizationSuggestions()"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnifiedDI.actorOptimizations"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"getDetectedTypeSafetyIssues()"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnifiedDI.typeSafetyIssues"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"getDetectedAutoFixedTypes()"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnifiedDI.autoFixedTypes"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"getActorHopStats()"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnifiedDI.actorHopStats"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"getAsyncPerformanceStats()"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnifiedDI.asyncPerformanceStats"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"getRecentGraphChanges(...)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnifiedDI.getGraphChanges(...)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"getCurrentLogLevel()"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnifiedDI.logLevel"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"UnifiedDI.getLogLevel()"}]}]]]},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"내부 용도로는 ","type":"text"},{"type":"codeVoice","code":"AutoDIOptimizer.readSnapshot()"},{"text":"을 사용해 스냅샷을 읽고 필요한 정보를 계산하세요.","type":"text"}]}]}]}],"variants":[{"paths":["\/documentation\/dicontainer\/autodioptimizer"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"자동으로 의존성 그래프를 생성하고 성능을 최적화하는 시스템","type":"text"}],"sections":[],"metadata":{"role":"article","title":"자동 DI 최적화","modules":[{"name":"DiContainer"}],"roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer"},"references":{"doc://DiContainer/tutorials/DiContainer/Tutorial-MeetDiContainer":{"url":"\/tutorials\/dicontainer\/tutorial-meetdicontainer","kind":"project","title":"DiContainer 완전정복","type":"topic","abstract":[{"text":"이 튜토리얼에서는 DiContainer의 모든 핵심 기능을 체계적으로 학습합니다.","type":"text"},{"text":" ","type":"text"},{"text":"Property Wrapper부터 AppDIContainer까지, 실무에서 바로 사용할 수 있는 완전한 앱을 만들어보겠습니다.","type":"text"}],"estimatedTime":"25min","role":"project","identifier":"doc:\/\/DiContainer\/tutorials\/DiContainer\/Tutorial-MeetDiContainer"},"doc://DiContainer/documentation/DiContainer/DI":{"url":"\/documentation\/dicontainer\/di","navigatorTitle":[{"text":"DI","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","type":"topic","abstract":[{"text":"기존 DI API와의 호환성을 위한 별칭","type":"text"}],"kind":"symbol","title":"DI","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DI"}]},"doc://DiContainer/tutorials/DiContainer/Tutorial-YourFirstDI":{"url":"\/tutorials\/dicontainer\/tutorial-yourfirstdi","kind":"project","title":"첫 번째 의존성 주입 만들기","type":"topic","abstract":[{"text":"이 튜토리얼에서는 DiContainer를 사용하여 첫 번째 의존성 주입을 구현해보겠습니다.","type":"text"},{"text":" ","type":"text"},{"text":"UserService와 NetworkService를 만들고, Property Wrapper를 통해 주입받는 방법을 배워보겠습니다.","type":"text"}],"estimatedTime":"15min","role":"project","identifier":"doc:\/\/DiContainer\/tutorials\/DiContainer\/Tutorial-YourFirstDI"},"doc://DiContainer/documentation/DiContainer/Module":{"url":"\/documentation\/dicontainer\/module","navigatorTitle":[{"text":"Module","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","type":"topic","abstract":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"type":"strong","inlineContent":[{"text":"단일 모듈","type":"text"}]},{"text":"을 나타내는 구조체입니다.","type":"text"}],"kind":"symbol","title":"Module","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Module","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"title":"DependencyContainer","url":"\/documentation\/dicontainer\/dependencycontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","abstract":[{"text":"기존 DependencyContainer와의 호환성을 위한 별칭","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"DependencyContainer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}]},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"url":"\/documentation\/dicontainer\/unifieddi","kind":"article","title":"통합 DI 시스템 - UnifiedDI vs DI","type":"topic","abstract":[{"type":"text","text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: "},{"type":"codeVoice","code":"UnifiedDI"},{"type":"text","text":"와 "},{"type":"codeVoice","code":"DI"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"},"doc://DiContainer/documentation/DiContainer/Container":{"url":"\/documentation\/dicontainer\/container","kind":"symbol","title":"Container","navigatorTitle":[{"text":"Container","kind":"identifier"}],"type":"topic","abstract":[{"text":"기존 Container와의 호환성을 위한 별칭","type":"text"}],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AppDIContainer","kind":"identifier"}],"fragments":[{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"text":"AppDIContainer","kind":"identifier"}],"title":"AppDIContainer","abstract":[],"url":"\/documentation\/dicontainer\/appdicontainer","type":"topic"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[],"url":"\/documentation\/dicontainer","kind":"symbol","type":"topic","role":"collection"}}}