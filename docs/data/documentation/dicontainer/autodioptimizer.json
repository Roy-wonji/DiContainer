{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDIOptimizer","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"자동으로 의존성 그래프를 생성하고 성능을 최적화하는 시스템"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"%EA%B0%9C%EC%9A%94","text":"개요"},{"inlineContent":[{"text":"DiContainer는 별도 설정 없이 자동으로 의존성 관계를 추적하고 성능을 최적화하는 시스템을 제공합니다. 개발자가 신경쓰지 않아도 백그라운드에서 자동으로 실행됩니다.","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"%EC%9E%90%EB%8F%99-%EA%B8%B0%EB%8A%A5%EB%93%A4","text":"자동 기능들"},{"type":"heading","level":3,"anchor":"%F0%9F%94%84-%EC%9E%90%EB%8F%99-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B7%B8%EB%9E%98%ED%94%84-%EC%83%9D%EC%84%B1","text":"🔄 자동 의존성 그래프 생성"},{"inlineContent":[{"type":"text","text":"의존성을 등록하거나 해결할 때마다 자동으로 그래프가 업데이트됩니다."}],"type":"paragraph"},{"code":["\/\/ 등록하기만 하면 자동으로 그래프에 추가","let service = UnifiedDI.register(UserService.self) {","    UserServiceImpl()","}","","\/\/ 자동 생성된 그래프는 LogMacro로 자동 출력됩니다","\/\/ 별도 호출 불필요 - 자동 로깅: 📊 Auto tracking registration: UserService"],"syntax":"swift","type":"codeListing"},{"type":"heading","level":3,"anchor":"%F0%9F%8E%AF-%EC%9E%90%EB%8F%99-Actor-Hop-%EA%B0%90%EC%A7%80-%EB%B0%8F-%EC%B5%9C%EC%A0%81%ED%99%94","text":"🎯 자동 Actor Hop 감지 및 최적화"},{"inlineContent":[{"type":"text","text":"의존성 해결 시 자동으로 Actor hop 패턴을 감지하고 최적화 제안을 제공합니다."}],"type":"paragraph"},{"code":["\/\/ 해결하기만 하면 자동으로 Actor hop 감지","let service = UnifiedDI.resolve(UserService.self)","","\/\/ 자동 로그 (5회 이상 hop 발생 시):","\/\/ 🎯 Actor optimization suggestion for UserService: MainActor로 이동 권장 (hops: 12, avg: 85.3ms)"],"syntax":"swift","type":"codeListing"},{"text":"🔒 자동 타입 안전성 검증","anchor":"%F0%9F%94%92-%EC%9E%90%EB%8F%99-%ED%83%80%EC%9E%85-%EC%95%88%EC%A0%84%EC%84%B1-%EA%B2%80%EC%A6%9D","type":"heading","level":3},{"inlineContent":[{"text":"런타임에서 타입 안전성 문제를 자동으로 감지하고 안전하게 처리합니다.","type":"text"}],"type":"paragraph"},{"code":["\/\/ 해결 시 자동으로 타입 안전성 검증","let service = UnifiedDI.resolve(UserService.self)","","\/\/ 자동 로그 (문제 감지 시):","\/\/ 🔒 Type safety issue: UserService is not Sendable","\/\/ 🚨 Auto safety check: UserService resolved to nil - dependency not registered"],"syntax":"swift","type":"codeListing"},{"text":"⚡ 자동 성능 최적화","anchor":"%E2%9A%A1-%EC%9E%90%EB%8F%99-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"사용 패턴을 분석하여 자주 사용되는 타입을 자동으로 최적화합니다."}]},{"syntax":"swift","type":"codeListing","code":["\/\/ 여러 번 사용하면 자동으로 최적화됨","for _ in 1...15 {","    let service = UnifiedDI.resolve(UserService.self)","}","","\/\/ 최적화된 타입들은 자동으로 로깅됩니다","\/\/ 자동 로그: ⚡ Auto optimized: UserService (10 uses)"]},{"text":"📊 자동 사용 통계 수집","anchor":"%F0%9F%93%8A-%EC%9E%90%EB%8F%99-%EC%82%AC%EC%9A%A9-%ED%86%B5%EA%B3%84-%EC%88%98%EC%A7%91","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"각 타입의 사용 빈도가 자동으로 추적됩니다."}]},{"syntax":"swift","type":"codeListing","code":["\/\/ 사용 통계는 30초마다 자동으로 로깅됩니다","\/\/ 자동 로그: 📊 [AutoDI] Current stats: [\"UserService\": 15, \"DataRepository\": 8]"]},{"text":"⚠️ 자동 순환 의존성 감지","anchor":"%E2%9A%A0%EF%B8%8F-%EC%9E%90%EB%8F%99-%EC%88%9C%ED%99%98-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B0%90%EC%A7%80","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"의존성 등록 시 순환 의존성을 자동으로 감지하고 경고합니다."}]},{"syntax":"swift","type":"codeListing","code":["\/\/ 순환 의존성이 있다면 자동으로 감지하고 에러 로깅","\/\/ 자동 로그: ⚠️ Auto detected circular dependencies: {ServiceA, ServiceB}"]},{"text":"API 참조","anchor":"API-%EC%B0%B8%EC%A1%B0","type":"heading","level":2},{"text":"자동 수집 정보 확인","anchor":"%EC%9E%90%EB%8F%99-%EC%88%98%EC%A7%91-%EC%A0%95%EB%B3%B4-%ED%99%95%EC%9D%B8","type":"heading","level":3},{"syntax":"swift","type":"codeListing","code":["\/\/ 🔄 자동 생성된 의존성 그래프","UnifiedDI.autoGraph","","\/\/ ⚡ 자동 최적화된 타입들","UnifiedDI.optimizedTypes","","\/\/ 📊 자동 수집된 사용 통계","UnifiedDI.stats","","\/\/ ⚠️ 자동 감지된 순환 의존성","UnifiedDI.circularDependencies","","\/\/ 🎯 Actor 최적화 제안 목록","UnifiedDI.actorOptimizations","","\/\/ 🔒 타입 안전성 이슈 목록","UnifiedDI.typeSafetyIssues","","\/\/ 🛠️ 자동 수정된 타입들","UnifiedDI.autoFixedTypes","","\/\/ ⚡ Actor hop 통계","UnifiedDI.actorHopStats","","\/\/ 📊 비동기 성능 통계 (밀리초)","UnifiedDI.asyncPerformanceStats"]},{"text":"최적화 제어","anchor":"%EC%B5%9C%EC%A0%81%ED%99%94-%EC%A0%9C%EC%96%B4","type":"heading","level":3},{"syntax":"swift","type":"codeListing","code":["\/\/ 자동 최적화 비활성화 (기본값: true)","UnifiedDI.setAutoOptimization(false)","","\/\/ 특정 타입의 최적화 상태 확인","UnifiedDI.isOptimized(UserService.self)","","\/\/ 통계 초기화","UnifiedDI.resetStats()"]},{"text":"로깅 레벨 제어","anchor":"%EB%A1%9C%EA%B9%85-%EB%A0%88%EB%B2%A8-%EC%A0%9C%EC%96%B4","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"기본값","type":"text"}],"type":"strong"},{"type":"text","text":": 모든 로그가 활성화되어 있습니다 ("},{"type":"codeVoice","code":".all"},{"type":"text","text":")"}]},{"text":"사용 시나리오별 설정:","anchor":"%EC%82%AC%EC%9A%A9-%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4%EB%B3%84-%EC%84%A4%EC%A0%95","type":"heading","level":4},{"syntax":"swift","type":"codeListing","code":["\/\/ ✅ 기본 상태: 모든 로그 출력 (권장)","\/\/ 📊 Auto tracking registration: UserService","\/\/ ⚡ Auto optimized: UserService (10 uses)","\/\/ 📊 [AutoDI] Current stats: {...}","","\/\/ 📝 등록된 의존성만 보고 싶은 경우","UnifiedDI.setLogLevel(.registration)","\/\/ 📊 Auto tracking registration: UserService (등록 로그만)","","\/\/ ⚡ 성능 최적화 정보만 보고 싶은 경우","UnifiedDI.setLogLevel(.optimization)","\/\/ ⚡ Auto optimized: UserService (10 uses) (최적화 로그만)","","\/\/ ⚠️ 순환 의존성 에러만 보고 싶은 경우","UnifiedDI.setLogLevel(.errors)","\/\/ ⚠️ Auto detected circular dependencies: {...} (에러만)","","\/\/ 🔇 모든 자동 로깅을 끄고 싶은 경우","UnifiedDI.setLogLevel(.off)","\/\/ (로그 없음)","","\/\/ 🔄 기본값으로 되돌리기","UnifiedDI.setLogLevel(.all)","","\/\/ 📋 현재 설정 확인","Log.debug(\"현재 로깅 레벨: \\(UnifiedDI.logLevel)\")"]},{"text":"주요 특징","anchor":"%EC%A3%BC%EC%9A%94-%ED%8A%B9%EC%A7%95","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"무설정"}],"type":"strong"},{"text":": 별도 설정 없이 자동으로 동작","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"백그라운드 실행"}],"type":"strong"},{"text":": 성능에 영향 없이 백그라운드에서 실행","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"실시간 업데이트","type":"text"}],"type":"strong"},{"text":": 30초마다 자동으로 최적화 수행","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"메모리 효율적","type":"text"}],"type":"strong"},{"text":": 상위 20개 타입만 캐시에 유지","type":"text"}]}]}]},{"text":"성능 영향","anchor":"%EC%84%B1%EB%8A%A5-%EC%98%81%ED%96%A5","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"자동화 시스템은 성능에 최소한의 영향만 미치도록 설계되었습니다:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"등록\/해결 시 마이크로초 단위의 오버헤드만 발생","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"백그라운드에서 비동기로 실행","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"메모리 사용량 최적화","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 모든 기능은 개발자가 별도로 호출하거나 설정할 필요 없이 자동으로 실행됩니다."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/autodioptimizer"]}],"metadata":{"title":"자동 DI 최적화","role":"article","roleHeading":"Article","modules":[{"name":"DiContainer"}]},"sections":[],"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"anchor":"고급-기능","generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory"],"title":"고급 기능"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"title":"Module Factory","role":"article","url":"\/documentation\/dicontainer\/modulefactory","kind":"article","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory":{"title":"UseCaseModuleFactory","abstract":[{"text":"UseCase 계층 모듈 팩토리","type":"text"}],"url":"\/documentation\/dicontainer\/usecasemodulefactory","navigatorTitle":[{"text":"UseCaseModuleFactory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/ScopeModuleFactory":{"title":"ScopeModuleFactory","role":"symbol","url":"\/documentation\/dicontainer\/scopemodulefactory","kind":"symbol","abstract":[{"text":"Scope 계층 모듈 팩토리","type":"text"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScopeModuleFactory","kind":"identifier"}],"navigatorTitle":[{"text":"ScopeModuleFactory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/RepositoryModuleFactory":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RepositoryModuleFactory"}],"abstract":[{"type":"text","text":"Repository 계층 모듈 팩토리"}],"title":"RepositoryModuleFactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","url":"\/documentation\/dicontainer\/repositorymodulefactory","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RepositoryModuleFactory"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"}}}