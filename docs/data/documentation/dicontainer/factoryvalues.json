{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":1,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"FactoryValues"},{"type":"text","text":"는 앱 전역에서 사용하는 다양한 모듈 "},{"type":"strong","inlineContent":[{"type":"text","text":"Factory 인스턴스"}]},{"type":"text","text":"를"},{"type":"text","text":" "},{"type":"text","text":"한곳에서 관리하기 위한 경량 컨테이너입니다. 각 레이어(Repository, UseCase 등)의"},{"type":"text","text":" "},{"type":"text","text":"기본 Factory를 보관하고, 필요 시 런타임에 교체 할 수 있습니다."}],"type":"paragraph"},{"inlineContent":[{"text":"이 타입은 ","type":"text"},{"inlineContent":[{"text":"전역 싱글턴","type":"text"}],"type":"strong"},{"text":"(","type":"text"},{"type":"codeVoice","code":"FactoryValues.current"},{"text":") 접근을 제공합니다.","type":"text"},{"text":" ","type":"text"},{"text":"동기\/비동기 컨텍스트에서 모두 접근 가능하도록 ","type":"text"},{"type":"codeVoice","code":"nonisolated(unsafe)"},{"text":"로 노출됩니다.","type":"text"}],"type":"paragraph"},{"name":"Tip","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"테스트나 A\/B 구성 시 ","type":"text"},{"code":"FactoryValues.current","type":"codeVoice"},{"text":"를 교체해 의존성 주입을 간소화할 수 있습니다.","type":"text"}]}],"style":"tip","type":"aside"},{"level":2,"text":"Concurrency","anchor":"Concurrency","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"current"},{"type":"text","text":"는 "},{"type":"codeVoice","code":"nonisolated(unsafe)"},{"type":"text","text":"로 선언되어 액터 격리를 우회합니다."},{"type":"text","text":" "},{"type":"text","text":"멀티스레드 환경에서 **경합(race)**을 피하려면 앱 차원에서 교체 시점을 관리하거나"},{"type":"text","text":" "},{"type":"text","text":"별도의 동기화 전략을 적용하세요."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Availability","text":"Availability"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift 5.9+"}]}]},{"content":[{"inlineContent":[{"text":"iOS 17.0+","type":"text"}],"type":"paragraph"}]}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/factoryvalues"]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/repositoryFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/useCaseFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/scopeFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/current"],"anchor":"Topics"},{"title":"Initializers","generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/init(repositoryFactory:useCaseFactory:scopeFactory:)"],"anchor":"Initializers"}],"metadata":{"symbolKind":"struct","roleHeading":"Structure","modules":[{"name":"DiContainer"}],"title":"FactoryValues","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"externalID":"s:11DiContainer13FactoryValuesV","navigatorTitle":[{"kind":"identifier","text":"FactoryValues"}]},"seeAlsoSections":[{"title":"핵심 컴포넌트","generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","doc:\/\/DiContainer\/documentation\/DiContainer\/Container","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"],"anchor":"핵심-컴포넌트"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"A global container of factories used across the application."}],"references":{"doc://DiContainer/documentation/DiContainer/Module":{"kind":"symbol","url":"\/documentation\/dicontainer\/module","title":"Module","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Module"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","abstract":[{"code":"Module","type":"codeVoice"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"inlineContent":[{"text":"단일 모듈","type":"text"}],"type":"strong"},{"type":"text","text":"을 나타내는 구조체입니다."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Module"}]},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","title":"RequiredInject","navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/requiredinject","type":"topic","abstract":[{"text":"의존성을 필수적으로 해결하여 주입하는 프로퍼티 래퍼입니다.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/FactoryValues/init(repositoryFactory:useCaseFactory:scopeFactory:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/init(repositoryFactory:useCaseFactory:scopeFactory:)","url":"\/documentation\/dicontainer\/factoryvalues\/init(repositoryfactory:usecasefactory:scopefactory:)","kind":"symbol","title":"init(repositoryFactory:useCaseFactory:scopeFactory:)","abstract":[{"type":"text","text":"Creates a new set of factory values."}],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"repositoryFactory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RepositoryModuleFactory","preciseIdentifier":"s:11DiContainer23RepositoryModuleFactoryV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"useCaseFactory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UseCaseModuleFactory","preciseIdentifier":"s:11DiContainer20UseCaseModuleFactoryV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"scopeFactory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ScopeModuleFactory","preciseIdentifier":"s:11DiContainer18ScopeModuleFactoryV","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic","role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/FactoryValues/useCaseFactory":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"useCaseFactory","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11DiContainer20UseCaseModuleFactoryV","text":"UseCaseModuleFactory","kind":"typeIdentifier"}],"url":"\/documentation\/dicontainer\/factoryvalues\/usecasefactory","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The default instance of use-case–layer factory."}],"title":"useCaseFactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/useCaseFactory","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/FactoryValues/current":{"url":"\/documentation\/dicontainer\/factoryvalues\/current","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"current"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11DiContainer13FactoryValuesV","kind":"typeIdentifier","text":"FactoryValues"}],"abstract":[{"type":"text","text":"Thread-safe access to the current factory values"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/current","kind":"symbol","type":"topic","role":"symbol","title":"current"},"doc://DiContainer/documentation/DiContainer/Inject":{"role":"symbol","navigatorTitle":[{"text":"Inject","kind":"identifier"}],"abstract":[{"type":"text","text":"의존성을 자동으로 해결하여 주입하는 프로퍼티 래퍼입니다."}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inject","kind":"identifier"}],"type":"topic","title":"Inject","url":"\/documentation\/dicontainer\/inject"},"doc://DiContainer/documentation/DiContainer/DI":{"type":"topic","url":"\/documentation\/dicontainer\/di","title":"DI","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"DI","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DI","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","abstract":[{"type":"text","text":"단순화된 DI API - 사용자 혼란을 줄이기 위해 핵심 패턴만 제공"}]},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","url":"\/documentation\/dicontainer\/unifieddi","role":"article","abstract":[{"type":"text","text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: "},{"type":"codeVoice","code":"UnifiedDI"},{"type":"text","text":"와 "},{"type":"codeVoice","code":"DI"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"title":"통합 DI 시스템 - UnifiedDI vs DI","kind":"article"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"type":"topic","url":"\/documentation\/dicontainer\/dependencycontainer","title":"DependencyContainer","role":"symbol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer"},"doc://DiContainer/documentation/DiContainer/FactoryValues/scopeFactory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/scopeFactory","url":"\/documentation\/dicontainer\/factoryvalues\/scopefactory","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeFactory","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScopeModuleFactory","preciseIdentifier":"s:11DiContainer18ScopeModuleFactoryV","kind":"typeIdentifier"}],"title":"scopeFactory","abstract":[{"type":"text","text":"The default instance of dependency-scope factory."}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/FactoryValues/repositoryFactory":{"title":"repositoryFactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues\/repositoryFactory","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"repositoryFactory","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RepositoryModuleFactory","preciseIdentifier":"s:11DiContainer23RepositoryModuleFactoryV","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"The default instance of repository-layer factory."}],"url":"\/documentation\/dicontainer\/factoryvalues\/repositoryfactory"},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"role":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GlobalUnifiedRegistry","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"글로벌 통합 Registry 인스턴스"},{"type":"text","text":" "},{"type":"text","text":"DependencyContainer.live에서 내부적으로 사용"}],"kind":"symbol","title":"GlobalUnifiedRegistry","url":"\/documentation\/dicontainer\/globalunifiedregistry"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"url":"\/documentation\/dicontainer\/appdicontainer","title":"AppDIContainer","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","kind":"symbol","navigatorTitle":[{"text":"AppDIContainer","kind":"identifier"}],"abstract":[],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/Factory":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"kind":"symbol","title":"Factory","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","type":"topic","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues"},{"text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다.","type":"text"}],"url":"\/documentation\/dicontainer\/factory"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","abstract":[{"type":"text","text":"A global container of factories used across the application."}],"type":"topic","role":"symbol","url":"\/documentation\/dicontainer\/factoryvalues","navigatorTitle":[{"text":"FactoryValues","kind":"identifier"}],"title":"FactoryValues"},"doc://DiContainer/documentation/DiContainer/ContainerPerformance":{"url":"\/documentation\/dicontainer\/containerperformance","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","title":"Container Performance","abstract":[{"type":"text","text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다."}],"type":"topic","role":"article","kind":"article"},"doc://DiContainer/documentation/DiContainer/Container":{"abstract":[],"role":"symbol","kind":"symbol","title":"Container","type":"topic","url":"\/documentation\/dicontainer\/container","navigatorTitle":[{"kind":"identifier","text":"Container"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}]},"doc://DiContainer/documentation/DiContainer/ContainerUsage":{"role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","title":"Container Usage","kind":"article","type":"topic","abstract":[{"text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다.","type":"text"}],"url":"\/documentation\/dicontainer\/containerusage"}}}