{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"type":"strong","inlineContent":[{"type":"text","text":"단일 모듈"}]},{"type":"text","text":"을 나타내는 구조체입니다."}],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Module\/init(_:factory:)"],"anchor":"Initializers","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Module\/register()"],"anchor":"Instance-Methods","generated":true},{"title":"Default Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Module\/Actor-Implementations"],"anchor":"Default-Implementations","generated":true}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/ScA"],"type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Module"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"등록할 의존성 타입 (예: "},{"type":"codeVoice","code":"AuthRepositoryProtocol.self"},{"type":"text","text":")"}]}],"name":"type"},{"content":[{"inlineContent":[{"type":"text","text":"해당 타입의 인스턴스를 생성하는 클로저. "},{"type":"codeVoice","code":"@Sendable"},{"type":"text","text":" 필수."}],"type":"paragraph"}],"name":"factory"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"이 타입을 사용하면, 특정 타입의 인스턴스를 "},{"type":"codeVoice","code":"DependencyContainer"},{"type":"text","text":"에"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"비동기적으로 등록"}]},{"type":"text","text":"하는 작업을 하나의 객체로 캡슐화할 수 있습니다."}],"type":"paragraph"},{"level":2,"anchor":"Declaration","type":"heading","text":"Declaration"},{"syntax":"swift","code":["public struct Module: Sendable {","    public init<T>(","        _ type: T.Type,","        factory: @escaping @Sendable () -> T","    )","","    public func register() async","}"],"type":"codeListing"},{"name":"Note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"factory"},{"text":" 파라미터는 반드시 ","type":"text"},{"type":"codeVoice","code":"@Sendable"},{"text":"로 선언하여 스레드 안정성을 보장해야 합니다.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"},{"level":2,"anchor":"Stored-Properties","type":"heading","text":"Stored Properties"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"registrationClosure","type":"codeVoice"},{"text":":","type":"text"},{"text":" ","type":"text"},{"text":"내부에 저장된 비동기 클로저로, ","type":"text"},{"code":"register()","type":"codeVoice"},{"text":" 호출 시 실행됩니다.","type":"text"},{"text":" ","type":"text"},{"text":"생성 시 전달받은 ","type":"text"},{"code":"(type, factory)","type":"codeVoice"},{"text":" 정보를 기반으로","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DependencyContainer.live.register(type, build: factory)"},{"type":"text","text":"를 호출하도록 구성됩니다."}]}]}]},{"level":2,"anchor":"Initializers","type":"heading","text":"Initializers"},{"level":3,"anchor":"initfactory","type":"heading","text":"`init(_:factory:)`"},{"inlineContent":[{"type":"text","text":"주어진 타입과 팩토리 클로저를 사용해 "},{"code":"Module","type":"codeVoice"},{"type":"text","text":" 인스턴스를 초기화합니다."}],"type":"paragraph"},{"syntax":"swift","code":["public init<T>(","    _ type: T.Type,","    factory: @escaping @Sendable () -> T",")"],"type":"codeListing"},{"name":"Important","content":[{"inlineContent":[{"text":"생성된 ","type":"text"},{"type":"codeVoice","code":"Module"},{"text":"은 ","type":"text"},{"type":"codeVoice","code":"register()"},{"text":"를 호출해야만 DI 컨테이너에 등록됩니다.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"important"},{"level":2,"anchor":"Instance-Methods","type":"heading","text":"Instance Methods"},{"level":3,"anchor":"register","type":"heading","text":"`register()`"},{"inlineContent":[{"text":"저장된 ","type":"text"},{"code":"registrationClosure","type":"codeVoice"},{"text":"를 실행하여 DI 컨테이너에 의존성을 등록합니다.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["public func register() async"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Concurrency: 비동기 메서드이므로 호출 간 다른 작업이 스케줄링될 수 있습니다.","type":"text"}],"type":"paragraph"}]}]},{"name":"Important","content":[{"inlineContent":[{"text":"반드시 ","type":"text"},{"code":"await","type":"codeVoice"},{"text":" 키워드와 함께 호출해야 하며,","type":"text"},{"text":" ","type":"text"},{"text":"등록이 완료될 때까지 비동기적으로 대기합니다.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"important"},{"level":4,"anchor":"Example","type":"heading","text":"Example"},{"syntax":"swift","code":["\/\/ 1) Module 생성","let networkModule = Module(","    NetworkServiceProtocol.self,","    factory: { DefaultNetworkService() }",")","","\/\/ 2) Module 등록","Task {","    await networkModule.register()","    \/\/ 이후 의존성 사용","    let service: NetworkServiceProtocol =","        DependencyContainer.live.resolve(NetworkServiceProtocol.self)!","    await service.request(...)","}"],"type":"codeListing"},{"level":2,"anchor":"Example-%EC%A0%84%EC%B2%B4-%ED%9D%90%EB%A6%84","type":"heading","text":"Example – 전체 흐름"},{"inlineContent":[{"type":"text","text":"아래는 "},{"type":"codeVoice","code":"UserServiceProtocol"},{"type":"text","text":" 타입을 DI 컨테이너에 등록하는 예시입니다."}],"type":"paragraph"},{"syntax":"swift","code":["import DiContainer","","protocol UserServiceProtocol {","    func fetchUser(id: String) async -> User?","}","","struct DefaultUserService: UserServiceProtocol {","    func fetchUser(id: String) async -> User? {","        return User(id: id, name: \"Test User\")","    }","}","","extension AppDIContainer {","    public func registerUserServiceModule() async {","        let userServiceModule = Module(","            UserServiceProtocol.self,","            factory: { DefaultUserService() }","        )","","        await registerDependencies { container in","            await container.register(userServiceModule)","        }","    }","}","","import SwiftUI","","@main","struct MyApp: App {","    init() {","        Task {","            await AppDIContainer.shared.registerUserServiceModule()","        }","    }","","    var body: some Scene {","        WindowGroup {","            ContentView()","        }","    }","}"],"type":"codeListing"},{"level":2,"anchor":"Relationships","type":"heading","text":"Relationships"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Conforms to: "},{"type":"codeVoice","code":"Sendable"}],"type":"paragraph"}]}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/dicontainer\/module"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"Module","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"Module"}],"role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Module","kind":"identifier"}],"externalID":"s:11DiContainer6ModuleC","symbolKind":"class","modules":[{"name":"DiContainer"}]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer"],"anchor":"Related-Documentation"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer/Module/register()":{"role":"symbol","url":"\/documentation\/dicontainer\/module\/register()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"title":"register()","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module\/register()","abstract":[{"text":"저장된 ","type":"text"},{"code":"registrationClosure","type":"codeVoice"},{"text":"를 실행하여, 비동기적으로 의존성을 DI 컨테이너에 등록합니다.","type":"text"}]},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"abstract":[{"type":"text","text":"애플리케이션 전역에서 의존성을 "},{"type":"strong","inlineContent":[{"type":"text","text":"등록·조회·해제"}]},{"text":"할 수 있는","type":"text"},{"text":" ","type":"text"},{"text":"스레드-세이프 DI 컨테이너입니다.","type":"text"}],"title":"DependencyContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","url":"\/documentation\/dicontainer\/dependencycontainer","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"role":"symbol"},"doc://DiContainer/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/DiContainer\/ScA","type":"unresolvable"},"doc://DiContainer/documentation/DiContainer/Module":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","type":"topic","url":"\/documentation\/dicontainer\/module","kind":"symbol","title":"Module","role":"symbol","abstract":[{"code":"Module","type":"codeVoice"},{"text":"은 DI(의존성 주입)를 위한 ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"단일 모듈"}]},{"text":"을 나타내는 구조체입니다.","type":"text"}],"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Module","kind":"identifier"}],"navigatorTitle":[{"text":"Module","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Module/Actor-Implementations":{"title":"Actor Implementations","url":"\/documentation\/dicontainer\/module\/actor-implementations","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module\/Actor-Implementations","type":"topic"},"doc://DiContainer/documentation/DiContainer/Module/init(_:factory:)":{"role":"symbol","url":"\/documentation\/dicontainer\/module\/init(_:factory:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:factory:)","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module\/init(_:factory:)","abstract":[{"type":"text","text":"Module 생성자"}]},"doc://DiContainer/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/DiContainer\/s8SendableP","type":"unresolvable"}}}