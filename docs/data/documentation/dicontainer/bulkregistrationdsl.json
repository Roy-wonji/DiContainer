{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/bulkregistrationdsl"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"인터페이스 패턴 한번에 등록","anchor":"%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%8C%A8%ED%84%B4-%ED%95%9C%EB%B2%88%EC%97%90-%EB%93%B1%EB%A1%9D"},{"type":"codeListing","code":["let entries = registerModule.registerInterfacePattern(","  BookListInterface.self,","  repositoryFactory: { BookListRepositoryImpl() },","  useCaseFactory: { BookListUseCaseImpl(repository: $0) },","  repositoryFallback: { DefaultBookListRepositoryImpl() }",")"],"syntax":"swift"},{"type":"heading","level":2,"text":"Bulk DSL","anchor":"Bulk-DSL"},{"type":"codeListing","code":["let modules = registerModule.bulkInterfaces {","  BookListInterface.self => (","    repository: { BookListRepositoryImpl() },","    useCase: { BookListUseCaseImpl(repository: $0) },","    fallback: { DefaultBookListRepositoryImpl() }","  )","}"],"syntax":"swift"},{"type":"heading","level":2,"text":"Easy Scope","anchor":"Easy-Scope"},{"type":"codeListing","code":["let modules = registerModule.easyScopes {","  register(UserService.self) { UserServiceImpl() }","  register(NetworkService.self) { NetworkServiceImpl() }","}"],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/BulkRegistrationDSL","interfaceLanguage":"swift"},"kind":"article","abstract":[{"type":"text","text":"대량 등록과 DSL을 사용하여 간결하게 의존성을 구성할 수 있습니다."}],"sections":[],"metadata":{"roleHeading":"Article","title":"Bulk Registration & DSL","role":"article","modules":[{"name":"DiContainer"}]},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"}}}