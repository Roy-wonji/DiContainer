{"seeAlsoSections":[{"anchor":"실무-가이드","title":"실무 가이드","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers"],"generated":true}],"abstract":[{"type":"text","text":"대량 등록과 DSL을 사용하여 간결하게 의존성을 구성할 수 있습니다."}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"kind":"article","metadata":{"title":"Bulk Registration & DSL","modules":[{"name":"DiContainer"}],"roleHeading":"Article","role":"article"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/bulkregistrationdsl"]}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%8C%A8%ED%84%B4-%ED%95%9C%EB%B2%88%EC%97%90-%EB%93%B1%EB%A1%9D","text":"인터페이스 패턴 한번에 등록"},{"type":"codeListing","code":["let entries = registerModule.registerInterfacePattern(","  BookListInterface.self,","  repositoryFactory: { BookListRepositoryImpl() },","  useCaseFactory: { BookListUseCaseImpl(repository: $0) },","  repositoryFallback: { DefaultBookListRepositoryImpl() }",")"],"syntax":"swift"},{"text":"Bulk DSL","anchor":"Bulk-DSL","type":"heading","level":2},{"type":"codeListing","code":["let modules = registerModule.bulkInterfaces {","  BookListInterface.self => (","    repository: { BookListRepositoryImpl() },","    useCase: { BookListUseCaseImpl(repository: $0) },","    fallback: { DefaultBookListRepositoryImpl() }","  )","}"],"syntax":"swift"},{"text":"Easy Scope","anchor":"Easy-Scope","type":"heading","level":2},{"type":"codeListing","code":["let modules = registerModule.easyScopes {","  register(UserService.self) { UserServiceImpl() }","  register(NetworkService.self) { NetworkServiceImpl() }","}"],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/BulkRegistrationDSL","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/PropertyWrappers":{"title":"Property Wrapper 가이드","role":"article","abstract":[{"type":"text","text":"DiContainer의 강력한 Property Wrapper들을 활용하여 선언적이고 타입 안전한 의존성 주입을 구현하는 방법"}],"kind":"article","url":"\/documentation\/dicontainer\/propertywrappers","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"title":"Module Factory","role":"article","url":"\/documentation\/dicontainer\/modulefactory","kind":"article","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory"}}}