{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/BulkRegistrationDSL","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"text":"인터페이스 패턴 한번에 등록","level":2,"type":"heading","anchor":"%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%8C%A8%ED%84%B4-%ED%95%9C%EB%B2%88%EC%97%90-%EB%93%B1%EB%A1%9D"},{"code":["let entries = registerModule.registerInterfacePattern(","  BookListInterface.self,","  repositoryFactory: { BookListRepositoryImpl() },","  useCaseFactory: { BookListUseCaseImpl(repository: $0) },","  repositoryFallback: { DefaultBookListRepositoryImpl() }",")"],"syntax":"swift","type":"codeListing"},{"text":"Bulk DSL","level":2,"type":"heading","anchor":"Bulk-DSL"},{"code":["let modules = registerModule.bulkInterfaces {","  BookListInterface.self => (","    repository: { BookListRepositoryImpl() },","    useCase: { BookListUseCaseImpl(repository: $0) },","    fallback: { DefaultBookListRepositoryImpl() }","  )","}"],"syntax":"swift","type":"codeListing"},{"text":"Easy Scope","level":2,"type":"heading","anchor":"Easy-Scope"},{"code":["let modules = registerModule.easyScopes {","  register(UserService.self) { UserServiceImpl() }","  register(NetworkService.self) { NetworkServiceImpl() }","}"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/bulkregistrationdsl"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"metadata":{"roleHeading":"Article","modules":[{"name":"DiContainer"}],"role":"article","title":"Bulk Registration & DSL"},"abstract":[{"type":"text","text":"대량 등록과 DSL을 사용하여 간결하게 의존성을 구성할 수 있습니다."}],"kind":"article","sections":[],"seeAlsoSections":[{"generated":true,"anchor":"실무-가이드","title":"실무 가이드","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoResolution","doc:\/\/DiContainer\/documentation\/DiContainer\/PluginSystem","doc:\/\/DiContainer\/documentation\/DiContainer\/LegacyAPIs","doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://DiContainer/documentation/DiContainer/LegacyAPIs":{"url":"\/documentation\/dicontainer\/legacyapis","kind":"article","type":"topic","title":"Legacy APIs & Migration","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/LegacyAPIs","abstract":[{"type":"text","text":"일부 레거시 API는 UnifiedDI\/UnifiedRegistry 기반으로 수렴되었습니다. 기존 코드를 다음 치트시트에 따라 전환하세요."}]},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/AutoResolution":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoResolution","url":"\/documentation\/dicontainer\/autoresolution","title":"자동 의존성 해결","type":"topic","abstract":[{"text":"DiContainer의 강력한 자동 의존성 해결 시스템을 활용하여 리플렉션 기반의 자동 주입을 구현하는 방법","type":"text"}],"kind":"article","role":"article"},"doc://DiContainer/documentation/DiContainer/PropertyWrappers":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers","url":"\/documentation\/dicontainer\/propertywrappers","title":"Property Wrapper 가이드","type":"topic","abstract":[{"text":"DiContainer의 강력한 Property Wrapper들을 활용하여 선언적이고 타입 안전한 의존성 주입을 구현하는 방법","type":"text"}],"kind":"article","role":"article"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","url":"\/documentation\/dicontainer\/modulefactory","title":"Module Factory","type":"topic","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"kind":"article","role":"article"},"doc://DiContainer/documentation/DiContainer/PluginSystem":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/PluginSystem","url":"\/documentation\/dicontainer\/pluginsystem","title":"플러그인 시스템","type":"topic","abstract":[{"text":"DiContainer의 강력한 플러그인 아키텍처를 사용하여 의존성 주입 과정을 커스터마이징하고 확장하는 방법","type":"text"}],"kind":"article","role":"article"}}}