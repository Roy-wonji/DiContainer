{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers"],"title":"실무 가이드","anchor":"실무-가이드"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/BulkRegistrationDSL"},"abstract":[{"text":"대량 등록과 DSL을 사용하여 간결하게 의존성을 구성할 수 있습니다.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"text":"인터페이스 패턴 한번에 등록","type":"heading","anchor":"%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%8C%A8%ED%84%B4-%ED%95%9C%EB%B2%88%EC%97%90-%EB%93%B1%EB%A1%9D","level":2},{"type":"codeListing","syntax":"swift","code":["let entries = registerModule.registerInterfacePattern(","  BookListInterface.self,","  repositoryFactory: { BookListRepositoryImpl() },","  useCaseFactory: { BookListUseCaseImpl(repository: $0) },","  repositoryFallback: { DefaultBookListRepositoryImpl() }",")"]},{"text":"Bulk DSL","type":"heading","anchor":"Bulk-DSL","level":2},{"type":"codeListing","syntax":"swift","code":["let modules = registerModule.bulkInterfaces {","  BookListInterface.self => (","    repository: { BookListRepositoryImpl() },","    useCase: { BookListUseCaseImpl(repository: $0) },","    fallback: { DefaultBookListRepositoryImpl() }","  )","}"]},{"text":"Easy Scope","type":"heading","anchor":"Easy-Scope","level":2},{"type":"codeListing","syntax":"swift","code":["let modules = registerModule.easyScopes {","  register(UserService.self) { UserServiceImpl() }","  register(NetworkService.self) { NetworkServiceImpl() }","}"]}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/bulkregistrationdsl"]}],"metadata":{"roleHeading":"Article","role":"article","title":"Bulk Registration & DSL","modules":[{"name":"DiContainer"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/PropertyWrappers":{"abstract":[{"text":"DiContainer의 강력한 Property Wrapper들을 활용하여 선언적이고 타입 안전한 의존성 주입을 구현하는 방법","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers","role":"article","kind":"article","title":"Property Wrapper 가이드","type":"topic","url":"\/documentation\/dicontainer\/propertywrappers"},"doc://DiContainer/documentation/DiContainer":{"abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","title":"DiContainer","type":"topic","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"type":"topic","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","url":"\/documentation\/dicontainer\/modulefactory","abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"title":"Module Factory","kind":"article"}}}