{"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()"],"generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/isEmpty","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/moduleCount"],"generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/build()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildThrowing()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithMetrics()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithProgress(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithResults()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/callAsFunction(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/getModuleTypeNames()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/register(_:)"],"generated":true},{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/Actor-Implementations"],"generated":true}],"sections":[],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/ScA"],"type":"conformsTo"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"개요","level":2,"anchor":"%EA%B0%9C%EC%9A%94"},{"inlineContent":[{"code":"Container","type":"codeVoice"},{"text":"는 여러 개의 ","type":"text"},{"code":"Module","type":"codeVoice"},{"text":" 인스턴스를 수집하고 일괄 등록할 수 있는","type":"text"},{"text":" ","type":"text"},{"text":"Swift Concurrency 기반의 액터입니다. 이 컨테이너는 대규모 의존성 그래프를","type":"text"},{"text":" ","type":"text"},{"text":"효율적으로 관리하고 병렬 처리를 통해 성능을 최적화합니다.","type":"text"}],"type":"paragraph"},{"type":"heading","text":"핵심 특징","level":2,"anchor":"%ED%95%B5%EC%8B%AC-%ED%8A%B9%EC%A7%95"},{"type":"heading","text":"⚡ 고성능 병렬 처리","level":3,"anchor":"%E2%9A%A1-%EA%B3%A0%EC%84%B1%EB%8A%A5-%EB%B3%91%EB%A0%AC-%EC%B2%98%EB%A6%AC"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Task Group 활용"}],"type":"strong"},{"type":"text","text":": 모든 모듈의 등록을 동시에 병렬 실행"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"스냅샷 기반"}],"type":"strong"},{"text":": 내부 배열을 복사하여 actor hop 최소화","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"비동기 안전","type":"text"}]},{"type":"text","text":": Swift Concurrency 패턴으로 스레드 안전성 보장"}]}]}]},{"type":"heading","text":"🏗️ 배치 등록 시스템","level":3,"anchor":"%F0%9F%8F%97%EF%B8%8F-%EB%B0%B0%EC%B9%98-%EB%93%B1%EB%A1%9D-%EC%8B%9C%EC%8A%A4%ED%85%9C"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"모듈 수집","type":"text"}]},{"text":": 여러 모듈을 먼저 수집한 후 한 번에 등록","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"지연 실행"}],"type":"strong"},{"text":": ","type":"text"},{"code":"build()","type":"codeVoice"},{"text":" 호출 시점까지 실제 등록 지연","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"원자적 처리","type":"text"}]},{"text":": 모든 모듈이 함께 등록되거나 실패","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"🔒 동시성 안전성","level":3,"anchor":"%F0%9F%94%92-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%95%88%EC%A0%84%EC%84%B1"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Actor 보호"}]},{"type":"text","text":": 내부 상태("},{"type":"codeVoice","code":"modules"},{"type":"text","text":")가 데이터 경쟁으로부터 안전"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"순서 독립"}]},{"text":": 모듈 등록 순서와 무관하게 동작","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"메모리 안전"}]},{"text":": 약한 참조 없이도 안전한 메모리 관리","type":"text"}]}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/container"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"metadata":{"fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"roleHeading":"Class","modules":[{"name":"DiContainer"}],"navigatorTitle":[{"text":"Container","kind":"identifier"}],"externalID":"s:11DiContainer0B0C","role":"symbol","title":"Container","symbolKind":"class"},"seeAlsoSections":[{"title":"Core Components","anchor":"Core-Components","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"],"generated":true}],"references":{"doc://DiContainer/documentation/DiContainer/Factory":{"type":"topic","abstract":[{"type":"text","text":"팩토리 패턴 기반 의존성 주입을 위한 프로퍼티 래퍼"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","title":"Factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"url":"\/documentation\/dicontainer\/factory","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Factory"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Container/build()":{"url":"\/documentation\/dicontainer\/container\/build()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"build","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"build()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/build()","kind":"symbol","abstract":[{"type":"text","text":"수집된 모든 모듈의 등록을 병렬로 실행하는 핵심 메서드입니다."}]},"doc://DiContainer/documentation/DiContainer/Container":{"url":"\/documentation\/dicontainer\/container","abstract":[],"role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Container"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","title":"Container","navigatorTitle":[{"kind":"identifier","text":"Container"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"kind":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppDIContainer","kind":"identifier"}],"url":"\/documentation\/dicontainer\/appdicontainer","title":"AppDIContainer","type":"topic","role":"symbol","navigatorTitle":[{"text":"AppDIContainer","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"},"doc://DiContainer/documentation/DiContainer/Container/isEmpty":{"type":"topic","url":"\/documentation\/dicontainer\/container\/isempty","title":"isEmpty","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/isEmpty","abstract":[{"text":"컨테이너가 비어있는지 확인합니다.","type":"text"}]},"doc://DiContainer/documentation/DiContainer/Container/buildThrowing()":{"role":"symbol","url":"\/documentation\/dicontainer\/container\/buildthrowing()","title":"buildThrowing()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildThrowing()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildThrowing"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Throwing variant of build using a throwing task group."},{"type":"text","text":" "},{"type":"text","text":"Currently "},{"type":"codeVoice","code":"Module.register()"},{"type":"text","text":" is non-throwing; this method prepares for"},{"type":"text","text":" "},{"type":"text","text":"future throwing registrations and mirrors the same cleanup semantics."}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","url":"\/documentation\/dicontainer\/requiredinject","title":"RequiredInject","type":"topic","kind":"symbol","abstract":[{"text":"필수 의존성 주입을 위한 프로퍼티 래퍼","type":"text"}],"navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/Container/buildWithResults()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithResults()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildWithResults"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer11BuildResultV","text":"BuildResult"}],"abstract":[{"type":"text","text":"빌드 결과를 상세히 수집합니다(성공\/실패, 에러 원인 등)"}],"title":"buildWithResults()","role":"symbol","url":"\/documentation\/dicontainer\/container\/buildwithresults()"},"doc://DiContainer/documentation/DiContainer/Module":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Module"}],"title":"Module","url":"\/documentation\/dicontainer\/module","abstract":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"type":"strong","inlineContent":[{"text":"단일 모듈","type":"text"}]},{"type":"text","text":"을 나타내는 구조체입니다."}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Module"}]},"doc://DiContainer/documentation/DiContainer/Container/Actor-Implementations":{"title":"Actor Implementations","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/Actor-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/dicontainer\/container\/actor-implementations","type":"topic","kind":"article"},"doc://DiContainer/documentation/DiContainer/Container/buildWithMetrics()":{"url":"\/documentation\/dicontainer\/container\/buildwithmetrics()","role":"symbol","abstract":[{"type":"text","text":"성능 메트릭과 함께 빌드를 실행합니다 (디버깅\/프로파일링용)."}],"title":"buildWithMetrics()","type":"topic","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithMetrics()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildWithMetrics","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"BuildMetrics","preciseIdentifier":"s:11DiContainer12BuildMetricsV","kind":"typeIdentifier"}]},"doc://DiContainer/documentation/DiContainer/Container/init()":{"abstract":[{"type":"text","text":"기본 초기화 메서드."}],"url":"\/documentation\/dicontainer\/container\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"kind":"symbol","role":"symbol","type":"topic","title":"init()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"abstract":[{"type":"text","text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: "},{"code":"UnifiedDI","type":"codeVoice"},{"type":"text","text":"와 "},{"code":"DI","type":"codeVoice"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"url":"\/documentation\/dicontainer\/unifieddi","kind":"article","type":"topic","title":"통합 DI 시스템 - UnifiedDI vs DI","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI"},"doc://DiContainer/documentation/DiContainer/Container/buildWithProgress(_:)":{"abstract":[{"type":"text","text":"빌드 과정을 단계별로 진행하면서 진행률을 보고합니다."}],"url":"\/documentation\/dicontainer\/container\/buildwithprogress(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildWithProgress"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"kind":"symbol","role":"symbol","type":"topic","title":"buildWithProgress(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithProgress(_:)"},"doc://DiContainer/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/DiContainer\/s8SendableP","type":"unresolvable"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"kind":"symbol","url":"\/documentation\/dicontainer\/factoryvalues","type":"topic","title":"FactoryValues","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryValues"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","navigatorTitle":[{"kind":"identifier","text":"FactoryValues"}],"abstract":[{"type":"text","text":"팩토리 값들을 관리하는 프로퍼티 래퍼"}]},"doc://DiContainer/documentation/DiContainer/DI":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DI","kind":"identifier"}],"navigatorTitle":[{"text":"DI","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"단순화된 의존성 주입 API","type":"text"}],"title":"DI","url":"\/documentation\/dicontainer\/di","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI"},"doc://DiContainer/documentation/DiContainer/Inject":{"type":"topic","abstract":[{"text":"옵셔널 의존성 주입을 위한 프로퍼티 래퍼","type":"text"}],"role":"symbol","title":"Inject","url":"\/documentation\/dicontainer\/inject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Inject"}],"navigatorTitle":[{"kind":"identifier","text":"Inject"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/Container/moduleCount":{"abstract":[{"text":"현재 등록 대기 중인 모듈의 개수를 반환합니다.","type":"text"}],"title":"moduleCount","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"moduleCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/moduleCount","url":"\/documentation\/dicontainer\/container\/modulecount"},"doc://DiContainer/documentation/DiContainer/Container/getModuleTypeNames()":{"title":"getModuleTypeNames()","role":"symbol","abstract":[{"type":"text","text":"등록된 모듈들의 타입 이름을 반환합니다 (디버깅용)."}],"kind":"symbol","url":"\/documentation\/dicontainer\/container\/getmoduletypenames()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getModuleTypeNames","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/getModuleTypeNames()"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"kind":"symbol","role":"symbol","type":"topic","title":"DependencyContainer","url":"\/documentation\/dicontainer\/dependencycontainer"},"doc://DiContainer/ScA":{"type":"unresolvable","identifier":"doc:\/\/DiContainer\/ScA","title":"_Concurrency.Actor"},"doc://DiContainer/documentation/DiContainer/Container/register(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer6ModuleV","text":"Module"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","type":"topic","abstract":[{"text":"모듈을 컨테이너에 추가하여 나중에 일괄 등록할 수 있도록 준비합니다.","type":"text"}],"title":"register(_:)","url":"\/documentation\/dicontainer\/container\/register(_:)","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/register(_:)"},"doc://DiContainer/documentation/DiContainer/Container/callAsFunction(_:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/callAsFunction(_:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Trailing closure를 처리할 때 사용되는 메서드입니다."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/dicontainer\/container\/callasfunction(_:)","kind":"symbol","title":"callAsFunction(_:)"}}}