{"metadata":{"role":"symbol","externalID":"s:11DiContainer0B0C","modules":[{"name":"DiContainer"}],"navigatorTitle":[{"text":"Container","kind":"identifier"}],"title":"Container","symbolKind":"class","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"roleHeading":"Class"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/container"]}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/s16SendableMetatypeP","doc:\/\/DiContainer\/ScA"],"kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"개요","type":"heading","level":2,"anchor":"%EA%B0%9C%EC%9A%94"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Container"},{"type":"text","text":"는 여러 개의 "},{"type":"codeVoice","code":"Module"},{"type":"text","text":" 인스턴스를 수집하고 일괄 등록할 수 있는"},{"type":"text","text":" "},{"type":"text","text":"Swift Concurrency 기반의 액터입니다. 이 컨테이너는 대규모 의존성 그래프를"},{"type":"text","text":" "},{"type":"text","text":"효율적으로 관리하고 병렬 처리를 통해 성능을 최적화합니다."}]},{"text":"핵심 특징","type":"heading","level":2,"anchor":"%ED%95%B5%EC%8B%AC-%ED%8A%B9%EC%A7%95"},{"text":"⚡ 고성능 병렬 처리","type":"heading","level":3,"anchor":"%E2%9A%A1-%EA%B3%A0%EC%84%B1%EB%8A%A5-%EB%B3%91%EB%A0%AC-%EC%B2%98%EB%A6%AC"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Task Group 활용","type":"text"}],"type":"strong"},{"text":": 모든 모듈의 등록을 동시에 병렬 실행","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"스냅샷 기반","type":"text"}],"type":"strong"},{"text":": 내부 배열을 복사하여 actor hop 최소화","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"비동기 안전","type":"text"}],"type":"strong"},{"text":": Swift Concurrency 패턴으로 스레드 안전성 보장","type":"text"}]}]}]},{"text":"🏗️ 배치 등록 시스템","type":"heading","level":3,"anchor":"%F0%9F%8F%97%EF%B8%8F-%EB%B0%B0%EC%B9%98-%EB%93%B1%EB%A1%9D-%EC%8B%9C%EC%8A%A4%ED%85%9C"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"모듈 수집","type":"text"}],"type":"strong"},{"text":": 여러 모듈을 먼저 수집한 후 한 번에 등록","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"지연 실행","type":"text"}],"type":"strong"},{"text":": ","type":"text"},{"code":"build()","type":"codeVoice"},{"text":" 호출 시점까지 실제 등록 지연","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"원자적 처리","type":"text"}],"type":"strong"},{"text":": 모든 모듈이 함께 등록되거나 실패","type":"text"}]}]}]},{"text":"🔒 동시성 안전성","type":"heading","level":3,"anchor":"%F0%9F%94%92-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%95%88%EC%A0%84%EC%84%B1"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Actor 보호","type":"text"}],"type":"strong"},{"text":": 내부 상태(","type":"text"},{"code":"modules","type":"codeVoice"},{"text":")가 데이터 경쟁으로부터 안전","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"순서 독립","type":"text"}],"type":"strong"},{"text":": 모듈 등록 순서와 무관하게 동작","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"메모리 안전","type":"text"}],"type":"strong"},{"text":": 약한 참조 없이도 안전한 메모리 관리","type":"text"}]}]}]}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()"]},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/isEmpty","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/moduleCount"]},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/build()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildThrowing()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithMetrics()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithProgress(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithResults()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/callAsFunction(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/getModuleTypeNames()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/register(_:)"]},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/Actor-Implementations"]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"anchor":"핵심-컴포넌트","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"],"title":"핵심 컴포넌트","generated":true}],"references":{"doc://DiContainer/documentation/DiContainer/Container/isEmpty":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/isEmpty","title":"isEmpty","url":"\/documentation\/dicontainer\/container\/isempty","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"컨테이너가 비어있는지 확인합니다.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/ContainerPerformance":{"url":"\/documentation\/dicontainer\/containerperformance","kind":"article","type":"topic","title":"Container Performance","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","abstract":[{"text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다.","type":"text"}]},"doc://DiContainer/documentation/DiContainer/Container/buildWithProgress(_:)":{"title":"buildWithProgress(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildWithProgress"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithProgress(_:)","role":"symbol","abstract":[{"type":"text","text":"빌드 과정을 단계별로 진행하면서 진행률을 보고합니다."}],"url":"\/documentation\/dicontainer\/container\/buildwithprogress(_:)","type":"topic"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"url":"\/documentation\/dicontainer\/factoryvalues","kind":"symbol","type":"topic","navigatorTitle":[{"text":"FactoryValues","kind":"identifier"}],"title":"FactoryValues","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FactoryValues","kind":"identifier"}],"abstract":[{"type":"text","text":"팩토리 값들을 관리하는 프로퍼티 래퍼"}]},"doc://DiContainer/documentation/DiContainer/Container":{"url":"\/documentation\/dicontainer\/container","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Container"}],"title":"Container","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"abstract":[]},"doc://DiContainer/documentation/DiContainer/Container/callAsFunction(_:)":{"url":"\/documentation\/dicontainer\/container\/callasfunction(_:)","kind":"symbol","type":"topic","title":"callAsFunction(_:)","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/callAsFunction(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Trailing closure를 처리할 때 사용되는 메서드입니다."}]},"doc://DiContainer/documentation/DiContainer/Container/register(_:)":{"url":"\/documentation\/dicontainer\/container\/register(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"모듈을 컨테이너에 추가하여 나중에 일괄 등록할 수 있도록 준비합니다."}],"title":"register(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/register(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Module","preciseIdentifier":"s:11DiContainer6ModuleV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://DiContainer/documentation/DiContainer/Container/buildWithResults()":{"url":"\/documentation\/dicontainer\/container\/buildwithresults()","kind":"symbol","type":"topic","title":"buildWithResults()","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithResults()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildWithResults","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer11BuildResultV","text":"BuildResult","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"빌드 결과를 상세히 수집합니다(성공\/실패, 에러 원인 등)"}]},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"url":"\/documentation\/dicontainer\/appdicontainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AppDIContainer"}],"title":"AppDIContainer","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppDIContainer"}],"abstract":[]},"doc://DiContainer/documentation/DiContainer/Container/init()":{"url":"\/documentation\/dicontainer\/container\/init()","role":"symbol","type":"topic","abstract":[{"text":"기본 초기화 메서드.","type":"text"}],"title":"init()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://DiContainer/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/DiContainer\/s8SendableP"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"url":"\/documentation\/dicontainer\/unifieddi","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","abstract":[{"type":"text","text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: "},{"code":"UnifiedDI","type":"codeVoice"},{"type":"text","text":"와 "},{"code":"DI","type":"codeVoice"},{"type":"text","text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요."}],"title":"통합 DI 시스템 - UnifiedDI vs DI","role":"article","kind":"article"},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"url":"\/documentation\/dicontainer\/globalunifiedregistry","kind":"symbol","type":"topic","title":"GlobalUnifiedRegistry","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GlobalUnifiedRegistry","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnifiedRegistry","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC"}],"abstract":[{"type":"text","text":"글로벌 통합 Registry 인스턴스"},{"type":"text","text":" "},{"type":"text","text":"DependencyContainer.live에서 내부적으로 사용"}]},"doc://DiContainer/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/DiContainer\/ScA"},"doc://DiContainer/documentation/DiContainer/Container/moduleCount":{"title":"moduleCount","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"moduleCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/moduleCount","role":"symbol","abstract":[{"text":"현재 등록 대기 중인 모듈의 개수를 반환합니다.","type":"text"}],"url":"\/documentation\/dicontainer\/container\/modulecount","type":"topic"},"doc://DiContainer/documentation/DiContainer/Module":{"url":"\/documentation\/dicontainer\/module","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Module","kind":"identifier"}],"navigatorTitle":[{"text":"Module","kind":"identifier"}],"title":"Module","abstract":[{"type":"codeVoice","code":"Module"},{"type":"text","text":"은 DI(의존성 주입)를 위한 "},{"inlineContent":[{"text":"단일 모듈","type":"text"}],"type":"strong"},{"type":"text","text":"을 나타내는 구조체입니다."}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","role":"symbol"},"doc://DiContainer/s16SendableMetatypeP":{"type":"unresolvable","identifier":"doc:\/\/DiContainer\/s16SendableMetatypeP","title":"Swift.SendableMetatype"},"doc://DiContainer/documentation/DiContainer/Container/buildWithMetrics()":{"url":"\/documentation\/dicontainer\/container\/buildwithmetrics()","kind":"symbol","type":"topic","title":"buildWithMetrics()","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithMetrics()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildWithMetrics","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"BuildMetrics","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer12BuildMetricsV"}],"abstract":[{"text":"성능 메트릭과 함께 빌드를 실행합니다 (디버깅\/프로파일링용).","type":"text"}]},"doc://DiContainer/documentation/DiContainer/Inject":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/inject","navigatorTitle":[{"text":"Inject","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","abstract":[{"text":"옵셔널 의존성 주입을 위한 프로퍼티 래퍼","type":"text"}],"title":"Inject","role":"symbol","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Container/buildThrowing()":{"url":"\/documentation\/dicontainer\/container\/buildthrowing()","role":"symbol","type":"topic","abstract":[{"text":"Throwing variant of build using a throwing task group.","type":"text"},{"text":" ","type":"text"},{"text":"Currently ","type":"text"},{"type":"codeVoice","code":"Module.register()"},{"text":" is non-throwing; this method prepares for","type":"text"},{"text":" ","type":"text"},{"text":"future throwing registrations and mirrors the same cleanup semantics.","type":"text"}],"title":"buildThrowing()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildThrowing()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildThrowing","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://DiContainer/documentation/DiContainer/Container/Actor-Implementations":{"title":"Actor Implementations","url":"\/documentation\/dicontainer\/container\/actor-implementations","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/Actor-Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup"},"doc://DiContainer/documentation/DiContainer/Factory":{"url":"\/documentation\/dicontainer\/factory","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"title":"Factory","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"abstract":[{"type":"text","text":"팩토리 패턴 기반 의존성 주입을 위한 프로퍼티 래퍼"}]},"doc://DiContainer/documentation/DiContainer/DI":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","url":"\/documentation\/dicontainer\/di","title":"DI","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DI"}],"navigatorTitle":[{"kind":"identifier","text":"DI"}],"abstract":[{"type":"text","text":"단순화된 의존성 주입 API"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/ContainerUsage":{"url":"\/documentation\/dicontainer\/containerusage","kind":"article","type":"topic","title":"Container Usage","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","abstract":[{"type":"text","text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다."}]},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/requiredinject","navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","abstract":[{"type":"text","text":"필수 의존성 주입을 위한 프로퍼티 래퍼"}],"title":"RequiredInject","role":"symbol","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DependencyContainer","kind":"identifier"}],"url":"\/documentation\/dicontainer\/dependencycontainer","navigatorTitle":[{"text":"DependencyContainer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","abstract":[],"title":"DependencyContainer","role":"symbol","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Container/build()":{"url":"\/documentation\/dicontainer\/container\/build()","role":"symbol","type":"topic","abstract":[{"text":"수집된 모든 모듈의 등록을 병렬로 실행하는 핵심 메서드입니다.","type":"text"}],"title":"build()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/build()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"build","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://DiContainer/documentation/DiContainer/Container/getModuleTypeNames()":{"url":"\/documentation\/dicontainer\/container\/getmoduletypenames()","role":"symbol","type":"topic","abstract":[{"text":"등록된 모듈들의 타입 이름을 반환합니다 (디버깅용).","type":"text"}],"title":"getModuleTypeNames()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/getModuleTypeNames()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getModuleTypeNames","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]","kind":"text"}]}}}