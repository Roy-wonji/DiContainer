{"seeAlsoSections":[{"anchor":"핵심-컴포넌트","title":"핵심 컴포넌트","generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","doc:\/\/DiContainer\/documentation\/DiContainer\/DI","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance","doc:\/\/DiContainer\/documentation\/DiContainer\/Module","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/DiContainer\/s8SendableP","doc:\/\/DiContainer\/ScA"]}],"variants":[{"paths":["\/documentation\/dicontainer\/container"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"개요","anchor":"%EA%B0%9C%EC%9A%94","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"Container"},{"type":"text","text":"는 여러 개의 "},{"type":"codeVoice","code":"Module"},{"type":"text","text":" 인스턴스를 수집하고 일괄 등록할 수 있는"},{"type":"text","text":" "},{"type":"text","text":"Swift Concurrency 기반의 액터입니다. 이 컨테이너는 대규모 의존성 그래프를"},{"type":"text","text":" "},{"type":"text","text":"효율적으로 관리하고 병렬 처리를 통해 성능을 최적화합니다."}],"type":"paragraph"},{"level":2,"text":"핵심 특징","anchor":"%ED%95%B5%EC%8B%AC-%ED%8A%B9%EC%A7%95","type":"heading"},{"level":3,"text":"⚡ 고성능 병렬 처리","anchor":"%E2%9A%A1-%EA%B3%A0%EC%84%B1%EB%8A%A5-%EB%B3%91%EB%A0%AC-%EC%B2%98%EB%A6%AC","type":"heading"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Task Group 활용","type":"text"}],"type":"strong"},{"text":": 모든 모듈의 등록을 동시에 병렬 실행","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"스냅샷 기반","type":"text"}],"type":"strong"},{"text":": 내부 배열을 복사하여 actor hop 최소화","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"비동기 안전","type":"text"}]},{"type":"text","text":": Swift Concurrency 패턴으로 스레드 안전성 보장"}]}]}],"type":"unorderedList"},{"level":3,"text":"🏗️ 배치 등록 시스템","anchor":"%F0%9F%8F%97%EF%B8%8F-%EB%B0%B0%EC%B9%98-%EB%93%B1%EB%A1%9D-%EC%8B%9C%EC%8A%A4%ED%85%9C","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"모듈 수집","type":"text"}],"type":"strong"},{"text":": 여러 모듈을 먼저 수집한 후 한 번에 등록","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"지연 실행"}],"type":"strong"},{"text":": ","type":"text"},{"code":"build()","type":"codeVoice"},{"text":" 호출 시점까지 실제 등록 지연","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"원자적 처리"}]},{"type":"text","text":": 모든 모듈이 함께 등록되거나 실패"}]}]}],"type":"unorderedList"},{"level":3,"text":"🔒 동시성 안전성","anchor":"%F0%9F%94%92-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%95%88%EC%A0%84%EC%84%B1","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Actor 보호"}]},{"text":": 내부 상태(","type":"text"},{"type":"codeVoice","code":"modules"},{"text":")가 데이터 경쟁으로부터 안전","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"순서 독립"}],"type":"strong"},{"type":"text","text":": 모듈 등록 순서와 무관하게 동작"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"메모리 안전"}]},{"type":"text","text":": 약한 참조 없이도 안전한 메모리 관리"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container"},"kind":"symbol","topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()"]},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/isEmpty","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/moduleCount"]},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/build()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildThrowing()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithMetrics()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithProgress(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithResults()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/callAsFunction(_:)","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/getModuleTypeNames()","doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/register(_:)"]},{"generated":true,"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/Actor-Implementations"]}],"metadata":{"roleHeading":"Class","title":"Container","symbolKind":"class","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"externalID":"s:11DiContainer0B0C","role":"symbol","modules":[{"name":"DiContainer"}],"navigatorTitle":[{"kind":"identifier","text":"Container"}]},"sections":[],"references":{"doc://DiContainer/documentation/DiContainer/Factory":{"title":"Factory","kind":"symbol","type":"topic","url":"\/documentation\/dicontainer\/factory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Factory","abstract":[{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","isActive":true,"type":"reference"},{"type":"text","text":" 로부터 특정 팩토리 인스턴스를 주입받는 프로퍼티 래퍼입니다."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/Container/buildWithResults()":{"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithResults()","title":"buildWithResults()","type":"topic","url":"\/documentation\/dicontainer\/container\/buildwithresults()","abstract":[{"type":"text","text":"빌드 결과를 상세히 수집합니다(성공\/실패, 에러 원인 등)"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildWithResults","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"BuildResult","preciseIdentifier":"s:11DiContainer11BuildResultV","kind":"typeIdentifier"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/AppDIContainer":{"url":"\/documentation\/dicontainer\/appdicontainer","kind":"symbol","title":"AppDIContainer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AppDIContainer"}],"fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppDIContainer"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIContainer","abstract":[]},"doc://DiContainer/documentation/DiContainer/Inject":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Inject","kind":"symbol","abstract":[{"text":"의존성을 자동으로 해결하여 주입하는 프로퍼티 래퍼입니다.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Inject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/inject","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inject","kind":"identifier"}],"title":"Inject","type":"topic"},"doc://DiContainer/documentation/DiContainer/FactoryValues":{"title":"FactoryValues","kind":"symbol","url":"\/documentation\/dicontainer\/factoryvalues","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/FactoryValues","abstract":[{"type":"text","text":"A global container of factories used across the application."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryValues","kind":"identifier"}],"navigatorTitle":[{"text":"FactoryValues","kind":"identifier"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/RequiredInject":{"abstract":[{"text":"의존성을 필수적으로 해결하여 주입하는 프로퍼티 래퍼입니다.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequiredInject","kind":"identifier"}],"navigatorTitle":[{"text":"RequiredInject","kind":"identifier"}],"url":"\/documentation\/dicontainer\/requiredinject","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RequiredInject","title":"RequiredInject","type":"topic"},"doc://DiContainer/documentation/DiContainer/Module":{"abstract":[{"type":"codeVoice","code":"Module"},{"text":"은 DI(의존성 주입)를 위한 ","type":"text"},{"type":"strong","inlineContent":[{"text":"단일 모듈","type":"text"}]},{"text":"을 나타내는 구조체입니다.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Module"}],"navigatorTitle":[{"kind":"identifier","text":"Module"}],"role":"symbol","kind":"symbol","url":"\/documentation\/dicontainer\/module","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Module","type":"topic","title":"Module"},"doc://DiContainer/documentation/DiContainer/DI":{"navigatorTitle":[{"kind":"identifier","text":"DI"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DI"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DI","abstract":[{"text":"단순화된 DI API - 사용자 혼란을 줄이기 위해 핵심 패턴만 제공","type":"text"}],"url":"\/documentation\/dicontainer\/di","kind":"symbol","type":"topic","title":"DI"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"abstract":[],"url":"\/documentation\/dicontainer\/dependencycontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","role":"symbol","title":"DependencyContainer","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DependencyContainer"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContainer"}],"kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Container/build()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"build","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/dicontainer\/container\/build()","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"수집된 모든 모듈의 등록을 병렬로 실행하는 핵심 메서드입니다."}],"type":"topic","title":"build()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/build()"},"doc://DiContainer/documentation/DiContainer/Container/getModuleTypeNames()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getModuleTypeNames","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/getModuleTypeNames()","abstract":[{"text":"등록된 모듈들의 타입 이름을 반환합니다 (디버깅용).","type":"text"}],"url":"\/documentation\/dicontainer\/container\/getmoduletypenames()","kind":"symbol","type":"topic","title":"getModuleTypeNames()"},"doc://DiContainer/documentation/DiContainer/ContainerPerformance":{"title":"Container Performance","url":"\/documentation\/dicontainer\/containerperformance","abstract":[{"type":"text","text":"Container는 모듈 배열을 스냅샷한 뒤 TaskGroup으로 병렬 등록하여 불필요한 actor hop을 줄입니다."}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerPerformance"},"doc://DiContainer/documentation/DiContainer/Container/buildWithProgress(_:)":{"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithProgress(_:)","url":"\/documentation\/dicontainer\/container\/buildwithprogress(_:)","title":"buildWithProgress(_:)","type":"topic","abstract":[{"text":"빌드 과정을 단계별로 진행하면서 진행률을 보고합니다.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildWithProgress","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://DiContainer/documentation/DiContainer/GlobalUnifiedRegistry":{"url":"\/documentation\/dicontainer\/globalunifiedregistry","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/GlobalUnifiedRegistry","title":"GlobalUnifiedRegistry","abstract":[{"text":"글로벌 통합 Registry 인스턴스","type":"text"},{"text":" ","type":"text"},{"text":"DependencyContainer.live에서 내부적으로 사용","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"GlobalUnifiedRegistry"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnifiedRegistry","preciseIdentifier":"s:11DiContainer15UnifiedRegistryC"}],"type":"topic","kind":"symbol"},"doc://DiContainer/s8SendableP":{"identifier":"doc:\/\/DiContainer\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]},"doc://DiContainer/documentation/DiContainer/Container/moduleCount":{"url":"\/documentation\/dicontainer\/container\/modulecount","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"moduleCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"abstract":[{"text":"현재 등록 대기 중인 모듈의 개수를 반환합니다.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/moduleCount","title":"moduleCount","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/Container/buildThrowing()":{"role":"symbol","url":"\/documentation\/dicontainer\/container\/buildthrowing()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildThrowing"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"kind":"symbol","title":"buildThrowing()","abstract":[{"text":"Throwing variant of build using a throwing task group.","type":"text"},{"text":" ","type":"text"},{"text":"Currently ","type":"text"},{"code":"Module.register()","type":"codeVoice"},{"text":" is non-throwing; this method prepares for","type":"text"},{"text":" ","type":"text"},{"text":"future throwing registrations and mirrors the same cleanup semantics.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildThrowing()","type":"topic"},"doc://DiContainer/documentation/DiContainer/Container/buildWithMetrics()":{"title":"buildWithMetrics()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildWithMetrics","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer12BuildMetricsV","text":"BuildMetrics","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"성능 메트릭과 함께 빌드를 실행합니다 (디버깅\/프로파일링용)."}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/buildWithMetrics()","url":"\/documentation\/dicontainer\/container\/buildwithmetrics()","type":"topic"},"doc://DiContainer/documentation/DiContainer/Container/init()":{"url":"\/documentation\/dicontainer\/container\/init()","kind":"symbol","title":"init()","abstract":[{"type":"text","text":"기본 초기화 메서드."}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol"},"doc://DiContainer/documentation/DiContainer/Container/register(_:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/dicontainer\/container\/register(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/register(_:)","type":"topic","title":"register(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11DiContainer6ModuleV","kind":"typeIdentifier","text":"Module"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"모듈을 컨테이너에 추가하여 나중에 일괄 등록할 수 있도록 준비합니다.","type":"text"}]},"doc://DiContainer/ScA":{"identifier":"doc:\/\/DiContainer\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://DiContainer/documentation/DiContainer/UnifiedDI":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UnifiedDI","kind":"article","abstract":[{"text":"DiContainer 2.0은 두 가지 주요 API 진입점을 제공합니다: ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"text":"와 ","type":"text"},{"code":"DI","type":"codeVoice"},{"text":". 각각의 역할과 사용 시나리오를 이해하여 프로젝트에 최적한 선택을 하세요.","type":"text"}],"title":"통합 DI 시스템 - UnifiedDI vs DI","role":"article","type":"topic","url":"\/documentation\/dicontainer\/unifieddi"},"doc://DiContainer/documentation/DiContainer/ContainerUsage":{"kind":"article","abstract":[{"type":"text","text":"DiContainer의 Container는 모듈을 수집한 뒤 한 번에 병렬 등록하여 Actor hop을 최소화합니다."}],"title":"Container Usage","type":"topic","url":"\/documentation\/dicontainer\/containerusage","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerUsage","role":"article"},"doc://DiContainer/documentation/DiContainer/Container":{"role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/dicontainer\/container","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"navigatorTitle":[{"kind":"identifier","text":"Container"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container","title":"Container","type":"topic"},"doc://DiContainer/documentation/DiContainer/Container/isEmpty":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/isEmpty","abstract":[{"text":"컨테이너가 비어있는지 확인합니다.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","title":"isEmpty","url":"\/documentation\/dicontainer\/container\/isempty","role":"symbol"},"doc://DiContainer/documentation/DiContainer/Container/callAsFunction(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/callAsFunction(_:)","type":"topic","url":"\/documentation\/dicontainer\/container\/callasfunction(_:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Trailing closure를 처리할 때 사용되는 메서드입니다."}],"title":"callAsFunction(_:)"},"doc://DiContainer/documentation/DiContainer/Container/Actor-Implementations":{"abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/Container\/Actor-Implementations","kind":"article","role":"collectionGroup","title":"Actor Implementations","type":"topic","url":"\/documentation\/dicontainer\/container\/actor-implementations"}}}