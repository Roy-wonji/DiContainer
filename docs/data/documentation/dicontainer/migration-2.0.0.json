{"metadata":{"roleHeading":"Article","title":"DiContainer 2.0.0 마이그레이션 가이드","role":"article","modules":[{"name":"DiContainer"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/migration-2.0.0"]}],"primaryContentSections":[{"content":[{"text":"개요","anchor":"%EA%B0%9C%EC%9A%94","type":"heading","level":2},{"inlineContent":[{"text":"DiContainer 2.0.0은 Swift Concurrency를 완전히 수용하고, Actor Hop 최적화를 도입한 메이저 업데이트입니다. 이 가이드는 기존 1.x 코드를 새 버전으로 안전하고 효율적으로 마이그레이션하는 방법을 제공합니다.","type":"text"}],"type":"paragraph"},{"text":"한눈에 보는 주요 변화","anchor":"%ED%95%9C%EB%88%88%EC%97%90-%EB%B3%B4%EB%8A%94-%EC%A3%BC%EC%9A%94-%EB%B3%80%ED%99%94","type":"heading","level":2},{"text":"✅ 새로운 기능","anchor":"%E2%9C%85-%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B8%B0%EB%8A%A5","type":"heading","level":3},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"통합 DI API"}],"type":"strong"},{"text":": ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DI","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DIAsync","type":"codeVoice"},{"text":" 3가지 레벨의 API 제공","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"부트스트랩 시스템"}],"type":"strong"},{"text":": 안전한 앱 초기화를 위한 ","type":"text"},{"code":"DependencyContainer.bootstrap","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Actor Hop 최적화"}],"type":"strong"},{"text":": Swift Concurrency와 완벽 호환되는 성능 최적화","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"강화된 Property Wrapper"}],"type":"strong"},{"text":": ","type":"text"},{"code":"@Inject","type":"codeVoice"},{"text":", ","type":"text"},{"code":"@RequiredInject","type":"codeVoice"},{"text":", ","type":"text"},{"code":"@Factory","type":"codeVoice"},{"text":" 지원","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"AppDIContainer"}],"type":"strong"},{"text":": 앱 수준의 의존성 관리를 위한 통합 컨테이너","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"ModuleFactory 시스템"}],"type":"strong"},{"text":": Repository, UseCase, Scope 팩토리 패턴","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"🔄 변경된 API","anchor":"%F0%9F%94%84-%EB%B3%80%EA%B2%BD%EB%90%9C-API","type":"heading","level":3},{"items":[{"content":[{"inlineContent":[{"code":"DependencyContainer.live.register","type":"codeVoice"},{"text":" → ","type":"text"},{"code":"UnifiedDI.register","type":"codeVoice"},{"text":" 또는 ","type":"text"},{"code":"DI.register","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"RegisterAndReturn.register","type":"codeVoice"},{"text":" → ","type":"text"},{"code":"UnifiedDI.register","type":"codeVoice"},{"text":" 또는 KeyPath 기반 등록","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Property Wrapper 통합: ","type":"text"},{"code":"@Inject","type":"codeVoice"},{"text":" 하나로 옵셔널\/필수 모두 지원","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"부트스트랩 시스템: 앱 시작 시 반드시 ","type":"text"},{"code":"bootstrap","type":"codeVoice"},{"text":" 호출 필요","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"text":"빠른 치트시트(이전 → 이후)","anchor":"%EB%B9%A0%EB%A5%B8-%EC%B9%98%ED%8A%B8%EC%8B%9C%ED%8A%B8%EC%9D%B4%EC%A0%84-%E2%86%92-%EC%9D%B4%ED%9B%84","type":"heading"},{"header":"row","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"1.x(이전)"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"2.0.0(이후)"}]}]],[[{"inlineContent":[{"type":"codeVoice","code":"DependencyContainer.live.register(T.self) { ... }"}],"type":"paragraph"}],[{"inlineContent":[{"code":"DI.register(T.self) { ... }","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"DependencyContainer.live.resolve(T.self)","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"code":"DI.resolve(T.self)","type":"codeVoice"},{"type":"text","text":" 또는 "},{"code":"await DIAsync.resolve(T.self)","type":"codeVoice"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"code":"RegisterAndReturn.register(\\.key) { ... }","type":"codeVoice"}]}],[{"inlineContent":[{"code":"DI.register(\\.key) { ... }","type":"codeVoice"},{"type":"text","text":" 또는 "},{"code":"await DIAsync.register(\\.key) { ... }","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"text":"직접 인스턴스 캐시 관리","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"code":"DI.register(T.self) { ... }","type":"codeVoice"},{"text":" 사용","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"GCD 기반 일괄 등록"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"await DIAsync.registerMany { ... }"},{"type":"text","text":" (TaskGroup 병렬)"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"text":"복합 락 + 임시 부트스트랩","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"code":"DependencyContainer.bootstrap(…)","type":"codeVoice"},{"text":"으로 단일 경로 고정","type":"text"}]}]]],"type":"table"},{"anchor":"%EB%B6%80%ED%8A%B8%EC%8A%A4%ED%8A%B8%EB%9E%A9bootstrap-%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%93%B0%EB%8A%94%EA%B0%80","level":2,"type":"heading","text":"부트스트랩(bootstrap) 왜 필요한가, 어떻게 쓰는가"},{"inlineContent":[{"text":"앱이 의존성을 사용하기 전, 안전하게 한 번에 초기화하기 위함입니다. 내부적으로는 actor를 통해 초기화 경합을 직렬화하고, live 컨테이너 교체를 원자적으로 수행합니다.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ 동기 초기 등록","await DependencyContainer.bootstrap { c in","  c.register(Logger.self) { ConsoleLogger() }","  c.register(Config.self) { AppConfig() }","}","","\/\/ 비동기 초기 등록(예: DB 오픈, 원격 설정 로드)","await DependencyContainer.bootstrapAsync { c in","  let db = await Database.open()","  c.register(Database.self, instance: db)","}"]},{"inlineContent":[{"type":"text","text":"부트스트랩 전에 "},{"type":"codeVoice","code":"resolve"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"@Inject"},{"text":"가 호출되면 크래시 또는 실패가 발생할 수 있습니다. 앱 시작 진입점에서 반드시 부트스트랩을 호출하세요.","type":"text"}],"type":"paragraph"},{"text":"KeyPath 기반 등록\/해결","anchor":"KeyPath-%EA%B8%B0%EB%B0%98-%EB%93%B1%EB%A1%9D%ED%95%B4%EA%B2%B0","type":"heading","level":2},{"inlineContent":[{"text":"가독성과 타입 안전성을 동시에 제공합니다.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["extension DependencyContainer {","  var bookListInterface: BookListInterface? { resolve(BookListInterface.self) }","}","","\/\/ 동기: 생성과 동시에 등록하고 반환","let repo = DI.register(\\.bookListInterface) { BookListRepositoryImpl() }","","\/\/ 비동기: 생성과 동시에 등록하고 반환","let repo2 = await DIAsync.register(\\.bookListInterface) { await BookListRepositoryImpl.make() }","","\/\/ 이미 있으면 재생성하지 않음(idempotent)","let repo3 = await DIAsync.getOrCreate(\\.bookListInterface) { await BookListRepositoryImpl.make() }"],"type":"codeListing"},{"level":2,"anchor":"%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EB%9E%98%ED%8D%BC-%EB%B3%80%ED%99%94","text":"프로퍼티 래퍼 변화","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"@Inject(\\.keyPath)"},{"text":" 하나로 옵셔널\/필수 모두 지원됩니다.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"변수 타입이 Optional이면 미등록 시 "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" 반환"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"변수 타입이 Non-Optional이면 미등록 시 명확한 메시지로 "},{"type":"codeVoice","code":"fatalError"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"더 엄격한 필수 의존성에는 ","type":"text"},{"type":"codeVoice","code":"@RequiredDependency(\\.keyPath)"},{"text":"를 사용하세요.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"기존 ","type":"text"},{"type":"codeVoice","code":"@ContainerRegister"},{"text":" 같은 래퍼를 사용했다면 ","type":"text"},{"code":"@Inject","type":"codeVoice"},{"text":" 또는 ","type":"text"},{"code":"@RequiredDependency","type":"codeVoice"},{"text":"로 교체하는 것을 권장합니다.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Module 과 Container","anchor":"Module-%EA%B3%BC-Container"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"Module","type":"codeVoice"},{"text":"은 더 가벼운 구조로, 내부 등록 클로저는 ","type":"text"},{"code":"@Sendable","type":"codeVoice"},{"text":"로 정의됩니다.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Container"},{"text":"는 다음 빌드 API를 제공합니다.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"await build()","type":"codeVoice"},{"text":" — 비-throwing 기본 빌드","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"await buildWithMetrics()","type":"codeVoice"},{"type":"text","text":" — 수행 시간\/처리량 메트릭 수집"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"await buildWithResults()","type":"codeVoice"},{"text":" — 성공\/실패 상세 리포트","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"try await buildThrowing()"},{"type":"text","text":" — throwing 등록을 위한 확장 포인트"}],"type":"paragraph"}]}]}]}]},{"level":2,"anchor":"DI-vs-DIAsync-%EC%96%B8%EC%A0%9C-%EB%AC%B4%EC%97%87%EC%9D%84-%EC%93%B0%EB%82%98","text":"DI vs DIAsync — 언제 무엇을 쓰나","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"동기 팩토리라면 "},{"type":"codeVoice","code":"DI"},{"type":"text","text":"를, 비동기 팩토리\/병렬 일괄 등록이 필요하면 "},{"type":"codeVoice","code":"DIAsync"},{"text":"를 사용하세요.","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ DI (sync)","DI.register(Service.self) { ServiceImpl() }","let s = DI.resolve(Service.self)","","\/\/ DIAsync (async)","await DIAsync.register(Service.self) { await ServiceImpl.make() }","let s2 = await DIAsync.resolve(Service.self)","","\/\/ 등록 여부 확인","let ok = DI.isRegistered(Service.self)","let ok2 = await DIAsync.isRegistered(Service.self)"]},{"text":"UnifiedDI로 단일 진입점 사용하기","type":"heading","level":2,"anchor":"UnifiedDI%EB%A1%9C-%EB%8B%A8%EC%9D%BC-%EC%A7%84%EC%9E%85%EC%A0%90-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0"},{"type":"paragraph","inlineContent":[{"text":"팀이 ","type":"text"},{"type":"codeVoice","code":"DI"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"DIAsync"},{"text":" 대신 하나의 API로 통일하고 싶다면 ","type":"text"},{"code":"UnifiedDI","type":"codeVoice"},{"text":"를 권장합니다. 내부적으로는 ","type":"text"},{"code":"DependencyContainer.live","type":"codeVoice"},{"text":"를 사용하여 타입 안전한 등록\/해결을 제공합니다.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"치트시트(이전 → UnifiedDI)"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"DI.register(T.self) { ... }"},{"text":" → ","type":"text"},{"type":"codeVoice","code":"UnifiedDI.register(T.self) { ... }"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"DI.resolve(T.self)","type":"codeVoice"},{"text":" → ","type":"text"},{"type":"codeVoice","code":"UnifiedDI.resolve(T.self)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"DI.requireResolve(T.self)","type":"codeVoice"},{"text":" → ","type":"text"},{"code":"UnifiedDI.requireResolve(T.self)","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"DI.resolve(T.self, default: …)","type":"codeVoice"},{"text":" → ","type":"text"},{"code":"UnifiedDI.resolve(T.self, default: …)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"DI.registerMany { … }","type":"codeVoice"},{"text":" → ","type":"text"},{"code":"UnifiedDI.registerMany { … }","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"DIAsync.registerMany { … }","type":"codeVoice"},{"text":" → 비동기 초기화가 필요하면 ","type":"text"},{"code":"DependencyContainer.bootstrapAsync","type":"codeVoice"},{"text":" 안에서 인스턴스를 만든 뒤 ","type":"text"},{"code":"container.register(_:instance:)","type":"codeVoice"},{"text":"로 등록하거나, 생성 이후 ","type":"text"},{"code":"UnifiedDI.register","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"DependencyContainer.live.register","type":"codeVoice"},{"text":"로 등록하세요.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"예시","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ 등록","UnifiedDI.register(ServiceProtocol.self) { ServiceImpl() }","","\/\/ KeyPath 등록","let repo = UnifiedDI.register(\\.userRepository) { UserRepositoryImpl() }","","\/\/ 해결","let s1 = UnifiedDI.resolve(ServiceProtocol.self)","let s2 = UnifiedDI.requireResolve(ServiceProtocol.self)","let logger = UnifiedDI.resolve(LoggerProtocol.self, default: ConsoleLogger())","","\/\/ 배치 등록","UnifiedDI.registerMany {","  UnifiedRegistration(NetworkService.self) { DefaultNetworkService() }","  UnifiedRegistration(UserRepository.self) { UserRepositoryImpl() }","}"]},{"level":2,"type":"heading","text":"동시성 주의사항(Swift 6)","anchor":"%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%ADSwift-6"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"@Sendable","type":"codeVoice"},{"text":" 클로저 안에서 non-Sendable 상태를 캡처하지 마세요. 필요 시 값 스냅샷\/","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" 채택을 고려하세요.","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"Container.build","type":"codeVoice"},{"text":"는 작업 생성 전에 스냅샷을 만들어 actor hop 비용을 줄입니다.","type":"text"}],"type":"paragraph"}]}]},{"text":"주요 변경점(브레이킹)과 대체 방법","type":"heading","level":2,"anchor":"%EC%A3%BC%EC%9A%94-%EB%B3%80%EA%B2%BD%EC%A0%90%EB%B8%8C%EB%A0%88%EC%9D%B4%ED%82%B9%EA%B3%BC-%EB%8C%80%EC%B2%B4-%EB%B0%A9%EB%B2%95"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"수동 등록\/해결 진입점 변경","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ 이전(1.x)","DependencyContainer.live.register(ServiceProtocol.self) { Service() }","let s = DependencyContainer.live.resolve(ServiceProtocol.self)","","\/\/ 이후(2.0.0)","DI.register(ServiceProtocol.self) { Service() }","let s = DI.resolve(ServiceProtocol.self)"]},{"type":"orderedList","start":2,"items":[{"content":[{"inlineContent":[{"text":"KeyPath 기반 등록 방식 정리","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ 이전(1.x)","RegisterAndReturn.register(\\.userRepository) { UserRepository() }","","\/\/ 이후(2.0.0)","DI.register(\\.userRepository) { UserRepository() }","\/\/ 또는 비동기 초기화 필요 시","await DIAsync.register(\\.userRepository) { await UserRepository.make() }"]},{"type":"orderedList","start":3,"items":[{"content":[{"inlineContent":[{"text":"프로퍼티 래퍼 마이그레이션","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ 이전(예: @ContainerRegister 사용)","final class UserService {","  @ContainerRegister(\\.userRepository)","  private var repo: UserRepositoryProtocol","}","","\/\/ 이후(2.0.0)","final class UserService {","  \/\/ Non-Optional: 미등록 시 명확한 크래시로 빠르게 발견","  @Inject(\\.userRepository) var repo: UserRepositoryProtocol","  ","  \/\/ Optional로 선언하면 미등록 시 nil 반환(선택적 의존성에 적합)","  \/\/ @Inject(\\.userRepository) var repo: UserRepositoryProtocol?","}","","\/\/ 더 엄격한 필수 의존성","final class AuthService {","  @RequiredDependency(\\.authRepository) var authRepo: AuthRepositoryProtocol","}"]},{"type":"orderedList","start":4,"items":[{"content":[{"inlineContent":[{"text":"일괄 등록(배치) — GCD → Concurrency","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["await DIAsync.registerMany {","  DIAsyncRegistration(ServiceA.self) { await ServiceA.make() }","  DIAsyncRegistration(ServiceB.self) { ServiceB() }","  DIAsyncRegistration(\\.userRepository) { await UserRepository.make() }","}"]},{"level":2,"type":"heading","text":"마이그레이션 단계별 가이드","anchor":"%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%EB%8B%A8%EA%B3%84%EB%B3%84-%EA%B0%80%EC%9D%B4%EB%93%9C"},{"level":3,"type":"heading","text":"1단계: API 선택 및 통일","anchor":"1%EB%8B%A8%EA%B3%84-API-%EC%84%A0%ED%83%9D-%EB%B0%8F-%ED%86%B5%EC%9D%BC"},{"type":"paragraph","inlineContent":[{"text":"팀의 선호에 따라 다음 중 하나를 선택하세요:","type":"text"}]},{"level":4,"type":"heading","text":"옵션 A: UnifiedDI (최신 및 추천)","anchor":"%EC%98%B5%EC%85%98-A-UnifiedDI-%EC%B5%9C%EC%8B%A0-%EB%B0%8F-%EC%B6%94%EC%B2%9C"},{"code":["\/\/ 모든 의존성 작업을 UnifiedDI로 통일","UnifiedDI.register(ServiceProtocol.self) { ServiceImpl() }","let service = UnifiedDI.resolve(ServiceProtocol.self)"],"syntax":"swift","type":"codeListing"},{"level":4,"type":"heading","text":"옵션 B: DI\/DIAsync 분리 사용","anchor":"%EC%98%B5%EC%85%98-B-DIDIAsync-%EB%B6%84%EB%A6%AC-%EC%82%AC%EC%9A%A9"},{"type":"codeListing","syntax":"swift","code":["\/\/ 동기 작업은 DI","DI.register(ServiceProtocol.self) { ServiceImpl() }","","\/\/ 비동기 작업은 DIAsync","await DIAsync.register(ServiceProtocol.self) { await ServiceImpl.make() }"]},{"level":3,"type":"heading","text":"2단계: 등록 방식 업데이트","anchor":"2%EB%8B%A8%EA%B3%84-%EB%93%B1%EB%A1%9D-%EB%B0%A9%EC%8B%9D-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8"},{"type":"codeListing","syntax":"swift","code":["\/\/ 이전","DependencyContainer.live.register(ServiceProtocol.self) { ServiceImpl() }","RegisterAndReturn.register(\\.userRepository) { UserRepository() }","","\/\/ 이후","UnifiedDI.register(ServiceProtocol.self) { ServiceImpl() }","UnifiedDI.register(\\.userRepository) { UserRepository() }"]},{"level":3,"type":"heading","text":"3단계: 부트스트랩 시스템 도입","anchor":"3%EB%8B%A8%EA%B3%84-%EB%B6%80%ED%8A%B8%EC%8A%A4%ED%8A%B8%EB%9E%A9-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%8F%84%EC%9E%85"},{"type":"codeListing","syntax":"swift","code":["\/\/ 앱 시작점에서 반드시 호출","@main","struct MyApp: App {","    init() {","        Task {","            await DependencyContainer.bootstrap { container in","                \/\/ 모든 의존성 등록","                container.register(LoggerProtocol.self) { Logger() }","                container.register(NetworkProtocol.self) { NetworkService() }","            }","        }","    }","}"]},{"level":3,"type":"heading","text":"4단계: Property Wrapper 업데이트","anchor":"4%EB%8B%A8%EA%B3%84-Property-Wrapper-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8"},{"type":"codeListing","syntax":"swift","code":["\/\/ 이전","@ContainerRegister(\\.userRepository) var repo: UserRepositoryProtocol","","\/\/ 이후 - 옵션 1: 옵셔널 주입 (안전)","@Inject(\\.userRepository) var repo: UserRepositoryProtocol?","","\/\/ 이후 - 옵션 2: 필수 주입 (빠른 실패 발견)","@RequiredInject(\\.userRepository) var repo: UserRepositoryProtocol"]},{"level":3,"type":"heading","text":"5단계: 테스트 코드 업데이트","anchor":"5%EB%8B%A8%EA%B3%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8"},{"type":"codeListing","syntax":"swift","code":["class MyTests: XCTestCase {","    override func setUp() async throws {","        await super.setUp()","","        \/\/ 테스트 컨테이너 리셋","        await DependencyContainer.resetForTesting()","","        \/\/ 테스트용 의존성 등록","        await DependencyContainer.bootstrap { container in","            container.register(ServiceProtocol.self) { MockService() }","        }","    }","","    override func tearDown() async throws {","        UnifiedDI.releaseAll()","        await super.tearDown()","    }","}"]},{"level":3,"type":"heading","text":"6단계: 고급 기능 활용 (AppDIContainer)","anchor":"6%EB%8B%A8%EA%B3%84-%EA%B3%A0%EA%B8%89-%EA%B8%B0%EB%8A%A5-%ED%99%9C%EC%9A%A9-AppDIContainer"},{"type":"paragraph","inlineContent":[{"text":"대규모 프로젝트에서는 AppDIContainer를 활용하세요:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ AppDIContainer 활용","await AppDIContainer.shared.registerDefaultDependencies()","","\/\/ 또는 커스텀 등록","await AppDIContainer.shared.registerDependencies { container in","    var repositoryFactory = AppDIContainer.shared.repositoryFactory","    repositoryFactory.registerDefaultDefinitions()","","    await repositoryFactory.makeAllModules().asyncForEach { module in","        await container.register(module)","    }","}"]},{"level":2,"type":"heading","text":"AutoResolver 메모와 옵션","anchor":"AutoResolver-%EB%A9%94%EB%AA%A8%EC%99%80-%EC%98%B5%EC%85%98"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"2.0.0에서는 AutoResolver가 메인 액터에서 동작하여 UI\/주입 안전성을 높였습니다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"자동 해석을 전체 끄거나, 특정 타입만 제외할 수 있습니다.","type":"text"}]}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ 전체 토글","AutoDependencyResolver.enable()","AutoDependencyResolver.disable()","","\/\/ 타입별 제외\/해제","AutoDependencyResolver.excludeType(UserService.self)","AutoDependencyResolver.includeType(UserService.self)"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"문자열 기반 공통 타입 매핑은 제거되었습니다. ","type":"text"},{"type":"codeVoice","code":"@AutoResolve"},{"text":" 또는 명시적 등록을 사용해 타입을 알려주세요.","type":"text"}]}]}]},{"level":2,"type":"heading","text":"TCA 통합 코드 예(업데이트)","anchor":"TCA-%ED%86%B5%ED%95%A9-%EC%BD%94%EB%93%9C-%EC%98%88%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8"},{"type":"codeListing","syntax":"swift","code":["import ComposableArchitecture","import DiContainer","","extension UserUseCase: DependencyKey {","  public static var liveValue: UserUseCaseProtocol = {","    \/\/ 등록되어 있으면 resolve, 없으면 기본 구현을 등록하며 사용","    let repository = ContainerRegister.register(\\.userRepository) { DefaultUserRepository() }","    return UserUseCase(repository: repository)","  }()","}","","extension DependencyValues {","  var userUseCase: UserUseCaseProtocol {","    get { self[UserUseCase.self] }","    set { self[UserUseCase.self] = newValue }","  }","}"]},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"text":"특정 코드 조각의 변환이 필요하다면, 스니펫을 공유해 주세요. 2.0.0 스타일로 정확히 바꿔드립니다.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"abstract":[{"text":"DiContainer 1.x에서 2.0.0으로 업그레이드하는 완전한 가이드","type":"text"}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/MIGRATION-2.0.0","interfaceLanguage":"swift"},"sections":[],"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"title":"시작하기","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/QuickStart","doc:\/\/DiContainer\/documentation\/DiContainer\/CoreAPIs","doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIIntegration","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer"],"anchor":"시작하기","generated":true}],"references":{"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/QuickStart":{"url":"\/documentation\/dicontainer\/quickstart","role":"article","type":"topic","abstract":[],"title":"빠른 시작 가이드","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/QuickStart","kind":"article"},"doc://DiContainer/documentation/DiContainer/CoreAPIs":{"title":"코어 API 가이드","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/CoreAPIs","role":"article","abstract":[],"url":"\/documentation\/dicontainer\/coreapis","type":"topic"},"doc://DiContainer/documentation/DiContainer/AppDIIntegration":{"type":"topic","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AppDIIntegration","role":"article","abstract":[{"type":"text","text":"애플리케이션 레벨에서 DI를 구성하고 부트스트랩하는 방법을 설명합니다."}],"url":"\/documentation\/dicontainer\/appdiintegration","title":"App DI Integration"},"doc://DiContainer/documentation/DiContainer/DependencyContainer":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DependencyContainer","kind":"identifier"}],"url":"\/documentation\/dicontainer\/dependencycontainer","navigatorTitle":[{"text":"DependencyContainer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyContainer","abstract":[],"title":"DependencyContainer","role":"symbol","kind":"symbol"}}}