{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Structure","symbolKind":"struct","title":"UseCaseModuleFactory","navigatorTitle":[{"text":"UseCaseModuleFactory","kind":"identifier"}],"modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer20UseCaseModuleFactoryV","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactory","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UseCaseModuleFactory","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"seeAlsoSections":[{"generated":true,"anchor":"고급-기능","title":"고급 기능","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AutoResolution","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDependencyResolver","doc:\/\/DiContainer\/documentation\/DiContainer\/PluginSystem","doc:\/\/DiContainer\/documentation\/DiContainer\/BasePlugin","doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"UseCase 계층 모듈 팩토리"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/usecasemodulefactory"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"relationshipsSections":[{"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","doc:\/\/DiContainer\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/init()"]},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/definitions","doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/registerModule"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/addUseCase(_:repositoryType:repositoryFallback:factory:)"]},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/ModuleFactory-Implementations"]}],"kind":"symbol","references":{"doc://DiContainer/documentation/DiContainer/AutoDependencyResolver":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutoDependencyResolver","kind":"identifier"}],"type":"topic","kind":"symbol","title":"AutoDependencyResolver","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDependencyResolver","role":"symbol","url":"\/documentation\/dicontainer\/autodependencyresolver","abstract":[{"text":"자동 의존성 해결을 수행하는 핵심 클래스 (메인 액터 격리)","type":"text"}],"navigatorTitle":[{"text":"AutoDependencyResolver","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/ScopeModuleFactory":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ScopeModuleFactory","kind":"identifier"}],"url":"\/documentation\/dicontainer\/scopemodulefactory","title":"ScopeModuleFactory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScopeModuleFactory","kind":"identifier"}],"abstract":[{"type":"text","text":"Scope 계층 모듈 팩토리"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory"},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","abstract":[{"type":"text","text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다."}],"role":"article","url":"\/documentation\/dicontainer\/modulefactory","type":"topic","title":"Module Factory","kind":"article"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","type":"topic","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","title":"DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"role":"collection"},"doc://DiContainer/documentation/DiContainer/BasePlugin":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/BasePlugin","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasePlugin","kind":"identifier"}],"url":"\/documentation\/dicontainer\/baseplugin","kind":"symbol","type":"topic","navigatorTitle":[{"text":"BasePlugin","kind":"identifier"}],"title":"BasePlugin","abstract":[{"type":"text","text":"기본 플러그인 구현을 위한 베이스 클래스"}]},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory":{"type":"topic","role":"symbol","url":"\/documentation\/dicontainer\/usecasemodulefactory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactory"}],"title":"UseCaseModuleFactory","navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactory"}],"kind":"symbol","abstract":[{"text":"UseCase 계층 모듈 팩토리","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/registerModule":{"title":"registerModule","abstract":[],"role":"symbol","url":"\/documentation\/dicontainer\/usecasemodulefactory\/registermodule","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerModule","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RegisterModule","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer14RegisterModuleV"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/registerModule"},"doc://DiContainer/documentation/DiContainer/RepositoryModuleFactory":{"title":"RepositoryModuleFactory","url":"\/documentation\/dicontainer\/repositorymodulefactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","navigatorTitle":[{"text":"RepositoryModuleFactory","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Repository 계층 모듈 팩토리"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryModuleFactory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/PluginSystem":{"abstract":[{"text":"DiContainer의 강력한 플러그인 아키텍처를 사용하여 의존성 주입 과정을 커스터마이징하고 확장하는 방법","type":"text"}],"role":"article","title":"플러그인 시스템","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/PluginSystem","kind":"article","url":"\/documentation\/dicontainer\/pluginsystem","type":"topic"},"doc://DiContainer/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/DiContainer\/s8SendableP","title":"Swift.Sendable"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/init()":{"url":"\/documentation\/dicontainer\/usecasemodulefactory\/init()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","role":"symbol","kind":"symbol","title":"init()","abstract":[]},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/ModuleFactory-Implementations":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/ModuleFactory-Implementations","url":"\/documentation\/dicontainer\/usecasemodulefactory\/modulefactory-implementations","abstract":[],"type":"topic","role":"collectionGroup","kind":"article","title":"ModuleFactory Implementations"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/definitions":{"title":"definitions","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/dicontainer\/usecasemodulefactory\/definitions","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/definitions","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"definitions","kind":"identifier"},{"text":": [() -> ","kind":"text"},{"preciseIdentifier":"s:11DiContainer6ModuleV","text":"Module","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[]},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/addUseCase(_:repositoryType:repositoryFallback:factory:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addUseCase"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"UseCase"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Repo"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"UseCase"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"repositoryType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Repo"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"repositoryFallback"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Repo"},{"kind":"text","text":", "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Repo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UseCase"},{"kind":"text","text":")"}],"url":"\/documentation\/dicontainer\/usecasemodulefactory\/addusecase(_:repositorytype:repositoryfallback:factory:)","title":"addUseCase(_:repositoryType:repositoryFallback:factory:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"UseCase와 Repository 의존성을 함께 등록하는 헬퍼"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/addUseCase(_:repositoryType:repositoryFallback:factory:)"},"doc://DiContainer/documentation/DiContainer/AutoResolution":{"kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoResolution","abstract":[{"text":"DiContainer의 강력한 자동 의존성 해결 시스템을 활용하여 리플렉션 기반의 자동 주입을 구현하는 방법","type":"text"}],"type":"topic","url":"\/documentation\/dicontainer\/autoresolution","title":"자동 의존성 해결","role":"article"}}}