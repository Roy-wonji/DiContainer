{"topicSections":[{"generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/init()"],"anchor":"Initializers","title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/definitions","doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/registerModule"],"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/addUseCase(_:repositoryType:repositoryFallback:factory:)"],"anchor":"Instance-Methods","title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/ModuleFactory-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/AutoResolution","doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDependencyResolver","doc:\/\/DiContainer\/documentation\/DiContainer\/PluginSystem","doc:\/\/DiContainer\/documentation\/DiContainer\/BasePlugin","doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory"],"anchor":"고급-기능","title":"고급 기능"}],"abstract":[{"type":"text","text":"UseCase 계층 모듈 팩토리"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","doc:\/\/DiContainer\/s8SendableP"],"title":"Conforms To"}],"metadata":{"modules":[{"name":"DiContainer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactory"}],"navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactory"}],"roleHeading":"Structure","title":"UseCaseModuleFactory","symbolKind":"struct","role":"symbol","externalID":"s:11DiContainer20UseCaseModuleFactoryV"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactory"}],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/usecasemodulefactory"]}],"kind":"symbol","references":{"doc://DiContainer/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/DiContainer\/s8SendableP","type":"unresolvable"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","role":"collection","kind":"symbol","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/RepositoryModuleFactory":{"navigatorTitle":[{"text":"RepositoryModuleFactory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RepositoryModuleFactory","url":"\/documentation\/dicontainer\/repositorymodulefactory","title":"RepositoryModuleFactory","kind":"symbol","abstract":[{"text":"Repository 계층 모듈 팩토리","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryModuleFactory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/registerModule":{"type":"topic","title":"registerModule","role":"symbol","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/registerModule","abstract":[],"url":"\/documentation\/dicontainer\/usecasemodulefactory\/registermodule","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerModule","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RegisterModule","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer14RegisterModuleV"}]},"doc://DiContainer/documentation/DiContainer/PluginSystem":{"kind":"article","title":"플러그인 시스템","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/PluginSystem","type":"topic","role":"article","abstract":[{"type":"text","text":"DiContainer의 강력한 플러그인 아키텍처를 사용하여 의존성 주입 과정을 커스터마이징하고 확장하는 방법"}],"url":"\/documentation\/dicontainer\/pluginsystem"},"doc://DiContainer/documentation/DiContainer/BasePlugin":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/BasePlugin","title":"BasePlugin","url":"\/documentation\/dicontainer\/baseplugin","type":"topic","abstract":[{"text":"기본 플러그인 구현을 위한 베이스 클래스","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"BasePlugin","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasePlugin","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/init()":{"role":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/init()","url":"\/documentation\/dicontainer\/usecasemodulefactory\/init()","title":"init()","type":"topic","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/addUseCase(_:repositoryType:repositoryFallback:factory:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addUseCase","kind":"identifier"},{"text":"<","kind":"text"},{"text":"UseCase","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Repo","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"UseCase","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"repositoryType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Repo","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"repositoryFallback","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Repo","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Repo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"UseCase","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"UseCase와 Repository 의존성을 함께 등록하는 헬퍼","type":"text"}],"title":"addUseCase(_:repositoryType:repositoryFallback:factory:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/addUseCase(_:repositoryType:repositoryFallback:factory:)","kind":"symbol","url":"\/documentation\/dicontainer\/usecasemodulefactory\/addusecase(_:repositorytype:repositoryfallback:factory:)","type":"topic","role":"symbol"},"doc://DiContainer/documentation/DiContainer/ScopeModuleFactory":{"abstract":[{"text":"Scope 계층 모듈 팩토리","type":"text"}],"type":"topic","title":"ScopeModuleFactory","kind":"symbol","role":"symbol","url":"\/documentation\/dicontainer\/scopemodulefactory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScopeModuleFactory","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ScopeModuleFactory","navigatorTitle":[{"text":"ScopeModuleFactory","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UseCaseModuleFactory"}],"kind":"symbol","title":"UseCaseModuleFactory","url":"\/documentation\/dicontainer\/usecasemodulefactory","abstract":[{"text":"UseCase 계층 모듈 팩토리","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseCaseModuleFactory"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory"},"doc://DiContainer/documentation/DiContainer/AutoResolution":{"title":"자동 의존성 해결","kind":"article","type":"topic","role":"article","abstract":[{"type":"text","text":"DiContainer의 강력한 자동 의존성 해결 시스템을 활용하여 리플렉션 기반의 자동 주입을 구현하는 방법"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoResolution","url":"\/documentation\/dicontainer\/autoresolution"},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/definitions":{"type":"topic","url":"\/documentation\/dicontainer\/usecasemodulefactory\/definitions","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"definitions","kind":"identifier"},{"text":": [() -> ","kind":"text"},{"text":"Module","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer6ModuleV"},{"text":"]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/definitions","title":"definitions","abstract":[]},"doc://DiContainer/documentation/DiContainer/AutoDependencyResolver":{"type":"topic","abstract":[{"text":"자동 의존성 해결을 수행하는 핵심 클래스 (메인 액터 격리)","type":"text"}],"title":"AutoDependencyResolver","url":"\/documentation\/dicontainer\/autodependencyresolver","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/AutoDependencyResolver","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoDependencyResolver"}],"navigatorTitle":[{"kind":"identifier","text":"AutoDependencyResolver"}]},"doc://DiContainer/documentation/DiContainer/UseCaseModuleFactory/ModuleFactory-Implementations":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/UseCaseModuleFactory\/ModuleFactory-Implementations","url":"\/documentation\/dicontainer\/usecasemodulefactory\/modulefactory-implementations","role":"collectionGroup","title":"ModuleFactory Implementations","kind":"article","type":"topic","abstract":[]},"doc://DiContainer/documentation/DiContainer/ModuleFactory":{"kind":"article","title":"Module Factory","type":"topic","url":"\/documentation\/dicontainer\/modulefactory","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ModuleFactory","abstract":[{"text":"팩토리로 모듈을 체계적으로 생성하고 Container에 등록합니다.","type":"text"}],"role":"article"}}}