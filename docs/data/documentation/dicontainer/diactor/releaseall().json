{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"role":"symbol","title":"releaseAll()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"releaseAll"},{"kind":"text","text":"()"}],"externalID":"s:11DiContainer7DIActorC10releaseAllyyF","roleHeading":"Instance Method","modules":[{"name":"DiContainer"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"abstract":[{"type":"text","text":"모든 등록을 해제합니다."}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/releaseAll()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/releaseall()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"releaseAll"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}]}],"references":{"doc://DiContainer/documentation/DiContainer/DIActor":{"kind":"symbol","title":"DIActor","url":"\/documentation\/dicontainer\/diactor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","navigatorTitle":[{"kind":"identifier","text":"DIActor"}],"fragments":[{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActor"}],"type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActor/releaseAll()":{"role":"symbol","kind":"symbol","abstract":[{"text":"모든 등록을 해제합니다.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"releaseAll"},{"kind":"text","text":"()"}],"url":"\/documentation\/dicontainer\/diactor\/releaseall()","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/releaseAll()","title":"releaseAll()","type":"topic"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]}}}