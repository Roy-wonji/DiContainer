{"sections":[],"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/releaseall()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"abstract":[{"text":"모든 등록을 해제합니다.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"releaseAll","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"}],"metadata":{"modules":[{"name":"DiContainer"}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","externalID":"s:11DiContainer7DIActorC10releaseAllyyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"releaseAll","kind":"identifier"},{"text":"()","kind":"text"}],"title":"releaseAll()"},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/releaseAll()","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://DiContainer/documentation/DiContainer/DIActor":{"role":"symbol","type":"topic","url":"\/documentation\/dicontainer\/diactor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"kind":"symbol","title":"DIActor"},"doc://DiContainer/documentation/DiContainer/DIActor/releaseAll()":{"kind":"symbol","abstract":[{"text":"모든 등록을 해제합니다.","type":"text"}],"type":"topic","title":"releaseAll()","url":"\/documentation\/dicontainer\/diactor\/releaseall()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"releaseAll","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/releaseAll()"},"doc://DiContainer/documentation/DiContainer":{"role":"collection","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","kind":"symbol"}}}