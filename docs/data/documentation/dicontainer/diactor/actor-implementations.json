{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/Actor-Implementations","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/actor-implementations"]}],"metadata":{"roleHeading":"API Collection","modules":[{"name":"DiContainer"}],"role":"collectionGroup","title":"Actor Implementations"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"sections":[],"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/assertIsolated(_:file:line:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/assumeIsolated(_:file:line:)","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/preconditionIsolated(_:file:line:)"],"generated":true}],"references":{"doc://DiContainer/documentation/DiContainer/DIActor":{"url":"\/documentation\/dicontainer\/diactor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DIActor"}],"title":"DIActor","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"abstract":[{"text":"Thread-safe DI operations을 위한 Actor 기반 구현","type":"text"}]},"doc://DiContainer/documentation/DiContainer/DIActor/assertIsolated(_:file:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertIsolated","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"url":"\/documentation\/dicontainer\/diactor\/assertisolated(_:file:line:)","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/assertIsolated(_:file:line:)","abstract":[],"title":"assertIsolated(_:file:line:)","role":"symbol","kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActor/preconditionIsolated(_:file:line:)":{"title":"preconditionIsolated(_:file:line:)","url":"\/documentation\/dicontainer\/diactor\/preconditionisolated(_:file:line:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/preconditionIsolated(_:file:line:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"preconditionIsolated"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActor/assumeIsolated(_:file:line:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/assumeIsolated(_:file:line:)","title":"assumeIsolated(_:file:line:)","url":"\/documentation\/dicontainer\/diactor\/assumeisolated(_:file:line:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assumeIsolated","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"isolated","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","role":"symbol"}}}