{"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","abstract":[{"text":"Shared Actor 인스턴스로 타입을 등록합니다. (권장)","type":"text"}],"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/registersharedactor(_:factory:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerSharedActor"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping "},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"등록할 타입"}],"type":"paragraph"}]},{"name":"factory","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"인스턴스를 생성하는 팩토리 클로저 (한 번만 실행됨)"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"등록 해제 핸들러"}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"전통적인 싱글톤 대신 Actor 기반 공유 인스턴스를 제공합니다."},{"type":"text","text":" "},{"type":"text","text":"Actor의 격리성을 통해 자동으로 thread-safety를 보장합니다."}]}],"kind":"content"}],"sections":[],"metadata":{"externalID":"s:11DiContainer7DIActorC19registerSharedActor_7factoryyyYaYbcxm_xyYbcts8SendableRzlF","title":"registerSharedActor(_:factory:)","roleHeading":"Instance Method","modules":[{"name":"DiContainer"}],"symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerSharedActor"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"}]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registerSharedActor(_:factory:)","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[],"url":"\/documentation\/dicontainer","kind":"symbol","type":"topic","role":"collection"},"doc://DiContainer/documentation/DiContainer/DIActor/registerSharedActor(_:factory:)":{"url":"\/documentation\/dicontainer\/diactor\/registersharedactor(_:factory:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registerSharedActor(_:factory:)","type":"topic","abstract":[{"type":"text","text":"Shared Actor 인스턴스로 타입을 등록합니다. (권장)"}],"kind":"symbol","title":"registerSharedActor(_:factory:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"registerSharedActor","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> () ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"}]},"doc://DiContainer/documentation/DiContainer/DIActor":{"url":"\/documentation\/dicontainer\/diactor","kind":"symbol","title":"DIActor","navigatorTitle":[{"kind":"identifier","text":"DIActor"}],"type":"topic","abstract":[{"text":"Thread-safe DI operations을 위한 Actor 기반 구현","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActor"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"}}}