{"metadata":{"symbolKind":"method","role":"symbol","title":"registerSharedActor(_:factory:)","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer7DIActorC19registerSharedActor_7factoryyyYaYbcxm_xyYbcts8SendableRzlF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerSharedActor","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerSharedActor","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"등록할 타입"}]}]},{"name":"factory","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"인스턴스를 생성하는 팩토리 클로저 (한 번만 실행됨)"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"등록 해제 핸들러"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"전통적인 싱글톤 대신 Actor 기반 공유 인스턴스를 제공합니다.","type":"text"},{"type":"text","text":" "},{"text":"Actor의 격리성을 통해 자동으로 thread-safety를 보장합니다.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/registersharedactor(_:factory:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registerSharedActor(_:factory:)","interfaceLanguage":"swift"},"abstract":[{"text":"Shared Actor 인스턴스로 타입을 등록합니다. (권장)","type":"text"}],"references":{"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActor/registerSharedActor(_:factory:)":{"title":"registerSharedActor(_:factory:)","abstract":[{"text":"Shared Actor 인스턴스로 타입을 등록합니다. (권장)","type":"text"}],"url":"\/documentation\/dicontainer\/diactor\/registersharedactor(_:factory:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registerSharedActor(_:factory:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"registerSharedActor","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> () "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}]},"doc://DiContainer/documentation/DiContainer/DIActor":{"title":"DIActor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"url":"\/documentation\/dicontainer\/diactor","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}]}}}