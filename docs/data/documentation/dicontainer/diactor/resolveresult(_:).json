{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveResult"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer7DIErrorO","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIError","text":"DIError"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"해결할 타입"}]}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"성공 시 인스턴스, 실패 시 DIError"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/resolveresult(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Result 패턴으로 타입을 해결합니다.","type":"text"}],"sections":[],"metadata":{"title":"resolveResult(_:)","roleHeading":"Instance Method","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer7DIActorC13resolveResultys0E0OyxAA7DIErrorOGxmYas8SendableRzlF","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveResult"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer7DIErrorO","text":"DIError"},{"kind":"text","text":">"}],"symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveResult(_:)"},"references":{"doc://DiContainer/documentation/DiContainer/DIActor/resolveResult(_:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/dicontainer\/diactor\/resolveresult(_:)","abstract":[{"type":"text","text":"Result 패턴으로 타입을 해결합니다."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"resolveResult","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"DIError","preciseIdentifier":"s:11DiContainer7DIErrorO"},{"text":">","kind":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveResult(_:)","title":"resolveResult(_:)"},"doc://DiContainer/documentation/DiContainer/DIActor":{"title":"DIActor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"url":"\/documentation\/dicontainer\/diactor","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/DIError":{"navigatorTitle":[{"text":"DIError","kind":"identifier"}],"title":"DIError","url":"\/documentation\/dicontainer\/dierror","abstract":[{"text":"Dependency Injection 관련 에러를 나타내는 열거형입니다.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIError","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIError","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"}}}