{"topicSections":[{"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/sharedUnownedExecutor"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/globalactor-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"roleHeading":"API Collection","role":"collectionGroup","title":"GlobalActor Implementations","modules":[{"name":"DiContainer"}]},"kind":"article","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/GlobalActor-Implementations","interfaceLanguage":"swift"},"references":{"doc://DiContainer/documentation/DiContainer/DIActor/sharedUnownedExecutor":{"abstract":[],"title":"sharedUnownedExecutor","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sharedUnownedExecutor"},{"text":": ","kind":"text"},{"text":"UnownedSerialExecutor","preciseIdentifier":"s:Sce","kind":"typeIdentifier"}],"url":"\/documentation\/dicontainer\/diactor\/sharedunownedexecutor","kind":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/sharedUnownedExecutor","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","title":"DiContainer","type":"topic","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/DIActor":{"kind":"symbol","title":"DIActor","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"type":"topic","url":"\/documentation\/dicontainer\/diactor","role":"symbol"}}}