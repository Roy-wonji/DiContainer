{"kind":"article","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"sections":[],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/GlobalActor-Implementations","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/globalactor-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/sharedUnownedExecutor"]}],"metadata":{"role":"collectionGroup","title":"GlobalActor Implementations","modules":[{"name":"DiContainer"}],"roleHeading":"API Collection"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://DiContainer/documentation/DiContainer/DIActor/sharedUnownedExecutor":{"title":"sharedUnownedExecutor","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/sharedUnownedExecutor","abstract":[],"type":"topic","url":"\/documentation\/dicontainer\/diactor\/sharedunownedexecutor","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"sharedUnownedExecutor","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnownedSerialExecutor","kind":"typeIdentifier","preciseIdentifier":"s:Sce"}]},"doc://DiContainer/documentation/DiContainer/DIActor":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"url":"\/documentation\/dicontainer\/diactor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"role":"symbol","title":"DIActor"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","role":"collection","kind":"symbol","url":"\/documentation\/dicontainer"}}}