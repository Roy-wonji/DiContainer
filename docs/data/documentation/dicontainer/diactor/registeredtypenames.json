{"abstract":[{"type":"text","text":"등록된 모든 타입 이름을 반환합니다."}],"sections":[],"kind":"symbol","metadata":{"externalID":"s:11DiContainer7DIActorC19registeredTypeNamesSaySSGvp","symbolKind":"property","role":"symbol","title":"registeredTypeNames","roleHeading":"Instance Property","modules":[{"name":"DiContainer"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"registeredTypeNames"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}]},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/registeredtypenames"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"registeredTypeNames"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"] { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames"},"references":{"doc://DiContainer/documentation/DiContainer":{"type":"topic","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","role":"collection","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActor":{"title":"DIActor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"url":"\/documentation\/dicontainer\/diactor","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/DIActor/registeredTypeNames":{"title":"registeredTypeNames","role":"symbol","abstract":[{"text":"등록된 모든 타입 이름을 반환합니다.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"kind":"symbol","url":"\/documentation\/dicontainer\/diactor\/registeredtypenames","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames"}}}