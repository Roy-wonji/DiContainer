{"abstract":[{"type":"text","text":"등록된 모든 타입 이름을 반환합니다."}],"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/registeredtypenames"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"] { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"sections":[],"metadata":{"roleHeading":"Instance Property","externalID":"s:11DiContainer7DIActorC19registeredTypeNamesSaySSGvp","modules":[{"name":"DiContainer"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"symbolKind":"property","role":"symbol","title":"registeredTypeNames"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames"},"references":{"doc://DiContainer/documentation/DiContainer/DIActor":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"url":"\/documentation\/dicontainer\/diactor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"role":"symbol","title":"DIActor"},"doc://DiContainer/documentation/DiContainer/DIActor/registeredTypeNames":{"abstract":[{"text":"등록된 모든 타입 이름을 반환합니다.","type":"text"}],"kind":"symbol","url":"\/documentation\/dicontainer\/diactor\/registeredtypenames","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]","kind":"text"}],"title":"registeredTypeNames","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","role":"collection","kind":"symbol","url":"\/documentation\/dicontainer"}}}