{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"] { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]}],"metadata":{"role":"symbol","roleHeading":"Instance Property","externalID":"s:11DiContainer7DIActorC19registeredTypeNamesSaySSGvp","symbolKind":"property","title":"registeredTypeNames","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]","kind":"text"}],"modules":[{"name":"DiContainer"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames"},"abstract":[{"type":"text","text":"등록된 모든 타입 이름을 반환합니다."}],"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/registeredtypenames"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://DiContainer/documentation/DiContainer/DIActor":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","title":"DIActor","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"abstract":[{"text":"Thread-safe DI operations을 위한 Actor 기반 구현","type":"text"}],"kind":"symbol","url":"\/documentation\/dicontainer\/diactor","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer/DIActor/registeredTypeNames":{"abstract":[{"text":"등록된 모든 타입 이름을 반환합니다.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"registeredTypeNames"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"]"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames","role":"symbol","title":"registeredTypeNames","url":"\/documentation\/dicontainer\/diactor\/registeredtypenames"},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic"}}}