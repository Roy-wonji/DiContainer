{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/dicontainer\/diactor\/registeredtypenames"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"DiContainer"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]","kind":"text"}],"externalID":"s:11DiContainer7DIActorC19registeredTypeNamesSaySSGvp","title":"registeredTypeNames"},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"abstract":[{"text":"등록된 모든 타입 이름을 반환합니다.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"registeredTypeNames"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"] { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"references":{"doc://DiContainer/documentation/DiContainer/DIActor":{"navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"url":"\/documentation\/dicontainer\/diactor","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","type":"topic","abstract":[{"text":"Thread-safe DI operations을 위한 Actor 기반 구현","type":"text"}],"role":"symbol","kind":"symbol","title":"DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","url":"\/documentation\/dicontainer","kind":"symbol","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"type":"topic","role":"collection","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/DIActor/registeredTypeNames":{"abstract":[{"type":"text","text":"등록된 모든 타입 이름을 반환합니다."}],"role":"symbol","title":"registeredTypeNames","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"registeredTypeNames"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]"}],"url":"\/documentation\/dicontainer\/diactor\/registeredtypenames","kind":"symbol","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames"}}}