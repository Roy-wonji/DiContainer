{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"] { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/registeredtypenames"]}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"metadata":{"title":"registeredTypeNames","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"modules":[{"name":"DiContainer"}],"roleHeading":"Instance Property","role":"symbol","externalID":"s:11DiContainer7DIActorC19registeredTypeNamesSaySSGvp","symbolKind":"property"},"abstract":[{"text":"등록된 모든 타입 이름을 반환합니다.","type":"text"}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://DiContainer/documentation/DiContainer/DIActor":{"url":"\/documentation\/dicontainer\/diactor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DIActor"}],"title":"DIActor","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"abstract":[{"text":"Thread-safe DI operations을 위한 Actor 기반 구현","type":"text"}]},"doc://DiContainer/documentation/DiContainer/DIActor/registeredTypeNames":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/registeredTypeNames","url":"\/documentation\/dicontainer\/diactor\/registeredtypenames","title":"registeredTypeNames","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registeredTypeNames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]","kind":"text"}],"abstract":[{"text":"등록된 모든 타입 이름을 반환합니다.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol"}}}