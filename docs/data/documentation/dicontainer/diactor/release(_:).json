{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"release"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type)"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"해제할 타입"}]}]}]}],"metadata":{"role":"symbol","externalID":"s:11DiContainer7DIActorC7releaseyyxmlF","symbolKind":"method","modules":[{"name":"DiContainer"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"release"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type)"}],"title":"release(_:)","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/release(_:)"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/release(_:)"},"abstract":[{"text":"특정 타입의 등록을 해제합니다.","type":"text"}],"kind":"symbol","references":{"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","type":"topic","role":"collection"},"doc://DiContainer/documentation/DiContainer/DIActor/release(_:)":{"kind":"symbol","title":"release(_:)","abstract":[{"type":"text","text":"특정 타입의 등록을 해제합니다."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"release","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/release(_:)","url":"\/documentation\/dicontainer\/diactor\/release(_:)"},"doc://DiContainer/documentation/DiContainer/DIActor":{"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","navigatorTitle":[{"kind":"identifier","text":"DIActor"}],"abstract":[{"text":"Thread-safe DI operations을 위한 Actor 기반 구현","type":"text"}],"title":"DIActor","type":"topic","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActor"}],"url":"\/documentation\/dicontainer\/diactor","role":"symbol"}}}