{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"text":"해결할 타입","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"해결된 인스턴스"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"DIError.dependencyNotFound","type":"text"}]}],"type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/resolvethrows(_:)"]}],"abstract":[{"text":"throwing 방식으로 타입을 해결합니다.","type":"text"}],"sections":[],"metadata":{"modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer7DIActorC13resolveThrowsyxxmYaKs8SendableRzlF","roleHeading":"Instance Method","title":"resolveThrows(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveThrows(_:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"references":{"doc://DiContainer/documentation/DiContainer/DIActor/resolveThrows(_:)":{"title":"resolveThrows(_:)","type":"topic","abstract":[{"type":"text","text":"throwing 방식으로 타입을 해결합니다."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/dicontainer\/diactor\/resolvethrows(_:)","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveThrows(_:)","role":"symbol","kind":"symbol"},"doc://DiContainer/documentation/DiContainer":{"abstract":[],"type":"topic","title":"DiContainer","role":"collection","url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/DIActor":{"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","role":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"url":"\/documentation\/dicontainer\/diactor","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"title":"DIActor","type":"topic","abstract":[{"text":"Thread-safe DI operations을 위한 Actor 기반 구현","type":"text"}]}}}