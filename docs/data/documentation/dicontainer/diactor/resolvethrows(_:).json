{"abstract":[{"type":"text","text":"throwing 방식으로 타입을 해결합니다."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/resolvethrows(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveThrows"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"해결할 타입"}],"type":"paragraph"}],"name":"type"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"해결된 인스턴스"}]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"content":[{"type":"paragraph","inlineContent":[{"text":"DIError.dependencyNotFound","type":"text"}]}],"type":"aside","style":"note","name":"Throws"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveThrows(_:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"symbolKind":"method","externalID":"s:11DiContainer7DIActorC13resolveThrowsyxxmKs8SendableRzlF","title":"resolveThrows(_:)","modules":[{"name":"DiContainer"}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolveThrows"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}]},"references":{"doc://DiContainer/documentation/DiContainer/DIActor/resolveThrows(_:)":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/resolveThrows(_:)","abstract":[{"type":"text","text":"throwing 방식으로 타입을 해결합니다."}],"title":"resolveThrows(_:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolveThrows","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/dicontainer\/diactor\/resolvethrows(_:)","role":"symbol"},"doc://DiContainer/documentation/DiContainer":{"url":"\/documentation\/dicontainer","kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","type":"topic","role":"collection"},"doc://DiContainer/documentation/DiContainer/DIActor":{"kind":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","navigatorTitle":[{"kind":"identifier","text":"DIActor"}],"abstract":[{"text":"Thread-safe DI operations을 위한 Actor 기반 구현","type":"text"}],"title":"DIActor","type":"topic","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIActor"}],"url":"\/documentation\/dicontainer\/diactor","role":"symbol"}}}