{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/shared"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11DiContainer7DIActorC","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","text":"DIActor","kind":"typeIdentifier"}]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"DiContainer"}],"roleHeading":"Type Property","title":"shared","externalID":"s:11DiContainer7DIActorC6sharedACvpZ","symbolKind":"property","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DIActor","preciseIdentifier":"s:11DiContainer7DIActorC"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"GlobalActor.shared"},{"text":".","type":"text"}],"references":{"doc://DiContainer/documentation/DiContainer/DIActor":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","type":"topic","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"url":"\/documentation\/dicontainer\/diactor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"role":"symbol","title":"DIActor"},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}],"title":"DiContainer","role":"collection","kind":"symbol","url":"\/documentation\/dicontainer"},"doc://DiContainer/documentation/DiContainer/DIActor/shared":{"title":"shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DIActor","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer7DIActorC"}],"url":"\/documentation\/dicontainer\/diactor\/shared","type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared","kind":"symbol"}}}