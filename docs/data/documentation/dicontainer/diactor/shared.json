{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared"},"sections":[],"metadata":{"title":"shared","symbolKind":"property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DIActor","preciseIdentifier":"s:11DiContainer7DIActorC"}],"roleHeading":"Type Property","role":"symbol","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer7DIActorC6sharedACvpZ"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11DiContainer7DIActorC","kind":"typeIdentifier","text":"DIActor","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/shared"]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"GlobalActor.shared"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","role":"collection","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActor/shared":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared","title":"shared","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DIActor","preciseIdentifier":"s:11DiContainer7DIActorC","kind":"typeIdentifier"}],"url":"\/documentation\/dicontainer\/diactor\/shared","kind":"symbol","role":"symbol","abstract":[],"type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActor":{"type":"topic","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","kind":"symbol","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"title":"DIActor","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"url":"\/documentation\/dicontainer\/diactor"}}}