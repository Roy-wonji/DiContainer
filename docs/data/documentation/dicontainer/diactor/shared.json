{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DIActor","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer7DIActorC"}],"languages":["swift"]}]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"GlobalActor.shared","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"modules":[{"name":"DiContainer"}],"role":"symbol","roleHeading":"Type Property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DIActor","kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer7DIActorC"}],"title":"shared","externalID":"s:11DiContainer7DIActorC6sharedACvpZ","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/shared"]}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://DiContainer/documentation/DiContainer":{"title":"DiContainer","kind":"symbol","url":"\/documentation\/dicontainer","role":"collection","type":"topic","abstract":[{"text":"A modern, high-performance dependency injection framework designed for Swift Concurrency and Actor models.","type":"text"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer"},"doc://DiContainer/documentation/DiContainer/DIActor":{"kind":"symbol","navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"url":"\/documentation\/dicontainer\/diactor","role":"symbol","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"title":"DIActor","type":"topic"},"doc://DiContainer/documentation/DiContainer/DIActor/shared":{"url":"\/documentation\/dicontainer\/diactor\/shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11DiContainer7DIActorC","text":"DIActor","kind":"typeIdentifier"}],"kind":"symbol","title":"shared","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared","role":"symbol","abstract":[],"type":"topic"}}}