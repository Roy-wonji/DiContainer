{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","preciseIdentifier":"s:11DiContainer7DIActorC","text":"DIActor","kind":"typeIdentifier"}],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dicontainer\/diactor\/shared"]}],"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Type Property","modules":[{"name":"DiContainer"}],"externalID":"s:11DiContainer7DIActorC6sharedACvpZ","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11DiContainer7DIActorC","text":"DIActor"}],"title":"shared","symbolKind":"property"},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"GlobalActor.shared"},{"type":"text","text":"."}],"references":{"doc://DiContainer/documentation/DiContainer":{"role":"collection","type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","url":"\/documentation\/dicontainer","abstract":[{"text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크","type":"text"}],"title":"DiContainer","kind":"symbol"},"doc://DiContainer/documentation/DiContainer/DIActor":{"role":"symbol","type":"topic","url":"\/documentation\/dicontainer\/diactor","abstract":[{"type":"text","text":"Thread-safe DI operations을 위한 Actor 기반 구현"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor","fragments":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DIActor","kind":"identifier"}],"navigatorTitle":[{"text":"DIActor","kind":"identifier"}],"kind":"symbol","title":"DIActor"},"doc://DiContainer/documentation/DiContainer/DIActor/shared":{"abstract":[],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11DiContainer7DIActorC","kind":"typeIdentifier","text":"DIActor"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIActor\/shared","title":"shared","url":"\/documentation\/dicontainer\/diactor\/shared"}}}