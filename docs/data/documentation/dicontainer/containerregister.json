{"abstract":[{"text":"사용자가 원하는 ContainerRegister 이름으로 사용할 수 있도록 typealias 제공","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerRegister"},"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"anchor":"프로퍼티-래퍼-확장","identifiers":["doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers","doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyKeyPatterns"],"title":"프로퍼티 래퍼 확장","generated":true}],"kind":"symbol","variants":[{"paths":["\/documentation\/dicontainer\/containerregister"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"modules":[{"name":"DiContainer"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerRegister","kind":"identifier"}],"symbolKind":"typealias","roleHeading":"Type Alias","role":"symbol","title":"ContainerRegister","externalID":"s:11DiContainer0B8Registera","navigatorTitle":[{"text":"ContainerRegister","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerRegister","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:11DiContainer17RegisterAndReturnO","text":"RegisterAndReturn","kind":"typeIdentifier","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RegisterAndReturn"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"%EC%82%AC%EC%9A%A9%EB%B2%95","type":"heading","text":"사용법:"},{"code":["public static var liveValue: BookListInterface = {","    let repository = ContainerRegister.register(\\.bookListInterface) {","        BookListRepositoryImpl()","    }","    return BookListUseCaseImpl(repository: repository)","}()"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer"]]},"references":{"doc://DiContainer/documentation/DiContainer/RegisterAndReturn":{"kind":"symbol","url":"\/documentation\/dicontainer\/registerandreturn","type":"topic","role":"symbol","title":"RegisterAndReturn","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegisterAndReturn"}],"abstract":[{"type":"text","text":"등록과 동시에 값을 반환하는 KeyPath 기반 시스템"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/RegisterAndReturn","navigatorTitle":[{"kind":"identifier","text":"RegisterAndReturn"}]},"doc://DiContainer/documentation/DiContainer/DependencyKeyPatterns":{"url":"\/documentation\/dicontainer\/dependencykeypatterns","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DependencyKeyPatterns","abstract":[{"type":"text","text":"의존성 해석을 안전하게 하기 위한 DependencyKey 패턴을 정리합니다."}],"title":"DependencyKey Patterns","type":"topic","kind":"article","role":"article"},"doc://DiContainer/documentation/DiContainer/PropertyWrappers":{"abstract":[{"type":"text","text":"DiContainer의 강력한 Property Wrapper들을 활용하여 선언적이고 타입 안전한 의존성 주입을 구현하는 방법"}],"type":"topic","role":"article","url":"\/documentation\/dicontainer\/propertywrappers","title":"Property Wrapper 가이드","kind":"article","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/PropertyWrappers"},"doc://DiContainer/documentation/DiContainer/ContainerRegister":{"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerRegister","kind":"identifier"}],"abstract":[{"text":"사용자가 원하는 ContainerRegister 이름으로 사용할 수 있도록 typealias 제공","type":"text"}],"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/ContainerRegister","url":"\/documentation\/dicontainer\/containerregister","title":"ContainerRegister","role":"symbol","navigatorTitle":[{"text":"ContainerRegister","kind":"identifier"}]},"doc://DiContainer/documentation/DiContainer":{"type":"topic","identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","kind":"symbol","title":"DiContainer","url":"\/documentation\/dicontainer","role":"collection","abstract":[{"type":"text","text":"현대적인 Swift Concurrency와 Actor 모델을 위해 설계된 고성능 의존성 주입 프레임워크"}]}}}