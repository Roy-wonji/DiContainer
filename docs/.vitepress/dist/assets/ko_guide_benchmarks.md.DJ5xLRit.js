import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.CXStv6TN.js";const o=JSON.parse('{"title":"벤치마크","description":"","frontmatter":{},"headers":[],"relativePath":"ko/guide/benchmarks.md","filePath":"ko/guide/benchmarks.md","lastUpdated":null}'),l={name:"ko/guide/benchmarks.md"};function t(h,s,p,r,k,d){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="벤치마크" tabindex="-1">벤치마크 <a class="header-anchor" href="#벤치마크" aria-label="Permalink to &quot;벤치마크&quot;">​</a></h1><p>WeaveDI와 다른 DI 프레임워크들 간의 성능 비교 및 벤치마킹 결과입니다.</p><h2 id="개요" tabindex="-1">개요 <a class="header-anchor" href="#개요" aria-label="Permalink to &quot;개요&quot;">​</a></h2><p>WeaveDI 3.1+은 Swinject나 Needle과 같은 기존 DI 프레임워크 대비 상당한 성능 향상을 제공합니다. 이 페이지에서는 포괄적인 벤치마킹 결과와 방법론을 제공합니다.</p><h2 id="성능-비교" tabindex="-1">성능 비교 <a class="header-anchor" href="#성능-비교" aria-label="Permalink to &quot;성능 비교&quot;">​</a></h2><h3 id="프레임워크-비교" tabindex="-1">프레임워크 비교 <a class="header-anchor" href="#프레임워크-비교" aria-label="Permalink to &quot;프레임워크 비교&quot;">​</a></h3><table tabindex="0"><thead><tr><th>시나리오</th><th>Swinject</th><th>Needle</th><th>WeaveDI 3.1</th><th>향상도</th></tr></thead><tbody><tr><td>단일 의존성 해결</td><td>1.2ms</td><td>0.8ms</td><td>0.2ms</td><td><strong>Needle 대비 83%</strong></td></tr><tr><td>복잡한 의존성 그래프</td><td>25.6ms</td><td>15.6ms</td><td>3.1ms</td><td><strong>Needle 대비 80%</strong></td></tr><tr><td>MainActor UI 업데이트</td><td>5.1ms</td><td>3.1ms</td><td>0.6ms</td><td><strong>Needle 대비 81%</strong></td></tr><tr><td>Swift 6 동시성</td><td>❌</td><td>⚠️ 부분적</td><td>✅ 완전 지원</td><td><strong>네이티브 지원</strong></td></tr></tbody></table><h3 id="런타임-최적화-결과" tabindex="-1">런타임 최적화 결과 <a class="header-anchor" href="#런타임-최적화-결과" aria-label="Permalink to &quot;런타임 최적화 결과&quot;">​</a></h3><p>v3.2.0에서 런타임 최적화를 활성화한 경우:</p><table tabindex="0"><thead><tr><th>시나리오</th><th>향상도</th><th>설명</th></tr></thead><tbody><tr><td>단일 스레드 해결</td><td>50-80% 빠름</td><td>TypeID + 직접 접근</td></tr><tr><td>멀티 스레드 읽기</td><td>2-3배 처리량</td><td>락-프리 스냅샷</td></tr><tr><td>복잡한 의존성</td><td>20-40% 빠름</td><td>체인 평탄화</td></tr></tbody></table><h2 id="벤치마크-실행" tabindex="-1">벤치마크 실행 <a class="header-anchor" href="#벤치마크-실행" aria-label="Permalink to &quot;벤치마크 실행&quot;">​</a></h2><h3 id="전제-조건" tabindex="-1">전제 조건 <a class="header-anchor" href="#전제-조건" aria-label="Permalink to &quot;전제 조건&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 저장소 클론</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Roy-wonji/WeaveDI.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WeaveDI</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="기본-벤치마크" tabindex="-1">기본 벤치마크 <a class="header-anchor" href="#기본-벤치마크" aria-label="Permalink to &quot;기본 벤치마크&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 표준 벤치마크 실행</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swift</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Benchmarks</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 사용자 정의 반복으로 빠른 벤치마크</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swift</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Benchmarks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 100k</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --quick</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 포괄적인 벤치마크 스위트</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swift</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Benchmarks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --full</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --iterations</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="최적화-벤치마크" tabindex="-1">최적화 벤치마크 <a class="header-anchor" href="#최적화-벤치마크" aria-label="Permalink to &quot;최적화 벤치마크&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 최적화 vs 표준 비교</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swift</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Benchmarks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --compare-optimization</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 메모리 사용량 프로파일링</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swift</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Benchmarks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --profile-memory</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Actor hop 분석</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swift</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Benchmarks</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --actor-analysis</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="벤치마크-방법론" tabindex="-1">벤치마크 방법론 <a class="header-anchor" href="#벤치마크-방법론" aria-label="Permalink to &quot;벤치마크 방법론&quot;">​</a></h2><h3 id="테스트-환경" tabindex="-1">테스트 환경 <a class="header-anchor" href="#테스트-환경" aria-label="Permalink to &quot;테스트 환경&quot;">​</a></h3><ul><li><strong>기기</strong>: MacBook Pro M2 Max</li><li><strong>RAM</strong>: 32GB 통합 메모리</li><li><strong>Swift</strong>: 6.0+</li><li><strong>Xcode</strong>: 16.0+</li><li><strong>릴리스 빌드</strong>: <code>-c release</code> 최적화 포함</li></ul><h3 id="테스트-시나리오" tabindex="-1">테스트 시나리오 <a class="header-anchor" href="#테스트-시나리오" aria-label="Permalink to &quot;테스트 시나리오&quot;">​</a></h3><h4 id="_1-단일-의존성-해결" tabindex="-1">1. 단일 의존성 해결 <a class="header-anchor" href="#_1-단일-의존성-해결" aria-label="Permalink to &quot;1. 단일 의존성 해결&quot;">​</a></h4><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 단일 해결 시간 측정</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CFAbsoluteTimeGetCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> service </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> container.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UserService.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> elapsed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CFAbsoluteTimeGetCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-복잡한-의존성-그래프" tabindex="-1">2. 복잡한 의존성 그래프 <a class="header-anchor" href="#_2-복잡한-의존성-그래프" aria-label="Permalink to &quot;2. 복잡한 의존성 그래프&quot;">​</a></h4><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10개 이상의 중첩된 의존성을 가진 서비스</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ComplexService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userService: UserService</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> analyticsService: AnalyticsService</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> networkService: NetworkService</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ... 7개 이상의 추가 의존성</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="_3-mainactor-ui-업데이트" tabindex="-1">3. MainActor UI 업데이트 <a class="header-anchor" href="#_3-mainactor-ui-업데이트" aria-label="Permalink to &quot;3. MainActor UI 업데이트&quot;">​</a></h4><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@MainActor</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ViewController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @Inject</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userService: UserService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> updateUI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Actor hop 최적화 측정</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fetchData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        updateInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 이미 MainActor에서 실행</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="메모리-프로파일링" tabindex="-1">메모리 프로파일링 <a class="header-anchor" href="#메모리-프로파일링" aria-label="Permalink to &quot;메모리 프로파일링&quot;">​</a></h2><h3 id="메모리-사용량-비교" tabindex="-1">메모리 사용량 비교 <a class="header-anchor" href="#메모리-사용량-비교" aria-label="Permalink to &quot;메모리 사용량 비교&quot;">​</a></h3><table tabindex="0"><thead><tr><th>프레임워크</th><th>기본 메모리</th><th>등록당 메모리</th><th>최대 메모리</th></tr></thead><tbody><tr><td>Swinject</td><td>2.5MB</td><td>145KB</td><td>25.8MB</td></tr><tr><td>Needle</td><td>1.8MB</td><td>89KB</td><td>18.2MB</td></tr><tr><td>WeaveDI</td><td>1.2MB</td><td>52KB</td><td>12.4MB</td></tr></tbody></table><h3 id="메모리-효율성-기능" tabindex="-1">메모리 효율성 기능 <a class="header-anchor" href="#메모리-효율성-기능" aria-label="Permalink to &quot;메모리 효율성 기능&quot;">​</a></h3><ol><li><strong>지연 해결</strong>: 의존성은 액세스 시에만 해결됨</li><li><strong>약한 참조</strong>: 스코프 인스턴스의 자동 메모리 관리</li><li><strong>최적화된 스토리지</strong>: 최소 오버헤드 데이터 구조</li><li><strong>스코프 분리</strong>: 스코프 간 효율적인 메모리 격리</li></ol><h2 id="동시성-벤치마크" tabindex="-1">동시성 벤치마크 <a class="header-anchor" href="#동시성-벤치마크" aria-label="Permalink to &quot;동시성 벤치마크&quot;">​</a></h2><h3 id="actor-모델-성능" tabindex="-1">Actor 모델 성능 <a class="header-anchor" href="#actor-모델-성능" aria-label="Permalink to &quot;Actor 모델 성능&quot;">​</a></h3><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// WeaveDI 네이티브 async/await 지원</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@MainActor</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UIService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @Inject</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dataService: DataService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> loadData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Actor hop 불필요 - 최적화된 경로</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dataService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        updateUI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="스레드-안전성-비교" tabindex="-1">스레드 안전성 비교 <a class="header-anchor" href="#스레드-안전성-비교" aria-label="Permalink to &quot;스레드 안전성 비교&quot;">​</a></h3><table tabindex="0"><thead><tr><th>측면</th><th>Swinject</th><th>Needle</th><th>WeaveDI</th></tr></thead><tbody><tr><td>스레드 안전성</td><td>⚠️ 수동 락</td><td>✅ 컴파일 타임</td><td>✅ 네이티브 async/await</td></tr><tr><td>Actor 지원</td><td>❌</td><td>⚠️ 제한적</td><td>✅ 완전 통합</td></tr><tr><td>동시성 모델</td><td>구식 GCD</td><td>혼재</td><td>Swift Concurrency</td></tr><tr><td>데이터 레이스</td><td>가능함</td><td>드물음</td><td>제거됨</td></tr></tbody></table><h2 id="고급-벤치마킹" tabindex="-1">고급 벤치마킹 <a class="header-anchor" href="#고급-벤치마킹" aria-label="Permalink to &quot;고급 벤치마킹&quot;">​</a></h2><h3 id="사용자-정의-벤치마크-설정" tabindex="-1">사용자 정의 벤치마크 설정 <a class="header-anchor" href="#사용자-정의-벤치마크-설정" aria-label="Permalink to &quot;사용자 정의 벤치마크 설정&quot;">​</a></h3><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WeaveDI</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Foundation</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomBenchmark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> measureResolutionTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: T.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TimeInterval {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CFAbsoluteTimeGetCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> _</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            let</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> _</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UnifiedDI.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(type)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CFAbsoluteTimeGetCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="instruments로-프로파일링" tabindex="-1">Instruments로 프로파일링 <a class="header-anchor" href="#instruments로-프로파일링" aria-label="Permalink to &quot;Instruments로 프로파일링&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Instruments로 프로파일링</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xcodebuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -scheme</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WeaveDI</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -configuration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -destination</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;platform=iOS Simulator,name=iPhone 15 Pro&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -resultBundlePath</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BenchmarkResults.xcresult</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="성능-팁" tabindex="-1">성능 팁 <a class="header-anchor" href="#성능-팁" aria-label="Permalink to &quot;성능 팁&quot;">​</a></h2><h3 id="최적화-가이드라인" tabindex="-1">최적화 가이드라인 <a class="header-anchor" href="#최적화-가이드라인" aria-label="Permalink to &quot;최적화 가이드라인&quot;">​</a></h3><ol><li><p><strong>런타임 최적화 활성화</strong>:</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UnifiedRegistry.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">enableOptimization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>프로퍼티 래퍼 사용</strong>:</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@Inject</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> service: UserService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 최적화된 주입</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>스코프 활용</strong>:</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UnifiedDI.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">registerScoped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Service.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .singleton) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ExpensiveService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><strong>배치 등록</strong>:</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UnifiedDI.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">batchRegister</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { container </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    container.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ServiceA.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ServiceAImpl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    container.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ServiceB.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ServiceBImpl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ol><h2 id="결과-분석" tabindex="-1">결과 분석 <a class="header-anchor" href="#결과-분석" aria-label="Permalink to &quot;결과 분석&quot;">​</a></h2><h3 id="핵심-성능-통찰" tabindex="-1">핵심 성능 통찰 <a class="header-anchor" href="#핵심-성능-통찰" aria-label="Permalink to &quot;핵심 성능 통찰&quot;">​</a></h3><ol><li><strong>Needle 대비 83% 빠름</strong>: TypeID 기반 해결로 리플렉션 오버헤드 제거</li><li><strong>Swinject 대비 90% 빠름</strong>: 컴파일 타임 안전성으로 런타임 검증 제거</li><li><strong>Actor 최적화</strong>: MainActor UI 업데이트 시간 81% 감소</li><li><strong>메모리 효율성</strong>: 등록당 메모리 사용량 52% 감소</li></ol><h3 id="실제-영향" tabindex="-1">실제 영향 <a class="header-anchor" href="#실제-영향" aria-label="Permalink to &quot;실제 영향&quot;">​</a></h3><ul><li><strong>앱 시작 시간</strong>: 의존성 초기화 40-60% 빨라짐</li><li><strong>UI 응답성</strong>: Actor hop 감소로 더 부드러운 애니메이션</li><li><strong>배터리 수명</strong>: 최적화된 해결 경로로 CPU 사용량 감소</li><li><strong>개발 경험</strong>: 더 빠른 디버그 빌드 및 테스트</li></ul><h2 id="지속적인-벤치마킹" tabindex="-1">지속적인 벤치마킹 <a class="header-anchor" href="#지속적인-벤치마킹" aria-label="Permalink to &quot;지속적인 벤치마킹&quot;">​</a></h2><h3 id="ci-통합" tabindex="-1">CI 통합 <a class="header-anchor" href="#ci-통합" aria-label="Permalink to &quot;CI 통합&quot;">​</a></h3><p>WeaveDI 프로젝트는 CI에서 자동 벤치마킹을 포함합니다:</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .github/workflows/benchmark.yml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Performance Benchmarks</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pull_request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  benchmark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">macos-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Run Benchmarks</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">swift run -c release Benchmarks --ci</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="회귀-감지" tabindex="-1">회귀 감지 <a class="header-anchor" href="#회귀-감지" aria-label="Permalink to &quot;회귀 감지&quot;">​</a></h3><p>성능 회귀는 자동으로 감지되고 보고됩니다:</p><ul><li><strong>임계값</strong>: 5% 성능 저하 시 CI 실패</li><li><strong>비교</strong>: 이전 릴리스 기준선과 비교</li><li><strong>보고</strong>: PR 댓글에 상세한 성능 보고서</li></ul><h2 id="관련-문서" tabindex="-1">관련 문서 <a class="header-anchor" href="#관련-문서" aria-label="Permalink to &quot;관련 문서&quot;">​</a></h2><ul><li><a href="/WeaveDI/ko/guide/runtime-optimization.html">런타임 최적화</a> - 성능 최적화 가이드</li><li><a href="/WeaveDI/ko/guide/runtime-optimization.html">성능 최적화 가이드</a> - 상세한 최적화 기술</li><li><a href="/WeaveDI/ko/api/core-apis.html">코어 API</a> - API 성능 특성</li></ul>`,59)])])}const g=i(l,[["render",t]]);export{o as __pageData,g as default};
