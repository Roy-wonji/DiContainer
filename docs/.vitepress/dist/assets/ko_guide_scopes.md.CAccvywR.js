import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.CXStv6TN.js";const c=JSON.parse('{"title":"스코프 가이드 (Screen / Session / Request)","description":"","frontmatter":{},"headers":[],"relativePath":"ko/guide/scopes.md","filePath":"ko/guide/scopes.md","lastUpdated":1758968598000}'),l={name:"ko/guide/scopes.md"};function t(p,s,h,r,k,d){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="스코프-가이드-screen-session-request" tabindex="-1">스코프 가이드 (Screen / Session / Request) <a class="header-anchor" href="#스코프-가이드-screen-session-request" aria-label="Permalink to &quot;스코프 가이드 (Screen / Session / Request)&quot;">​</a></h1><p>WeaveDI는 화면/세션/요청 등 컨텍스트 단위로 의존성을 격리·캐시할 수 있는 스코프 기능을 제공합니다.</p><h2 id="왜-스코프가-필요한가" tabindex="-1">왜 스코프가 필요한가? <a class="header-anchor" href="#왜-스코프가-필요한가" aria-label="Permalink to &quot;왜 스코프가 필요한가?&quot;">​</a></h2><ul><li>한 화면에서만 유지되어야 할 상태(예: 화면 캐시)</li><li>사용자 세션과 함께 사라져야 하는 데이터(예: 사용자별 서비스)</li><li>요청 단위로 재사용되는 객체(예: RequestContext)</li></ul><h2 id="핵심-타입" tabindex="-1">핵심 타입 <a class="header-anchor" href="#핵심-타입" aria-label="Permalink to &quot;핵심 타입&quot;">​</a></h2><ul><li><code>ScopeKind</code>: <code>.screen</code>, <code>.session</code>, <code>.request</code></li><li><code>ScopeContext</code>: 현재 스코프 ID 관리 (<code>setCurrent(_:, id:)</code>, <code>clear(_:)</code>, <code>currentID(for:)</code>)</li><li><code>registerScoped</code> / <code>registerAsyncScoped</code>: 스코프 단위 등록</li></ul><h2 id="사용-예제" tabindex="-1">사용 예제 <a class="header-anchor" href="#사용-예제" aria-label="Permalink to &quot;사용 예제&quot;">​</a></h2><h3 id="스크린-스코프" tabindex="-1">스크린 스코프 <a class="header-anchor" href="#스크린-스코프" aria-label="Permalink to &quot;스크린 스코프&quot;">​</a></h3><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 화면 진입 시</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ScopeContext.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.screen, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Home&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GlobalUnifiedRegistry.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">registerScoped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HomeViewModel.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .screen) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    HomeViewModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UnifiedDI.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HomeViewModel.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 화면 종료 시</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ScopeContext.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.screen)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="세션-스코프" tabindex="-1">세션 스코프 <a class="header-anchor" href="#세션-스코프" aria-label="Permalink to &quot;세션 스코프&quot;">​</a></h3><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 로그인 성공 시</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ScopeContext.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.session, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: user.id)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GlobalUnifiedRegistry.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">registerScoped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UserSession.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .session) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    UserSession</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: user)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 세션 내 어디서든 재사용</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UnifiedDI.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UserSession.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 로그아웃 시</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ScopeContext.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.session)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="요청-스코프" tabindex="-1">요청 스코프 <a class="header-anchor" href="#요청-스코프" aria-label="Permalink to &quot;요청 스코프&quot;">​</a></h3><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ScopeContext.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setCurrent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.request, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UUID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().uuidString)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GlobalUnifiedRegistry.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">registerAsyncScoped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RequestContext.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .request) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RequestContext.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ctx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UnifiedDI.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resolveAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RequestContext.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ScopeContext.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.request)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="수명-주기-헬퍼-권장-패턴" tabindex="-1">수명 주기 헬퍼 (권장 패턴) <a class="header-anchor" href="#수명-주기-헬퍼-권장-패턴" aria-label="Permalink to &quot;수명 주기 헬퍼 (권장 패턴)&quot;">​</a></h2><ul><li>iOS 화면: <code>viewWillAppear</code>에서 <code>.screen</code> 설정, <code>viewDidDisappear</code>에서 해제</li><li>세션: 로그인/로그아웃 이벤트에서 <code>.session</code> 설정/해제</li><li>서버/백엔드 유사 아키텍처: 요청 수신 시 <code>.request</code> 설정, 완료 시 해제</li></ul><blockquote><p>주의: 스코프 ID가 설정되지 않은 경우, 스코프 등록은 일회성 생성으로 동작(캐시 없음)합니다.</p></blockquote><h2 id="문제-해결" tabindex="-1">문제 해결 <a class="header-anchor" href="#문제-해결" aria-label="Permalink to &quot;문제 해결&quot;">​</a></h2><ul><li>&quot;스코프가 적용되지 않아요&quot; → <code>ScopeContext.shared.currentID(for:)</code>가 nil인지 확인</li><li>&quot;메모리 누수?&quot; → 화면/세션 종료 시 <code>clear(_:)</code> 호출했는지 확인</li><li>&quot;동시성 안전?&quot; → UnifiedRegistry는 actor 기반이며 스코프 캐시는 내부에서 안전하게 동기화됩니다.</li></ul>`,18)])])}const o=i(l,[["render",t]]);export{c as __pageData,o as default};
