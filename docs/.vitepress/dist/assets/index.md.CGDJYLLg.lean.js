import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.CXStv6TN.js";const c=JSON.parse(`{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"WeaveDI","text":"Modern Dependency Injection for Swift","tagline":"Next-generation Swift DI framework - Superior to Needle & Swinject with Actor optimization","image":{"src":"/logo.svg","alt":"WeaveDI"},"actions":[{"theme":"brand","text":"Get Started","link":"/guide/quick-start"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/Roy-wonji/WeaveDI"}]},"features":[{"icon":"🚀","title":"Runtime Hot-Path Optimization (v3.2.0)","details":"50-80% performance improvement with TypeID + lock-free reads. Dictionary → Array slot for O(1) access, snapshot approach eliminates read contention."},{"icon":"🎭","title":"Actor Hop Optimization","details":"Intelligently optimizes transitions between different Actor contexts to maximize dependency resolution performance. Reduces MainActor UI updates by 81%."},{"icon":"🔒","title":"Complete Type Safety","details":"Compile-time verification through KeyPath-based registration, runtime safety with clear error messages, and leveraging Swift's powerful type system."},{"icon":"📝","title":"Intuitive Property Wrappers","details":"@Inject (automatic dependency injection), @Factory (factory pattern-based module management), @SafeInject (safe dependency injection with error handling)."},{"icon":"🏗️","title":"Powerful Module System","details":"AppDIContainer for app-wide dependency management, ModuleFactory for reusable module creation, Container for batch registration and parallel execution."},{"icon":"🧪","title":"Test-Friendly Design","details":"Easy registration of Mock objects for testing, independence between test states guaranteed, bootstrap reset for test container initialization."}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1758970581000}`),t={name:"index.md"};function r(l,s,p,h,d,o){return e(),a("div",null,[...s[0]||(s[0]=[n("",48)])])}const g=i(t,[["render",r]]);export{c as __pageData,g as default};
