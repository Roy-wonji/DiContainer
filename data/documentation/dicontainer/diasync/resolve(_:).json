{"identifier":{"url":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync\/resolve(_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"symbolKind":"method","role":"symbol","title":"resolve(_:)","roleHeading":"Type Method","externalID":"s:11DiContainer7DIAsyncO7resolveyxSgxmYalFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"modules":[{"name":"DiContainer"}]},"hierarchy":{"paths":[["doc:\/\/DiContainer\/documentation\/DiContainer","doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"Resolve an instance (async). Falls back to sync container if not found."}],"kind":"symbol","variants":[{"paths":["\/documentation\/dicontainer\/diasync\/resolve(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://DiContainer/documentation/DiContainer":{"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer","abstract":[],"url":"\/documentation\/dicontainer","kind":"symbol","role":"collection","title":"DiContainer","type":"topic"},"doc://DiContainer/documentation/DiContainer/DIAsync/resolve(_:)":{"title":"resolve(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync\/resolve(_:)","url":"\/documentation\/dicontainer\/diasync\/resolve(_:)","abstract":[{"text":"Resolve an instance (async). Falls back to sync container if not found.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://DiContainer/documentation/DiContainer/DIAsync":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DIAsync"}],"identifier":"doc:\/\/DiContainer\/documentation\/DiContainer\/DIAsync","kind":"symbol","role":"symbol","abstract":[{"text":"Concurrency-first DI API using actor-based registry.","type":"text"},{"text":" ","type":"text"},{"text":"Provides async register\/resolve without relying on GCD.","type":"text"}],"title":"DIAsync","url":"\/documentation\/dicontainer\/diasync","navigatorTitle":[{"kind":"identifier","text":"DIAsync"}]}}}